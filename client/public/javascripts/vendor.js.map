{"version":3,"file":"public/javascripts/vendor.js","sources":["vendor/scripts/jquery-1.8.2.js","vendor/scripts/lodash-0.9.1.js","vendor/scripts/backbone-0.9.2.js","node_modules/auto-reload-brunch/vendor/auto-reload.js","node_modules/jade-brunch/vendor/runtime.js","vendor/scripts/alertify.min.js","vendor/scripts/backbone.mediator.js","vendor/scripts/list.js"],"names":[],"mappingshuhltnzsourcesContent":["/*!\n * jQuery JavaScript Library v1.8.2\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2012 jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: Thu Sep 20 2012 21:13:05 GMT-0400 (Eastern Daylight Time)\n */\n(function( window, undefined ) {\nvar\n    // A central reference to the root jQuery(document)\n    rootjQuery,\n\n    // The deferred used on DOM ready\n    readyList,\n\n    // Use the correct document accordingly with window argument (sandbox)\n    document = window.document,\n    location = window.location,\n    navigator = window.navigator,\n\n    // Map over jQuery in case of overwrite\n    _jQuery = window.jQuery,\n\n    // Map over the $ in case of overwrite\n    _$ = window.$,\n\n    // Save a reference to some core methods\n    core_push = Array.prototype.push,\n    core_slice = Array.prototype.slice,\n    core_indexOf = Array.prototype.indexOf,\n    core_toString = Object.prototype.toString,\n    core_hasOwn = Object.prototype.hasOwnProperty,\n    core_trim = String.prototype.trim,\n\n    // Define a local copy of jQuery\n    jQuery = function( selector, context ) {\n        // The jQuery object is actually just the init constructor 'enhanced'\n        return new jQuery.fn.init( selector, context, rootjQuery );\n    },\n\n    // Used for matching numbers\n    core_pnum = /[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source,\n\n    // Used for detecting and trimming whitespace\n    core_rnotwhite = /\\S/,\n    core_rspace = /\\s+/,\n\n    // Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)\n    rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n    // A simple way to check for HTML strings\n    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n    rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/,\n\n    // Match a standalone tag\n    rsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n\n    // JSON RegExp\n    rvalidchars = /^[\\],:{}\\s]*$/,\n    rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g,\n    rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,\n    rvalidtokens = /\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/g,\n\n    // Matches dashed string for camelizing\n    rmsPrefix = /^-ms-/,\n    rdashAlpha = /-([\\da-z])/gi,\n\n    // Used by jQuery.camelCase as callback to replace()\n    fcamelCase = function( all, letter ) {\n        return ( letter + \"\" ).toUpperCase();\n    },\n\n    // The ready event handler and self cleanup method\n    DOMContentLoaded = function() {\n        if ( document.addEventListener ) {\n            document.removeEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\n            jQuery.ready();\n        } else if ( document.readyState === \"complete\" ) {\n            // we're here because readyState === \"complete\" in oldIE\n            // which is good enough for us to call the dom ready!\n            document.detachEvent( \"onreadystatechange\", DOMContentLoaded );\n            jQuery.ready();\n        }\n    },\n\n    // [[Class]] -> type pairs\n    class2type = {};\n\njQuery.fn = jQuery.prototype = {\n    constructor: jQuery,\n    init: function( selector, context, rootjQuery ) {\n        var match, elem, ret, doc;\n\n        // Handle $(\"\"), $(null), $(undefined), $(false)\n        if ( !selector ) {\n            return this;\n        }\n\n        // Handle $(DOMElement)\n        if ( selector.nodeType ) {\n            this.context = this[0] = selector;\n            this.length = 1;\n            return this;\n        }\n\n        // Handle HTML strings\n        if ( typeof selector === \"string\" ) {\n            if ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\n                // Assume that strings that start and end with <> are HTML and skip the regex check\n                match = [ null, selector, null ];\n\n            } else {\n                match = rquickExpr.exec( selector );\n            }\n\n            // Match html or make sure no context is specified for #id\n            if ( match && (match[1] || !context) ) {\n\n                // HANDLE: $(html) -> $(array)\n                if ( match[1] ) {\n                    context = context instanceof jQuery ? context[0] : context;\n                    doc = ( context && context.nodeType ? context.ownerDocument || context : document );\n\n                    // scripts is true for back-compat\n                    selector = jQuery.parseHTML( match[1], doc, true );\n                    if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n                        this.attr.call( selector, context, true );\n                    }\n\n                    return jQuery.merge( this, selector );\n\n                // HANDLE: $(#id)\n                } else {\n                    elem = document.getElementById( match[2] );\n\n                    // Check parentNode to catch when Blackberry 4.6 returns\n                    // nodes that are no longer in the document #6963\n                    if ( elem && elem.parentNode ) {\n                        // Handle the case where IE and Opera return items\n                        // by name instead of ID\n                        if ( elem.id !== match[2] ) {\n                            return rootjQuery.find( selector );\n                        }\n\n                        // Otherwise, we inject the element directly into the jQuery object\n                        this.length = 1;\n                        this[0] = elem;\n                    }\n\n                    this.context = document;\n                    this.selector = selector;\n                    return this;\n                }\n\n            // HANDLE: $(expr, $(...))\n            } else if ( !context || context.jquery ) {\n                return ( context || rootjQuery ).find( selector );\n\n            // HANDLE: $(expr, context)\n            // (which is just equivalent to: $(context).find(expr)\n            } else {\n                return this.constructor( context ).find( selector );\n            }\n\n        // HANDLE: $(function)\n        // Shortcut for document ready\n        } else if ( jQuery.isFunction( selector ) ) {\n            return rootjQuery.ready( selector );\n        }\n\n        if ( selector.selector !== undefined ) {\n            this.selector = selector.selector;\n            this.context = selector.context;\n        }\n\n        return jQuery.makeArray( selector, this );\n    },\n\n    // Start with an empty selector\n    selector: \"\",\n\n    // The current version of jQuery being used\n    jquery: \"1.8.2\",\n\n    // The default length of a jQuery object is 0\n    length: 0,\n\n    // The number of elements contained in the matched element set\n    size: function() {\n        return this.length;\n    },\n\n    toArray: function() {\n        return core_slice.call( this );\n    },\n\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function( num ) {\n        return num == null ?\n\n            // Return a 'clean' array\n            this.toArray() :\n\n            // Return just the object\n            ( num < 0 ? this[ this.length + num ] : this[ num ] );\n    },\n\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function( elems, name, selector ) {\n\n        // Build a new jQuery matched element set\n        var ret = jQuery.merge( this.constructor(), elems );\n\n        // Add the old object onto the stack (as a reference)\n        ret.prevObject = this;\n\n        ret.context = this.context;\n\n        if ( name === \"find\" ) {\n            ret.selector = this.selector + ( this.selector ? \" \" : \"\" ) + selector;\n        } else if ( name ) {\n            ret.selector = this.selector + \".\" + name + \"(\" + selector + \")\";\n        }\n\n        // Return the newly-formed element set\n        return ret;\n    },\n\n    // Execute a callback for every element in the matched set.\n    // (You can seed the arguments with an array of args, but this is\n    // only used internally.)\n    each: function( callback, args ) {\n        return jQuery.each( this, callback, args );\n    },\n\n    ready: function( fn ) {\n        // Add the callback\n        jQuery.ready.promise().done( fn );\n\n        return this;\n    },\n\n    eq: function( i ) {\n        i = +i;\n        return i === -1 ?\n            this.slice( i ) :\n            this.slice( i, i + 1 );\n    },\n\n    first: function() {\n        return this.eq( 0 );\n    },\n\n    last: function() {\n        return this.eq( -1 );\n    },\n\n    slice: function() {\n        return this.pushStack( core_slice.apply( this, arguments ),\n            \"slice\", core_slice.call(arguments).join(\",\") );\n    },\n\n    map: function( callback ) {\n        return this.pushStack( jQuery.map(this, function( elem, i ) {\n            return callback.call( elem, i, elem );\n        }));\n    },\n\n    end: function() {\n        return this.prevObject || this.constructor(null);\n    },\n\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: core_push,\n    sort: [].sort,\n    splice: [].splice\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.fn.init.prototype = jQuery.fn;\n\njQuery.extend = jQuery.fn.extend = function() {\n    var options, name, src, copy, copyIsArray, clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    // Handle a deep copy situation\n    if ( typeof target === \"boolean\" ) {\n        deep = target;\n        target = arguments[1] || {};\n        // skip the boolean and the target\n        i = 2;\n    }\n\n    // Handle case when target is a string or something (possible in deep copy)\n    if ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n        target = {};\n    }\n\n    // extend jQuery itself if only one argument is passed\n    if ( length === i ) {\n        target = this;\n        --i;\n    }\n\n    for ( ; i < length; i++ ) {\n        // Only deal with non-null/undefined values\n        if ( (options = arguments[ i ]) != null ) {\n            // Extend the base object\n            for ( name in options ) {\n                src = target[ name ];\n                copy = options[ name ];\n\n                // Prevent never-ending loop\n                if ( target === copy ) {\n                    continue;\n                }\n\n                // Recurse if we're merging plain objects or arrays\n                if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n                    if ( copyIsArray ) {\n                        copyIsArray = false;\n                        clone = src && jQuery.isArray(src) ? src : [];\n\n                    } else {\n                        clone = src && jQuery.isPlainObject(src) ? src : {};\n                    }\n\n                    // Never move original objects, clone them\n                    target[ name ] = jQuery.extend( deep, clone, copy );\n\n                // Don't bring in undefined values\n                } else if ( copy !== undefined ) {\n                    target[ name ] = copy;\n                }\n            }\n        }\n    }\n\n    // Return the modified object\n    return target;\n};\n\njQuery.extend({\n    noConflict: function( deep ) {\n        if ( window.$ === jQuery ) {\n            window.$ = _$;\n        }\n\n        if ( deep && window.jQuery === jQuery ) {\n            window.jQuery = _jQuery;\n        }\n\n        return jQuery;\n    },\n\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n\n    // Hold (or release) the ready event\n    holdReady: function( hold ) {\n        if ( hold ) {\n            jQuery.readyWait++;\n        } else {\n            jQuery.ready( true );\n        }\n    },\n\n    // Handle when the DOM is ready\n    ready: function( wait ) {\n\n        // Abort if there are pending holds or we're already ready\n        if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n            return;\n        }\n\n        // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n        if ( !document.body ) {\n            return setTimeout( jQuery.ready, 1 );\n        }\n\n        // Remember that the DOM is ready\n        jQuery.isReady = true;\n\n        // If a normal DOM Ready event fired, decrement, and wait if need be\n        if ( wait !== true && --jQuery.readyWait > 0 ) {\n            return;\n        }\n\n        // If there are functions bound, to execute\n        readyList.resolveWith( document, [ jQuery ] );\n\n        // Trigger any bound ready events\n        if ( jQuery.fn.trigger ) {\n            jQuery( document ).trigger(\"ready\").off(\"ready\");\n        }\n    },\n\n    // See test/unit/core.js for details concerning isFunction.\n    // Since version 1.3, DOM methods and functions like alert\n    // aren't supported. They return false on IE (#2968).\n    isFunction: function( obj ) {\n        return jQuery.type(obj) === \"function\";\n    },\n\n    isArray: Array.isArray || function( obj ) {\n        return jQuery.type(obj) === \"array\";\n    },\n\n    isWindow: function( obj ) {\n        return obj != null && obj == obj.window;\n    },\n\n    isNumeric: function( obj ) {\n        return !isNaN( parseFloat(obj) ) && isFinite( obj );\n    },\n\n    type: function( obj ) {\n        return obj == null ?\n            String( obj ) :\n            class2type[ core_toString.call(obj) ] || \"object\";\n    },\n\n    isPlainObject: function( obj ) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if ( !obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n            return false;\n        }\n\n        try {\n            // Not own constructor property must be Object\n            if ( obj.constructor &&\n                !core_hasOwn.call(obj, \"constructor\") &&\n                !core_hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\") ) {\n                return false;\n            }\n        } catch ( e ) {\n            // IE8,9 Will throw exceptions on certain host objects #9897\n            return false;\n        }\n\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n\n        var key;\n        for ( key in obj ) {}\n\n        return key === undefined || core_hasOwn.call( obj, key );\n    },\n\n    isEmptyObject: function( obj ) {\n        var name;\n        for ( name in obj ) {\n            return false;\n        }\n        return true;\n    },\n\n    error: function( msg ) {\n        throw new Error( msg );\n    },\n\n    // data: string of html\n    // context (optional): If specified, the fragment will be created in this context, defaults to document\n    // scripts (optional): If true, will include scripts passed in the html string\n    parseHTML: function( data, context, scripts ) {\n        var parsed;\n        if ( !data || typeof data !== \"string\" ) {\n            return null;\n        }\n        if ( typeof context === \"boolean\" ) {\n            scripts = context;\n            context = 0;\n        }\n        context = context || document;\n\n        // Single tag\n        if ( (parsed = rsingleTag.exec( data )) ) {\n            return [ context.createElement( parsed[1] ) ];\n        }\n\n        parsed = jQuery.buildFragment( [ data ], context, scripts ? null : [] );\n        return jQuery.merge( [],\n            (parsed.cacheable ? jQuery.clone( parsed.fragment ) : parsed.fragment).childNodes );\n    },\n\n    parseJSON: function( data ) {\n        if ( !data || typeof data !== \"string\") {\n            return null;\n        }\n\n        // Make sure leading/trailing whitespace is removed (IE can't handle it)\n        data = jQuery.trim( data );\n\n        // Attempt to parse using the native JSON parser first\n        if ( window.JSON && window.JSON.parse ) {\n            return window.JSON.parse( data );\n        }\n\n        // Make sure the incoming data is actual JSON\n        // Logic borrowed from http://json.org/json2.js\n        if ( rvalidchars.test( data.replace( rvalidescape, \"@\" )\n            .replace( rvalidtokens, \"]\" )\n            .replace( rvalidbraces, \"\")) ) {\n\n            return ( new Function( \"return \" + data ) )();\n\n        }\n        jQuery.error( \"Invalid JSON: \" + data );\n    },\n\n    // Cross-browser xml parsing\n    parseXML: function( data ) {\n        var xml, tmp;\n        if ( !data || typeof data !== \"string\" ) {\n            return null;\n        }\n        try {\n            if ( window.DOMParser ) { // Standard\n                tmp = new DOMParser();\n                xml = tmp.parseFromString( data , \"text/xml\" );\n            } else { // IE\n                xml = new ActiveXObject( \"Microsoft.XMLDOM\" );\n                xml.async = \"false\";\n                xml.loadXML( data );\n            }\n        } catch( e ) {\n            xml = undefined;\n        }\n        if ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\n            jQuery.error( \"Invalid XML: \" + data );\n        }\n        return xml;\n    },\n\n    noop: function() {},\n\n    // Evaluates a script in a global context\n    // Workarounds based on findings by Jim Driscoll\n    // http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context\n    globalEval: function( data ) {\n        if ( data && core_rnotwhite.test( data ) ) {\n            // We use execScript on Internet Explorer\n            // We use an anonymous function so that context is window\n            // rather than jQuery in Firefox\n            ( window.execScript || function( data ) {\n                window[ \"eval\" ].call( window, data );\n            } )( data );\n        }\n    },\n\n    // Convert dashed to camelCase; used by the css and data modules\n    // Microsoft forgot to hump their vendor prefix (#9572)\n    camelCase: function( string ) {\n        return string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n    },\n\n    nodeName: function( elem, name ) {\n        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n    },\n\n    // args is for internal usage only\n    each: function( obj, callback, args ) {\n        var name,\n            i = 0,\n            length = obj.length,\n            isObj = length === undefined || jQuery.isFunction( obj );\n\n        if ( args ) {\n            if ( isObj ) {\n                for ( name in obj ) {\n                    if ( callback.apply( obj[ name ], args ) === false ) {\n                        break;\n                    }\n                }\n            } else {\n                for ( ; i < length; ) {\n                    if ( callback.apply( obj[ i++ ], args ) === false ) {\n                        break;\n                    }\n                }\n            }\n\n        // A special, fast, case for the most common use of each\n        } else {\n            if ( isObj ) {\n                for ( name in obj ) {\n                    if ( callback.call( obj[ name ], name, obj[ name ] ) === false ) {\n                        break;\n                    }\n                }\n            } else {\n                for ( ; i < length; ) {\n                    if ( callback.call( obj[ i ], i, obj[ i++ ] ) === false ) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        return obj;\n    },\n\n    // Use native String.trim function wherever possible\n    trim: core_trim && !core_trim.call(\"\\uFEFF\\xA0\") ?\n        function( text ) {\n            return text == null ?\n                \"\" :\n                core_trim.call( text );\n        } :\n\n        // Otherwise use our own trimming functionality\n        function( text ) {\n            return text == null ?\n                \"\" :\n                ( text + \"\" ).replace( rtrim, \"\" );\n        },\n\n    // results is for internal usage only\n    makeArray: function( arr, results ) {\n        var type,\n            ret = results || [];\n\n        if ( arr != null ) {\n            // The window, strings (and functions) also have 'length'\n            // Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930\n            type = jQuery.type( arr );\n\n            if ( arr.length == null || type === \"string\" || type === \"function\" || type === \"regexp\" || jQuery.isWindow( arr ) ) {\n                core_push.call( ret, arr );\n            } else {\n                jQuery.merge( ret, arr );\n            }\n        }\n\n        return ret;\n    },\n\n    inArray: function( elem, arr, i ) {\n        var len;\n\n        if ( arr ) {\n            if ( core_indexOf ) {\n                return core_indexOf.call( arr, elem, i );\n            }\n\n            len = arr.length;\n            i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;\n\n            for ( ; i < len; i++ ) {\n                // Skip accessing in sparse arrays\n                if ( i in arr && arr[ i ] === elem ) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    },\n\n    merge: function( first, second ) {\n        var l = second.length,\n            i = first.length,\n            j = 0;\n\n        if ( typeof l === \"number\" ) {\n            for ( ; j < l; j++ ) {\n                first[ i++ ] = second[ j ];\n            }\n\n        } else {\n            while ( second[j] !== undefined ) {\n                first[ i++ ] = second[ j++ ];\n            }\n        }\n\n        first.length = i;\n\n        return first;\n    },\n\n    grep: function( elems, callback, inv ) {\n        var retVal,\n            ret = [],\n            i = 0,\n            length = elems.length;\n        inv = !!inv;\n\n        // Go through the array, only saving the items\n        // that pass the validator function\n        for ( ; i < length; i++ ) {\n            retVal = !!callback( elems[ i ], i );\n            if ( inv !== retVal ) {\n                ret.push( elems[ i ] );\n            }\n        }\n\n        return ret;\n    },\n\n    // arg is for internal usage only\n    map: function( elems, callback, arg ) {\n        var value, key,\n            ret = [],\n            i = 0,\n            length = elems.length,\n            // jquery objects are treated as arrays\n            isArray = elems instanceof jQuery || length !== undefined && typeof length === \"number\" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;\n\n        // Go through the array, translating each of the items to their\n        if ( isArray ) {\n            for ( ; i < length; i++ ) {\n                value = callback( elems[ i ], i, arg );\n\n                if ( value != null ) {\n                    ret[ ret.length ] = value;\n                }\n            }\n\n        // Go through every key on the object,\n        } else {\n            for ( key in elems ) {\n                value = callback( elems[ key ], key, arg );\n\n                if ( value != null ) {\n                    ret[ ret.length ] = value;\n                }\n            }\n        }\n\n        // Flatten any nested arrays\n        return ret.concat.apply( [], ret );\n    },\n\n    // A global GUID counter for objects\n    guid: 1,\n\n    // Bind a function to a context, optionally partially applying any\n    // arguments.\n    proxy: function( fn, context ) {\n        var tmp, args, proxy;\n\n        if ( typeof context === \"string\" ) {\n            tmp = fn[ context ];\n            context = fn;\n            fn = tmp;\n        }\n\n        // Quick check to determine if target is callable, in the spec\n        // this throws a TypeError, but we will just return undefined.\n        if ( !jQuery.isFunction( fn ) ) {\n            return undefined;\n        }\n\n        // Simulated bind\n        args = core_slice.call( arguments, 2 );\n        proxy = function() {\n            return fn.apply( context, args.concat( core_slice.call( arguments ) ) );\n        };\n\n        // Set the guid of unique handler to the same of original handler, so it can be removed\n        proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n        return proxy;\n    },\n\n    // Multifunctional method to get and set values of a collection\n    // The value/s can optionally be executed if it's a function\n    access: function( elems, fn, key, value, chainable, emptyGet, pass ) {\n        var exec,\n            bulk = key == null,\n            i = 0,\n            length = elems.length;\n\n        // Sets many values\n        if ( key && typeof key === \"object\" ) {\n            for ( i in key ) {\n                jQuery.access( elems, fn, i, key[i], 1, emptyGet, value );\n            }\n            chainable = 1;\n\n        // Sets one value\n        } else if ( value !== undefined ) {\n            // Optionally, function values get executed if exec is true\n            exec = pass === undefined && jQuery.isFunction( value );\n\n            if ( bulk ) {\n                // Bulk operations only iterate when executing function values\n                if ( exec ) {\n                    exec = fn;\n                    fn = function( elem, key, value ) {\n                        return exec.call( jQuery( elem ), value );\n                    };\n\n                // Otherwise they run against the entire set\n                } else {\n                    fn.call( elems, value );\n                    fn = null;\n                }\n            }\n\n            if ( fn ) {\n                for (; i < length; i++ ) {\n                    fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );\n                }\n            }\n\n            chainable = 1;\n        }\n\n        return chainable ?\n            elems :\n\n            // Gets\n            bulk ?\n                fn.call( elems ) :\n                length ? fn( elems[0], key ) : emptyGet;\n    },\n\n    now: function() {\n        return ( new Date() ).getTime();\n    }\n});\n\njQuery.ready.promise = function( obj ) {\n    if ( !readyList ) {\n\n        readyList = jQuery.Deferred();\n\n        // Catch cases where $(document).ready() is called after the browser event has already occurred.\n        // we once tried to use readyState \"interactive\" here, but it caused issues like the one\n        // discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n        if ( document.readyState === \"complete\" ) {\n            // Handle it asynchronously to allow scripts the opportunity to delay ready\n            setTimeout( jQuery.ready, 1 );\n\n        // Standards-based browsers support DOMContentLoaded\n        } else if ( document.addEventListener ) {\n            // Use the handy event callback\n            document.addEventListener( \"DOMContentLoaded\", DOMContentLoaded, false );\n\n            // A fallback to window.onload, that will always work\n            window.addEventListener( \"load\", jQuery.ready, false );\n\n        // If IE event model is used\n        } else {\n            // Ensure firing before onload, maybe late but safe also for iframes\n            document.attachEvent( \"onreadystatechange\", DOMContentLoaded );\n\n            // A fallback to window.onload, that will always work\n            window.attachEvent( \"onload\", jQuery.ready );\n\n            // If IE and not a frame\n            // continually check to see if the document is ready\n            var top = false;\n\n            try {\n                top = window.frameElement == null && document.documentElement;\n            } catch(e) {}\n\n            if ( top && top.doScroll ) {\n                (function doScrollCheck() {\n                    if ( !jQuery.isReady ) {\n\n                        try {\n                            // Use the trick by Diego Perini\n                            // http://javascript.nwbox.com/IEContentLoaded/\n                            top.doScroll(\"left\");\n                        } catch(e) {\n                            return setTimeout( doScrollCheck, 50 );\n                        }\n\n                        // and execute any waiting functions\n                        jQuery.ready();\n                    }\n                })();\n            }\n        }\n    }\n    return readyList.promise( obj );\n};\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object\".split(\" \"), function(i, name) {\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\n// All jQuery objects should point back to these\nrootjQuery = jQuery(document);\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n    var object = optionsCache[ options ] = {};\n    jQuery.each( options.split( core_rspace ), function( _, flag ) {\n        object[ flag ] = true;\n    });\n    return object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *  options: an optional list of space-separated options that will change how\n *          the callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *  once:           will ensure the callback list can only be fired once (like a Deferred)\n *\n *  memory:         will keep track of previous values and will call any callback added\n *                  after the list has been fired right away with the latest \"memorized\"\n *                  values (like a Deferred)\n *\n *  unique:         will ensure a callback can only be added once (no duplicate in the list)\n *\n *  stopOnFalse:    interrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === \"string\" ?\n        ( optionsCache[ options ] || createOptions( options ) ) :\n        jQuery.extend( {}, options );\n\n    var // Last fire value (for non-forgettable lists)\n        memory,\n        // Flag to know if list was already fired\n        fired,\n        // Flag to know if list is currently firing\n        firing,\n        // First callback to fire (used internally by add and fireWith)\n        firingStart,\n        // End of the loop when firing\n        firingLength,\n        // Index of currently firing callback (modified by remove if needed)\n        firingIndex,\n        // Actual callback list\n        list = [],\n        // Stack of fire calls for repeatable lists\n        stack = !options.once && [],\n        // Fire callbacks\n        fire = function( data ) {\n            memory = options.memory && data;\n            fired = true;\n            firingIndex = firingStart || 0;\n            firingStart = 0;\n            firingLength = list.length;\n            firing = true;\n            for ( ; list && firingIndex < firingLength; firingIndex++ ) {\n                if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n                    memory = false; // To prevent further calls using add\n                    break;\n                }\n            }\n            firing = false;\n            if ( list ) {\n                if ( stack ) {\n                    if ( stack.length ) {\n                        fire( stack.shift() );\n                    }\n                } else if ( memory ) {\n                    list = [];\n                } else {\n                    self.disable();\n                }\n            }\n        },\n        // Actual Callbacks object\n        self = {\n            // Add a callback or a collection of callbacks to the list\n            add: function() {\n                if ( list ) {\n                    // First, we save the current length\n                    var start = list.length;\n                    (function add( args ) {\n                        jQuery.each( args, function( _, arg ) {\n                            var type = jQuery.type( arg );\n                            if ( type === \"function\" && ( !options.unique || !self.has( arg ) ) ) {\n                                list.push( arg );\n                            } else if ( arg && arg.length && type !== \"string\" ) {\n                                // Inspect recursively\n                                add( arg );\n                            }\n                        });\n                    })( arguments );\n                    // Do we need to add the callbacks to the\n                    // current firing batch?\n                    if ( firing ) {\n                        firingLength = list.length;\n                    // With memory, if we're not firing then\n                    // we should call right away\n                    } else if ( memory ) {\n                        firingStart = start;\n                        fire( memory );\n                    }\n                }\n                return this;\n            },\n            // Remove a callback from the list\n            remove: function() {\n                if ( list ) {\n                    jQuery.each( arguments, function( _, arg ) {\n                        var index;\n                        while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n                            list.splice( index, 1 );\n                            // Handle firing indexes\n                            if ( firing ) {\n                                if ( index <= firingLength ) {\n                                    firingLength--;\n                                }\n                                if ( index <= firingIndex ) {\n                                    firingIndex--;\n                                }\n                            }\n                        }\n                    });\n                }\n                return this;\n            },\n            // Control if a given callback is in the list\n            has: function( fn ) {\n                return jQuery.inArray( fn, list ) > -1;\n            },\n            // Remove all callbacks from the list\n            empty: function() {\n                list = [];\n                return this;\n            },\n            // Have the list do nothing anymore\n            disable: function() {\n                list = stack = memory = undefined;\n                return this;\n            },\n            // Is it disabled?\n            disabled: function() {\n                return !list;\n            },\n            // Lock the list in its current state\n            lock: function() {\n                stack = undefined;\n                if ( !memory ) {\n                    self.disable();\n                }\n                return this;\n            },\n            // Is it locked?\n            locked: function() {\n                return !stack;\n            },\n            // Call all callbacks with the given context and arguments\n            fireWith: function( context, args ) {\n                args = args || [];\n                args = [ context, args.slice ? args.slice() : args ];\n                if ( list && ( !fired || stack ) ) {\n                    if ( firing ) {\n                        stack.push( args );\n                    } else {\n                        fire( args );\n                    }\n                }\n                return this;\n            },\n            // Call all the callbacks with the given arguments\n            fire: function() {\n                self.fireWith( this, arguments );\n                return this;\n            },\n            // To know if the callbacks have already been called at least once\n            fired: function() {\n                return !!fired;\n            }\n        };\n\n    return self;\n};\njQuery.extend({\n\n    Deferred: function( func ) {\n        var tuples = [\n                // action, add listener, listener list, final state\n                [ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n                [ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n                [ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n            ],\n            state = \"pending\",\n            promise = {\n                state: function() {\n                    return state;\n                },\n                always: function() {\n                    deferred.done( arguments ).fail( arguments );\n                    return this;\n                },\n                then: function( /* fnDone, fnFail, fnProgress */ ) {\n                    var fns = arguments;\n                    return jQuery.Deferred(function( newDefer ) {\n                        jQuery.each( tuples, function( i, tuple ) {\n                            var action = tuple[ 0 ],\n                                fn = fns[ i ];\n                            // deferred[ done | fail | progress ] for forwarding actions to newDefer\n                            deferred[ tuple[1] ]( jQuery.isFunction( fn ) ?\n                                function() {\n                                    var returned = fn.apply( this, arguments );\n                                    if ( returned && jQuery.isFunction( returned.promise ) ) {\n                                        returned.promise()\n                                            .done( newDefer.resolve )\n                                            .fail( newDefer.reject )\n                                            .progress( newDefer.notify );\n                                    } else {\n                                        newDefer[ action + \"With\" ]( this === deferred ? newDefer : this, [ returned ] );\n                                    }\n                                } :\n                                newDefer[ action ]\n                            );\n                        });\n                        fns = null;\n                    }).promise();\n                },\n                // Get a promise for this deferred\n                // If obj is provided, the promise aspect is added to the object\n                promise: function( obj ) {\n                    return obj != null ? jQuery.extend( obj, promise ) : promise;\n                }\n            },\n            deferred = {};\n\n        // Keep pipe for back-compat\n        promise.pipe = promise.then;\n\n        // Add list-specific methods\n        jQuery.each( tuples, function( i, tuple ) {\n            var list = tuple[ 2 ],\n                stateString = tuple[ 3 ];\n\n            // promise[ done | fail | progress ] = list.add\n            promise[ tuple[1] ] = list.add;\n\n            // Handle state\n            if ( stateString ) {\n                list.add(function() {\n                    // state = [ resolved | rejected ]\n                    state = stateString;\n\n                // [ reject_list | resolve_list ].disable; progress_list.lock\n                }, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n            }\n\n            // deferred[ resolve | reject | notify ] = list.fire\n            deferred[ tuple[0] ] = list.fire;\n            deferred[ tuple[0] + \"With\" ] = list.fireWith;\n        });\n\n        // Make the deferred a promise\n        promise.promise( deferred );\n\n        // Call given func if any\n        if ( func ) {\n            func.call( deferred, deferred );\n        }\n\n        // All done!\n        return deferred;\n    },\n\n    // Deferred helper\n    when: function( subordinate /* , ..., subordinateN */ ) {\n        var i = 0,\n            resolveValues = core_slice.call( arguments ),\n            length = resolveValues.length,\n\n            // the count of uncompleted subordinates\n            remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n            // the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n            deferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n            // Update function for both resolve and progress values\n            updateFunc = function( i, contexts, values ) {\n                return function( value ) {\n                    contexts[ i ] = this;\n                    values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;\n                    if( values === progressValues ) {\n                        deferred.notifyWith( contexts, values );\n                    } else if ( !( --remaining ) ) {\n                        deferred.resolveWith( contexts, values );\n                    }\n                };\n            },\n\n            progressValues, progressContexts, resolveContexts;\n\n        // add listeners to Deferred subordinates; treat others as resolved\n        if ( length > 1 ) {\n            progressValues = new Array( length );\n            progressContexts = new Array( length );\n            resolveContexts = new Array( length );\n            for ( ; i < length; i++ ) {\n                if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n                    resolveValues[ i ].promise()\n                        .done( updateFunc( i, resolveContexts, resolveValues ) )\n                        .fail( deferred.reject )\n                        .progress( updateFunc( i, progressContexts, progressValues ) );\n                } else {\n                    --remaining;\n                }\n            }\n        }\n\n        // if we're not waiting on anything, resolve the master\n        if ( !remaining ) {\n            deferred.resolveWith( resolveContexts, resolveValues );\n        }\n\n        return deferred.promise();\n    }\n});\njQuery.support = (function() {\n\n    var support,\n        all,\n        a,\n        select,\n        opt,\n        input,\n        fragment,\n        eventName,\n        i,\n        isSupported,\n        clickFn,\n        div = document.createElement(\"div\");\n\n    // Preliminary tests\n    div.setAttribute( \"className\", \"t\" );\n    div.innerHTML = \"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n\n    all = div.getElementsByTagName(\"*\");\n    a = div.getElementsByTagName(\"a\")[ 0 ];\n    a.style.cssText = \"top:1px;float:left;opacity:.5\";\n\n    // Can't get basic test support\n    if ( !all || !all.length ) {\n        return {};\n    }\n\n    // First batch of supports tests\n    select = document.createElement(\"select\");\n    opt = select.appendChild( document.createElement(\"option\") );\n    input = div.getElementsByTagName(\"input\")[ 0 ];\n\n    support = {\n        // IE strips leading whitespace when .innerHTML is used\n        leadingWhitespace: ( div.firstChild.nodeType === 3 ),\n\n        // Make sure that tbody elements aren't automatically inserted\n        // IE will insert them into empty tables\n        tbody: !div.getElementsByTagName(\"tbody\").length,\n\n        // Make sure that link elements get serialized correctly by innerHTML\n        // This requires a wrapper element in IE\n        htmlSerialize: !!div.getElementsByTagName(\"link\").length,\n\n        // Get the style information from getAttribute\n        // (IE uses .cssText instead)\n        style: /top/.test( a.getAttribute(\"style\") ),\n\n        // Make sure that URLs aren't manipulated\n        // (IE normalizes it by default)\n        hrefNormalized: ( a.getAttribute(\"href\") === \"/a\" ),\n\n        // Make sure that element opacity exists\n        // (IE uses filter instead)\n        // Use a regex to work around a WebKit issue. See #5145\n        opacity: /^0.5/.test( a.style.opacity ),\n\n        // Verify style float existence\n        // (IE uses styleFloat instead of cssFloat)\n        cssFloat: !!a.style.cssFloat,\n\n        // Make sure that if no value is specified for a checkbox\n        // that it defaults to \"on\".\n        // (WebKit defaults to \"\" instead)\n        checkOn: ( input.value === \"on\" ),\n\n        // Make sure that a selected-by-default option has a working selected property.\n        // (WebKit defaults to false instead of true, IE too, if it's in an optgroup)\n        optSelected: opt.selected,\n\n        // Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)\n        getSetAttribute: div.className !== \"t\",\n\n        // Tests for enctype support on a form(#6743)\n        enctype: !!document.createElement(\"form\").enctype,\n\n        // Makes sure cloning an html5 element does not cause problems\n        // Where outerHTML is undefined, this still works\n        html5Clone: document.createElement(\"nav\").cloneNode( true ).outerHTML !== \"<:nav></:nav>\",\n\n        // jQuery.support.boxModel DEPRECATED in 1.8 since we don't support Quirks Mode\n        boxModel: ( document.compatMode === \"CSS1Compat\" ),\n\n        // Will be defined later\n        submitBubbles: true,\n        changeBubbles: true,\n        focusinBubbles: false,\n        deleteExpando: true,\n        noCloneEvent: true,\n        inlineBlockNeedsLayout: false,\n        shrinkWrapBlocks: false,\n        reliableMarginRight: true,\n        boxSizingReliable: true,\n        pixelPosition: false\n    };\n\n    // Make sure checked status is properly cloned\n    input.checked = true;\n    support.noCloneChecked = input.cloneNode( true ).checked;\n\n    // Make sure that the options inside disabled selects aren't marked as disabled\n    // (WebKit marks them as disabled)\n    select.disabled = true;\n    support.optDisabled = !opt.disabled;\n\n    // Test to see if it's possible to delete an expando from an element\n    // Fails in Internet Explorer\n    try {\n        delete div.test;\n    } catch( e ) {\n        support.deleteExpando = false;\n    }\n\n    if ( !div.addEventListener && div.attachEvent && div.fireEvent ) {\n        div.attachEvent( \"onclick\", clickFn = function() {\n            // Cloning a node shouldn't copy over any\n            // bound event handlers (IE does this)\n            support.noCloneEvent = false;\n        });\n        div.cloneNode( true ).fireEvent(\"onclick\");\n        div.detachEvent( \"onclick\", clickFn );\n    }\n\n    // Check if a radio maintains its value\n    // after being appended to the DOM\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.setAttribute( \"type\", \"radio\" );\n    support.radioValue = input.value === \"t\";\n\n    input.setAttribute( \"checked\", \"checked\" );\n\n    // #11217 - WebKit loses check when the name is after the checked attribute\n    input.setAttribute( \"name\", \"t\" );\n\n    div.appendChild( input );\n    fragment = document.createDocumentFragment();\n    fragment.appendChild( div.lastChild );\n\n    // WebKit doesn't clone checked state correctly in fragments\n    support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n    // Check if a disconnected checkbox will retain its checked\n    // value of true after appended to the DOM (IE6/7)\n    support.appendChecked = input.checked;\n\n    fragment.removeChild( input );\n    fragment.appendChild( div );\n\n    // Technique from Juriy Zaytsev\n    // http://perfectionkills.com/detecting-event-support-without-browser-sniffing/\n    // We only care about the case where non-standard event systems\n    // are used, namely in IE. Short-circuiting here helps us to\n    // avoid an eval call (in setAttribute) which can cause CSP\n    // to go haywire. See: https://developer.mozilla.org/en/Security/CSP\n    if ( div.attachEvent ) {\n        for ( i in {\n            submit: true,\n            change: true,\n            focusin: true\n        }) {\n            eventName = \"on\" + i;\n            isSupported = ( eventName in div );\n            if ( !isSupported ) {\n                div.setAttribute( eventName, \"return;\" );\n                isSupported = ( typeof div[ eventName ] === \"function\" );\n            }\n            support[ i + \"Bubbles\" ] = isSupported;\n        }\n    }\n\n    // Run tests that need a body at doc ready\n    jQuery(function() {\n        var container, div, tds, marginDiv,\n            divReset = \"padding:0;margin:0;border:0;display:block;overflow:hidden;\",\n            body = document.getElementsByTagName(\"body\")[0];\n\n        if ( !body ) {\n            // Return for frameset docs that don't have a body\n            return;\n        }\n\n        container = document.createElement(\"div\");\n        container.style.cssText = \"visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px\";\n        body.insertBefore( container, body.firstChild );\n\n        // Construct the test element\n        div = document.createElement(\"div\");\n        container.appendChild( div );\n\n        // Check if table cells still have offsetWidth/Height when they are set\n        // to display:none and there are still other visible table cells in a\n        // table row; if so, offsetWidth/Height are not reliable for use when\n        // determining if an element has been hidden directly using\n        // display:none (it is still safe to use offsets if a parent element is\n        // hidden; don safety goggles and see bug #4512 for more information).\n        // (only IE 8 fails this test)\n        div.innerHTML = \"<table><tr><td></td><td>t</td></tr></table>\";\n        tds = div.getElementsByTagName(\"td\");\n        tds[ 0 ].style.cssText = \"padding:0;margin:0;border:0;display:none\";\n        isSupported = ( tds[ 0 ].offsetHeight === 0 );\n\n        tds[ 0 ].style.display = \"\";\n        tds[ 1 ].style.display = \"none\";\n\n        // Check if empty table cells still have offsetWidth/Height\n        // (IE <= 8 fail this test)\n        support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );\n\n        // Check box-sizing and margin behavior\n        div.innerHTML = \"\";\n        div.style.cssText = \"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\";\n        support.boxSizing = ( div.offsetWidth === 4 );\n        support.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== 1 );\n\n        // NOTE: To any future maintainer, we've window.getComputedStyle\n        // because jsdom on node.js will break without it.\n        if ( window.getComputedStyle ) {\n            support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== \"1%\";\n            support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: \"4px\" } ).width === \"4px\";\n\n            // Check if div with explicit width and no margin-right incorrectly\n            // gets computed margin-right based on width of container. For more\n            // info see bug #3333\n            // Fails in WebKit before Feb 2011 nightlies\n            // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n            marginDiv = document.createElement(\"div\");\n            marginDiv.style.cssText = div.style.cssText = divReset;\n            marginDiv.style.marginRight = marginDiv.style.width = \"0\";\n            div.style.width = \"1px\";\n            div.appendChild( marginDiv );\n            support.reliableMarginRight =\n                !parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );\n        }\n\n        if ( typeof div.style.zoom !== \"undefined\" ) {\n            // Check if natively block-level elements act like inline-block\n            // elements when setting their display to 'inline' and giving\n            // them layout\n            // (IE < 8 does this)\n            div.innerHTML = \"\";\n            div.style.cssText = divReset + \"width:1px;padding:1px;display:inline;zoom:1\";\n            support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );\n\n            // Check if elements with layout shrink-wrap their children\n            // (IE 6 does this)\n            div.style.display = \"block\";\n            div.style.overflow = \"visible\";\n            div.innerHTML = \"<div></div>\";\n            div.firstChild.style.width = \"5px\";\n            support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );\n\n            container.style.zoom = 1;\n        }\n\n        // Null elements to avoid leaks in IE\n        body.removeChild( container );\n        container = div = tds = marginDiv = null;\n    });\n\n    // Null elements to avoid leaks in IE\n    fragment.removeChild( div );\n    all = a = select = opt = input = fragment = div = null;\n\n    return support;\n})();\nvar rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\n    rmultiDash = /([A-Z])/g;\n\njQuery.extend({\n    cache: {},\n\n    deletedIds: [],\n\n    // Remove at next major release (1.9/2.0)\n    uuid: 0,\n\n    // Unique for each copy of jQuery on the page\n    // Non-digits removed to match rinlinejQuery\n    expando: \"jQuery\" + ( jQuery.fn.jquery + Math.random() ).replace( /\\D/g, \"\" ),\n\n    // The following elements throw uncatchable exceptions if you\n    // attempt to add expando properties to them.\n    noData: {\n        \"embed\": true,\n        // Ban all objects except for Flash (which handle expandos)\n        \"object\": \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",\n        \"applet\": true\n    },\n\n    hasData: function( elem ) {\n        elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];\n        return !!elem && !isEmptyDataObject( elem );\n    },\n\n    data: function( elem, name, data, pvt /* Internal Use Only */ ) {\n        if ( !jQuery.acceptData( elem ) ) {\n            return;\n        }\n\n        var thisCache, ret,\n            internalKey = jQuery.expando,\n            getByName = typeof name === \"string\",\n\n            // We have to handle DOM nodes and JS objects differently because IE6-7\n            // can't GC object references properly across the DOM-JS boundary\n            isNode = elem.nodeType,\n\n            // Only DOM nodes need the global jQuery cache; JS object data is\n            // attached directly to the object so GC can occur automatically\n            cache = isNode ? jQuery.cache : elem,\n\n            // Only defining an ID for JS objects if its cache already exists allows\n            // the code to shortcut on the same path as a DOM node with no cache\n            id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;\n\n        // Avoid doing any more work than we need to when trying to get data on an\n        // object that has no data at all\n        if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && getByName && data === undefined ) {\n            return;\n        }\n\n        if ( !id ) {\n            // Only DOM nodes need a new unique ID for each element since their data\n            // ends up in the global cache\n            if ( isNode ) {\n                elem[ internalKey ] = id = jQuery.deletedIds.pop() || jQuery.guid++;\n            } else {\n                id = internalKey;\n            }\n        }\n\n        if ( !cache[ id ] ) {\n            cache[ id ] = {};\n\n            // Avoids exposing jQuery metadata on plain JS objects when the object\n            // is serialized using JSON.stringify\n            if ( !isNode ) {\n                cache[ id ].toJSON = jQuery.noop;\n            }\n        }\n\n        // An object can be passed to jQuery.data instead of a key/value pair; this gets\n        // shallow copied over onto the existing cache\n        if ( typeof name === \"object\" || typeof name === \"function\" ) {\n            if ( pvt ) {\n                cache[ id ] = jQuery.extend( cache[ id ], name );\n            } else {\n                cache[ id ].data = jQuery.extend( cache[ id ].data, name );\n            }\n        }\n\n        thisCache = cache[ id ];\n\n        // jQuery data() is stored in a separate object inside the object's internal data\n        // cache in order to avoid key collisions between internal data and user-defined\n        // data.\n        if ( !pvt ) {\n            if ( !thisCache.data ) {\n                thisCache.data = {};\n            }\n\n            thisCache = thisCache.data;\n        }\n\n        if ( data !== undefined ) {\n            thisCache[ jQuery.camelCase( name ) ] = data;\n        }\n\n        // Check for both converted-to-camel and non-converted data property names\n        // If a data property was specified\n        if ( getByName ) {\n\n            // First Try to find as-is property data\n            ret = thisCache[ name ];\n\n            // Test for null|undefined property data\n            if ( ret == null ) {\n\n                // Try to find the camelCased property\n                ret = thisCache[ jQuery.camelCase( name ) ];\n            }\n        } else {\n            ret = thisCache;\n        }\n\n        return ret;\n    },\n\n    removeData: function( elem, name, pvt /* Internal Use Only */ ) {\n        if ( !jQuery.acceptData( elem ) ) {\n            return;\n        }\n\n        var thisCache, i, l,\n\n            isNode = elem.nodeType,\n\n            // See jQuery.data for more information\n            cache = isNode ? jQuery.cache : elem,\n            id = isNode ? elem[ jQuery.expando ] : jQuery.expando;\n\n        // If there is already no cache entry for this object, there is no\n        // purpose in continuing\n        if ( !cache[ id ] ) {\n            return;\n        }\n\n        if ( name ) {\n\n            thisCache = pvt ? cache[ id ] : cache[ id ].data;\n\n            if ( thisCache ) {\n\n                // Support array or space separated string names for data keys\n                if ( !jQuery.isArray( name ) ) {\n\n                    // try the string as a key before any manipulation\n                    if ( name in thisCache ) {\n                        name = [ name ];\n                    } else {\n\n                        // split the camel cased version by spaces unless a key with the spaces exists\n                        name = jQuery.camelCase( name );\n                        if ( name in thisCache ) {\n                            name = [ name ];\n                        } else {\n                            name = name.split(\" \");\n                        }\n                    }\n                }\n\n                for ( i = 0, l = name.length; i < l; i++ ) {\n                    delete thisCache[ name[i] ];\n                }\n\n                // If there is no data left in the cache, we want to continue\n                // and let the cache object itself get destroyed\n                if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {\n                    return;\n                }\n            }\n        }\n\n        // See jQuery.data for more information\n        if ( !pvt ) {\n            delete cache[ id ].data;\n\n            // Don't destroy the parent cache unless the internal data object\n            // had been the only thing left in it\n            if ( !isEmptyDataObject( cache[ id ] ) ) {\n                return;\n            }\n        }\n\n        // Destroy the cache\n        if ( isNode ) {\n            jQuery.cleanData( [ elem ], true );\n\n        // Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)\n        } else if ( jQuery.support.deleteExpando || cache != cache.window ) {\n            delete cache[ id ];\n\n        // When all else fails, null\n        } else {\n            cache[ id ] = null;\n        }\n    },\n\n    // For internal use only.\n    _data: function( elem, name, data ) {\n        return jQuery.data( elem, name, data, true );\n    },\n\n    // A method for determining if a DOM node can handle the data expando\n    acceptData: function( elem ) {\n        var noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];\n\n        // nodes accept data unless otherwise specified; rejection can be conditional\n        return !noData || noData !== true && elem.getAttribute(\"classid\") === noData;\n    }\n});\n\njQuery.fn.extend({\n    data: function( key, value ) {\n        var parts, part, attr, name, l,\n            elem = this[0],\n            i = 0,\n            data = null;\n\n        // Gets all values\n        if ( key === undefined ) {\n            if ( this.length ) {\n                data = jQuery.data( elem );\n\n                if ( elem.nodeType === 1 && !jQuery._data( elem, \"parsedAttrs\" ) ) {\n                    attr = elem.attributes;\n                    for ( l = attr.length; i < l; i++ ) {\n                        name = attr[i].name;\n\n                        if ( !name.indexOf( \"data-\" ) ) {\n                            name = jQuery.camelCase( name.substring(5) );\n\n                            dataAttr( elem, name, data[ name ] );\n                        }\n                    }\n                    jQuery._data( elem, \"parsedAttrs\", true );\n                }\n            }\n\n            return data;\n        }\n\n        // Sets multiple values\n        if ( typeof key === \"object\" ) {\n            return this.each(function() {\n                jQuery.data( this, key );\n            });\n        }\n\n        parts = key.split( \".\", 2 );\n        parts[1] = parts[1] ? \".\" + parts[1] : \"\";\n        part = parts[1] + \"!\";\n\n        return jQuery.access( this, function( value ) {\n\n            if ( value === undefined ) {\n                data = this.triggerHandler( \"getData\" + part, [ parts[0] ] );\n\n                // Try to fetch any internally stored data first\n                if ( data === undefined && elem ) {\n                    data = jQuery.data( elem, key );\n                    data = dataAttr( elem, key, data );\n                }\n\n                return data === undefined && parts[1] ?\n                    this.data( parts[0] ) :\n                    data;\n            }\n\n            parts[1] = value;\n            this.each(function() {\n                var self = jQuery( this );\n\n                self.triggerHandler( \"setData\" + part, parts );\n                jQuery.data( this, key, value );\n                self.triggerHandler( \"changeData\" + part, parts );\n            });\n        }, null, value, arguments.length > 1, null, false );\n    },\n\n    removeData: function( key ) {\n        return this.each(function() {\n            jQuery.removeData( this, key );\n        });\n    }\n});\n\nfunction dataAttr( elem, key, data ) {\n    // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n    if ( data === undefined && elem.nodeType === 1 ) {\n\n        var name = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\n        data = elem.getAttribute( name );\n\n        if ( typeof data === \"string\" ) {\n            try {\n                data = data === \"true\" ? true :\n                data === \"false\" ? false :\n                data === \"null\" ? null :\n                // Only convert to a number if it doesn't change the string\n                +data + \"\" === data ? +data :\n                rbrace.test( data ) ? jQuery.parseJSON( data ) :\n                    data;\n            } catch( e ) {}\n\n            // Make sure we set the data so it isn't changed later\n            jQuery.data( elem, key, data );\n\n        } else {\n            data = undefined;\n        }\n    }\n\n    return data;\n}\n\n// checks a cache object for emptiness\nfunction isEmptyDataObject( obj ) {\n    var name;\n    for ( name in obj ) {\n\n        // if the public data object is empty, the private is still empty\n        if ( name === \"data\" && jQuery.isEmptyObject( obj[name] ) ) {\n            continue;\n        }\n        if ( name !== \"toJSON\" ) {\n            return false;\n        }\n    }\n\n    return true;\n}\njQuery.extend({\n    queue: function( elem, type, data ) {\n        var queue;\n\n        if ( elem ) {\n            type = ( type || \"fx\" ) + \"queue\";\n            queue = jQuery._data( elem, type );\n\n            // Speed up dequeue by getting out quickly if this is just a lookup\n            if ( data ) {\n                if ( !queue || jQuery.isArray(data) ) {\n                    queue = jQuery._data( elem, type, jQuery.makeArray(data) );\n                } else {\n                    queue.push( data );\n                }\n            }\n            return queue || [];\n        }\n    },\n\n    dequeue: function( elem, type ) {\n        type = type || \"fx\";\n\n        var queue = jQuery.queue( elem, type ),\n            startLength = queue.length,\n            fn = queue.shift(),\n            hooks = jQuery._queueHooks( elem, type ),\n            next = function() {\n                jQuery.dequeue( elem, type );\n            };\n\n        // If the fx queue is dequeued, always remove the progress sentinel\n        if ( fn === \"inprogress\" ) {\n            fn = queue.shift();\n            startLength--;\n        }\n\n        if ( fn ) {\n\n            // Add a progress sentinel to prevent the fx queue from being\n            // automatically dequeued\n            if ( type === \"fx\" ) {\n                queue.unshift( \"inprogress\" );\n            }\n\n            // clear up the last queue stop function\n            delete hooks.stop;\n            fn.call( elem, next, hooks );\n        }\n\n        if ( !startLength && hooks ) {\n            hooks.empty.fire();\n        }\n    },\n\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\n    _queueHooks: function( elem, type ) {\n        var key = type + \"queueHooks\";\n        return jQuery._data( elem, key ) || jQuery._data( elem, key, {\n            empty: jQuery.Callbacks(\"once memory\").add(function() {\n                jQuery.removeData( elem, type + \"queue\", true );\n                jQuery.removeData( elem, key, true );\n            })\n        });\n    }\n});\n\njQuery.fn.extend({\n    queue: function( type, data ) {\n        var setter = 2;\n\n        if ( typeof type !== \"string\" ) {\n            data = type;\n            type = \"fx\";\n            setter--;\n        }\n\n        if ( arguments.length < setter ) {\n            return jQuery.queue( this[0], type );\n        }\n\n        return data === undefined ?\n            this :\n            this.each(function() {\n                var queue = jQuery.queue( this, type, data );\n\n                // ensure a hooks for this queue\n                jQuery._queueHooks( this, type );\n\n                if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n                    jQuery.dequeue( this, type );\n                }\n            });\n    },\n    dequeue: function( type ) {\n        return this.each(function() {\n            jQuery.dequeue( this, type );\n        });\n    },\n    // Based off of the plugin by Clint Helfers, with permission.\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\n    delay: function( time, type ) {\n        time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n        type = type || \"fx\";\n\n        return this.queue( type, function( next, hooks ) {\n            var timeout = setTimeout( next, time );\n            hooks.stop = function() {\n                clearTimeout( timeout );\n            };\n        });\n    },\n    clearQueue: function( type ) {\n        return this.queue( type || \"fx\", [] );\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function( type, obj ) {\n        var tmp,\n            count = 1,\n            defer = jQuery.Deferred(),\n            elements = this,\n            i = this.length,\n            resolve = function() {\n                if ( !( --count ) ) {\n                    defer.resolveWith( elements, [ elements ] );\n                }\n            };\n\n        if ( typeof type !== \"string\" ) {\n            obj = type;\n            type = undefined;\n        }\n        type = type || \"fx\";\n\n        while( i-- ) {\n            tmp = jQuery._data( elements[ i ], type + \"queueHooks\" );\n            if ( tmp && tmp.empty ) {\n                count++;\n                tmp.empty.add( resolve );\n            }\n        }\n        resolve();\n        return defer.promise( obj );\n    }\n});\nvar nodeHook, boolHook, fixSpecified,\n    rclass = /[\\t\\r\\n]/g,\n    rreturn = /\\r/g,\n    rtype = /^(?:button|input)$/i,\n    rfocusable = /^(?:button|input|object|select|textarea)$/i,\n    rclickable = /^a(?:rea|)$/i,\n    rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,\n    getSetAttribute = jQuery.support.getSetAttribute;\n\njQuery.fn.extend({\n    attr: function( name, value ) {\n        return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );\n    },\n\n    removeAttr: function( name ) {\n        return this.each(function() {\n            jQuery.removeAttr( this, name );\n        });\n    },\n\n    prop: function( name, value ) {\n        return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );\n    },\n\n    removeProp: function( name ) {\n        name = jQuery.propFix[ name ] || name;\n        return this.each(function() {\n            // try/catch handles cases where IE balks (such as removing a property on window)\n            try {\n                this[ name ] = undefined;\n                delete this[ name ];\n            } catch( e ) {}\n        });\n    },\n\n    addClass: function( value ) {\n        var classNames, i, l, elem,\n            setClass, c, cl;\n\n        if ( jQuery.isFunction( value ) ) {\n            return this.each(function( j ) {\n                jQuery( this ).addClass( value.call(this, j, this.className) );\n            });\n        }\n\n        if ( value && typeof value === \"string\" ) {\n            classNames = value.split( core_rspace );\n\n            for ( i = 0, l = this.length; i < l; i++ ) {\n                elem = this[ i ];\n\n                if ( elem.nodeType === 1 ) {\n                    if ( !elem.className && classNames.length === 1 ) {\n                        elem.className = value;\n\n                    } else {\n                        setClass = \" \" + elem.className + \" \";\n\n                        for ( c = 0, cl = classNames.length; c < cl; c++ ) {\n                            if ( setClass.indexOf( \" \" + classNames[ c ] + \" \" ) < 0 ) {\n                                setClass += classNames[ c ] + \" \";\n                            }\n                        }\n                        elem.className = jQuery.trim( setClass );\n                    }\n                }\n            }\n        }\n\n        return this;\n    },\n\n    removeClass: function( value ) {\n        var removes, className, elem, c, cl, i, l;\n\n        if ( jQuery.isFunction( value ) ) {\n            return this.each(function( j ) {\n                jQuery( this ).removeClass( value.call(this, j, this.className) );\n            });\n        }\n        if ( (value && typeof value === \"string\") || value === undefined ) {\n            removes = ( value || \"\" ).split( core_rspace );\n\n            for ( i = 0, l = this.length; i < l; i++ ) {\n                elem = this[ i ];\n                if ( elem.nodeType === 1 && elem.className ) {\n\n                    className = (\" \" + elem.className + \" \").replace( rclass, \" \" );\n\n                    // loop over each item in the removal list\n                    for ( c = 0, cl = removes.length; c < cl; c++ ) {\n                        // Remove until there is nothing to remove,\n                        while ( className.indexOf(\" \" + removes[ c ] + \" \") >= 0 ) {\n                            className = className.replace( \" \" + removes[ c ] + \" \" , \" \" );\n                        }\n                    }\n                    elem.className = value ? jQuery.trim( className ) : \"\";\n                }\n            }\n        }\n\n        return this;\n    },\n\n    toggleClass: function( value, stateVal ) {\n        var type = typeof value,\n            isBool = typeof stateVal === \"boolean\";\n\n        if ( jQuery.isFunction( value ) ) {\n            return this.each(function( i ) {\n                jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n            });\n        }\n\n        return this.each(function() {\n            if ( type === \"string\" ) {\n                // toggle individual class names\n                var className,\n                    i = 0,\n                    self = jQuery( this ),\n                    state = stateVal,\n                    classNames = value.split( core_rspace );\n\n                while ( (className = classNames[ i++ ]) ) {\n                    // check each className given, space separated list\n                    state = isBool ? state : !self.hasClass( className );\n                    self[ state ? \"addClass\" : \"removeClass\" ]( className );\n                }\n\n            } else if ( type === \"undefined\" || type === \"boolean\" ) {\n                if ( this.className ) {\n                    // store className if set\n                    jQuery._data( this, \"__className__\", this.className );\n                }\n\n                // toggle whole className\n                this.className = this.className || value === false ? \"\" : jQuery._data( this, \"__className__\" ) || \"\";\n            }\n        });\n    },\n\n    hasClass: function( selector ) {\n        var className = \" \" + selector + \" \",\n            i = 0,\n            l = this.length;\n        for ( ; i < l; i++ ) {\n            if ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n                return true;\n            }\n        }\n\n        return false;\n    },\n\n    val: function( value ) {\n        var hooks, ret, isFunction,\n            elem = this[0];\n\n        if ( !arguments.length ) {\n            if ( elem ) {\n                hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n                if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n                    return ret;\n                }\n\n                ret = elem.value;\n\n                return typeof ret === \"string\" ?\n                    // handle most common string cases\n                    ret.replace(rreturn, \"\") :\n                    // handle cases where value is null/undef or number\n                    ret == null ? \"\" : ret;\n            }\n\n            return;\n        }\n\n        isFunction = jQuery.isFunction( value );\n\n        return this.each(function( i ) {\n            var val,\n                self = jQuery(this);\n\n            if ( this.nodeType !== 1 ) {\n                return;\n            }\n\n            if ( isFunction ) {\n                val = value.call( this, i, self.val() );\n            } else {\n                val = value;\n            }\n\n            // Treat null/undefined as \"\"; convert numbers to string\n            if ( val == null ) {\n                val = \"\";\n            } else if ( typeof val === \"number\" ) {\n                val += \"\";\n            } else if ( jQuery.isArray( val ) ) {\n                val = jQuery.map(val, function ( value ) {\n                    return value == null ? \"\" : value + \"\";\n                });\n            }\n\n            hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n            // If set returns undefined, fall back to normal setting\n            if ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n                this.value = val;\n            }\n        });\n    }\n});\n\njQuery.extend({\n    valHooks: {\n        option: {\n            get: function( elem ) {\n                // attributes.value is undefined in Blackberry 4.7 but\n                // uses .value. See #6932\n                var val = elem.attributes.value;\n                return !val || val.specified ? elem.value : elem.text;\n            }\n        },\n        select: {\n            get: function( elem ) {\n                var value, i, max, option,\n                    index = elem.selectedIndex,\n                    values = [],\n                    options = elem.options,\n                    one = elem.type === \"select-one\";\n\n                // Nothing was selected\n                if ( index < 0 ) {\n                    return null;\n                }\n\n                // Loop through all the selected options\n                i = one ? index : 0;\n                max = one ? index + 1 : options.length;\n                for ( ; i < max; i++ ) {\n                    option = options[ i ];\n\n                    // Don't return options that are disabled or in a disabled optgroup\n                    if ( option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null) &&\n                            (!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" )) ) {\n\n                        // Get the specific value for the option\n                        value = jQuery( option ).val();\n\n                        // We don't need an array for one selects\n                        if ( one ) {\n                            return value;\n                        }\n\n                        // Multi-Selects return an array\n                        values.push( value );\n                    }\n                }\n\n                // Fixes Bug #2551 -- select.val() broken in IE after form.reset()\n                if ( one && !values.length && options.length ) {\n                    return jQuery( options[ index ] ).val();\n                }\n\n                return values;\n            },\n\n            set: function( elem, value ) {\n                var values = jQuery.makeArray( value );\n\n                jQuery(elem).find(\"option\").each(function() {\n                    this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;\n                });\n\n                if ( !values.length ) {\n                    elem.selectedIndex = -1;\n                }\n                return values;\n            }\n        }\n    },\n\n    // Unused in 1.8, left in so attrFn-stabbers won't die; remove in 1.9\n    attrFn: {},\n\n    attr: function( elem, name, value, pass ) {\n        var ret, hooks, notxml,\n            nType = elem.nodeType;\n\n        // don't get/set attributes on text, comment and attribute nodes\n        if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n            return;\n        }\n\n        if ( pass && jQuery.isFunction( jQuery.fn[ name ] ) ) {\n            return jQuery( elem )[ name ]( value );\n        }\n\n        // Fallback to prop when attributes are not supported\n        if ( typeof elem.getAttribute === \"undefined\" ) {\n            return jQuery.prop( elem, name, value );\n        }\n\n        notxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n        // All attributes are lowercase\n        // Grab necessary hook if one is defined\n        if ( notxml ) {\n            name = name.toLowerCase();\n            hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );\n        }\n\n        if ( value !== undefined ) {\n\n            if ( value === null ) {\n                jQuery.removeAttr( elem, name );\n                return;\n\n            } else if ( hooks && \"set\" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {\n                return ret;\n\n            } else {\n                elem.setAttribute( name, value + \"\" );\n                return value;\n            }\n\n        } else if ( hooks && \"get\" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {\n            return ret;\n\n        } else {\n\n            ret = elem.getAttribute( name );\n\n            // Non-existent attributes return null, we normalize to undefined\n            return ret === null ?\n                undefined :\n                ret;\n        }\n    },\n\n    removeAttr: function( elem, value ) {\n        var propName, attrNames, name, isBool,\n            i = 0;\n\n        if ( value && elem.nodeType === 1 ) {\n\n            attrNames = value.split( core_rspace );\n\n            for ( ; i < attrNames.length; i++ ) {\n                name = attrNames[ i ];\n\n                if ( name ) {\n                    propName = jQuery.propFix[ name ] || name;\n                    isBool = rboolean.test( name );\n\n                    // See #9699 for explanation of this approach (setting first, then removal)\n                    // Do not do this for boolean attributes (see #10870)\n                    if ( !isBool ) {\n                        jQuery.attr( elem, name, \"\" );\n                    }\n                    elem.removeAttribute( getSetAttribute ? name : propName );\n\n                    // Set corresponding property to false for boolean attributes\n                    if ( isBool && propName in elem ) {\n                        elem[ propName ] = false;\n                    }\n                }\n            }\n        }\n    },\n\n    attrHooks: {\n        type: {\n            set: function( elem, value ) {\n                // We can't allow the type property to be changed (since it causes problems in IE)\n                if ( rtype.test( elem.nodeName ) && elem.parentNode ) {\n                    jQuery.error( \"type property can't be changed\" );\n                } else if ( !jQuery.support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\") ) {\n                    // Setting the type on a radio button after the value resets the value in IE6-9\n                    // Reset value to it's default in case type is set after value\n                    // This is for element creation\n                    var val = elem.value;\n                    elem.setAttribute( \"type\", value );\n                    if ( val ) {\n                        elem.value = val;\n                    }\n                    return value;\n                }\n            }\n        },\n        // Use the value property for back compat\n        // Use the nodeHook for button elements in IE6/7 (#1954)\n        value: {\n            get: function( elem, name ) {\n                if ( nodeHook && jQuery.nodeName( elem, \"button\" ) ) {\n                    return nodeHook.get( elem, name );\n                }\n                return name in elem ?\n                    elem.value :\n                    null;\n            },\n            set: function( elem, value, name ) {\n                if ( nodeHook && jQuery.nodeName( elem, \"button\" ) ) {\n                    return nodeHook.set( elem, value, name );\n                }\n                // Does not return so that setAttribute is also used\n                elem.value = value;\n            }\n        }\n    },\n\n    propFix: {\n        tabindex: \"tabIndex\",\n        readonly: \"readOnly\",\n        \"for\": \"htmlFor\",\n        \"class\": \"className\",\n        maxlength: \"maxLength\",\n        cellspacing: \"cellSpacing\",\n        cellpadding: \"cellPadding\",\n        rowspan: \"rowSpan\",\n        colspan: \"colSpan\",\n        usemap: \"useMap\",\n        frameborder: \"frameBorder\",\n        contenteditable: \"contentEditable\"\n    },\n\n    prop: function( elem, name, value ) {\n        var ret, hooks, notxml,\n            nType = elem.nodeType;\n\n        // don't get/set properties on text, comment and attribute nodes\n        if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n            return;\n        }\n\n        notxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n        if ( notxml ) {\n            // Fix name and attach hooks\n            name = jQuery.propFix[ name ] || name;\n            hooks = jQuery.propHooks[ name ];\n        }\n\n        if ( value !== undefined ) {\n            if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n                return ret;\n\n            } else {\n                return ( elem[ name ] = value );\n            }\n\n        } else {\n            if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n                return ret;\n\n            } else {\n                return elem[ name ];\n            }\n        }\n    },\n\n    propHooks: {\n        tabIndex: {\n            get: function( elem ) {\n                // elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set\n                // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n                var attributeNode = elem.getAttributeNode(\"tabindex\");\n\n                return attributeNode && attributeNode.specified ?\n                    parseInt( attributeNode.value, 10 ) :\n                    rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?\n                        0 :\n                        undefined;\n            }\n        }\n    }\n});\n\n// Hook for boolean attributes\nboolHook = {\n    get: function( elem, name ) {\n        // Align boolean attributes with corresponding properties\n        // Fall back to attribute presence where some booleans are not supported\n        var attrNode,\n            property = jQuery.prop( elem, name );\n        return property === true || typeof property !== \"boolean\" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?\n            name.toLowerCase() :\n            undefined;\n    },\n    set: function( elem, value, name ) {\n        var propName;\n        if ( value === false ) {\n            // Remove boolean attributes when set to false\n            jQuery.removeAttr( elem, name );\n        } else {\n            // value is true since we know at this point it's type boolean and not false\n            // Set boolean attributes to the same name and set the DOM property\n            propName = jQuery.propFix[ name ] || name;\n            if ( propName in elem ) {\n                // Only set the IDL specifically if it already exists on the element\n                elem[ propName ] = true;\n            }\n\n            elem.setAttribute( name, name.toLowerCase() );\n        }\n        return name;\n    }\n};\n\n// IE6/7 do not support getting/setting some attributes with get/setAttribute\nif ( !getSetAttribute ) {\n\n    fixSpecified = {\n        name: true,\n        id: true,\n        coords: true\n    };\n\n    // Use this for any attribute in IE6/7\n    // This fixes almost every IE6/7 issue\n    nodeHook = jQuery.valHooks.button = {\n        get: function( elem, name ) {\n            var ret;\n            ret = elem.getAttributeNode( name );\n            return ret && ( fixSpecified[ name ] ? ret.value !== \"\" : ret.specified ) ?\n                ret.value :\n                undefined;\n        },\n        set: function( elem, value, name ) {\n            // Set the existing or create a new attribute node\n            var ret = elem.getAttributeNode( name );\n            if ( !ret ) {\n                ret = document.createAttribute( name );\n                elem.setAttributeNode( ret );\n            }\n            return ( ret.value = value + \"\" );\n        }\n    };\n\n    // Set width and height to auto instead of 0 on empty string( Bug #8150 )\n    // This is for removals\n    jQuery.each([ \"width\", \"height\" ], function( i, name ) {\n        jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {\n            set: function( elem, value ) {\n                if ( value === \"\" ) {\n                    elem.setAttribute( name, \"auto\" );\n                    return value;\n                }\n            }\n        });\n    });\n\n    // Set contenteditable to false on removals(#10429)\n    // Setting to empty string throws an error as an invalid value\n    jQuery.attrHooks.contenteditable = {\n        get: nodeHook.get,\n        set: function( elem, value, name ) {\n            if ( value === \"\" ) {\n                value = \"false\";\n            }\n            nodeHook.set( elem, value, name );\n        }\n    };\n}\n\n\n// Some attributes require a special call on IE\nif ( !jQuery.support.hrefNormalized ) {\n    jQuery.each([ \"href\", \"src\", \"width\", \"height\" ], function( i, name ) {\n        jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {\n            get: function( elem ) {\n                var ret = elem.getAttribute( name, 2 );\n                return ret === null ? undefined : ret;\n            }\n        });\n    });\n}\n\nif ( !jQuery.support.style ) {\n    jQuery.attrHooks.style = {\n        get: function( elem ) {\n            // Return undefined in the case of empty string\n            // Normalize to lowercase since IE uppercases css property names\n            return elem.style.cssText.toLowerCase() || undefined;\n        },\n        set: function( elem, value ) {\n            return ( elem.style.cssText = value + \"\" );\n        }\n    };\n}\n\n// Safari mis-reports the default selected property of an option\n// Accessing the parent's selectedIndex property fixes it\nif ( !jQuery.support.optSelected ) {\n    jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {\n        get: function( elem ) {\n            var parent = elem.parentNode;\n\n            if ( parent ) {\n                parent.selectedIndex;\n\n                // Make sure that it also works with optgroups, see #5701\n                if ( parent.parentNode ) {\n                    parent.parentNode.selectedIndex;\n                }\n            }\n            return null;\n        }\n    });\n}\n\n// IE6/7 call enctype encoding\nif ( !jQuery.support.enctype ) {\n    jQuery.propFix.enctype = \"encoding\";\n}\n\n// Radios and checkboxes getter/setter\nif ( !jQuery.support.checkOn ) {\n    jQuery.each([ \"radio\", \"checkbox\" ], function() {\n        jQuery.valHooks[ this ] = {\n            get: function( elem ) {\n                // Handle the case where in Webkit \"\" is returned instead of \"on\" if a value isn't specified\n                return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n            }\n        };\n    });\n}\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n    jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {\n        set: function( elem, value ) {\n            if ( jQuery.isArray( value ) ) {\n                return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n            }\n        }\n    });\n});\nvar rformElems = /^(?:textarea|input|select)$/i,\n    rtypenamespace = /^([^\\.]*|)(?:\\.(.+)|)$/,\n    rhoverHack = /(?:^|\\s)hover(\\.\\S+|)\\b/,\n    rkeyEvent = /^key/,\n    rmouseEvent = /^(?:mouse|contextmenu)|click/,\n    rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n    hoverHack = function( events ) {\n        return jQuery.event.special.hover ? events : events.replace( rhoverHack, \"mouseenter$1 mouseleave$1\" );\n    };\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n    add: function( elem, types, handler, data, selector ) {\n\n        var elemData, eventHandle, events,\n            t, tns, type, namespaces, handleObj,\n            handleObjIn, handlers, special;\n\n        // Don't attach events to noData or text/comment nodes (allow plain objects tho)\n        if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {\n            return;\n        }\n\n        // Caller can pass in an object of custom data in lieu of the handler\n        if ( handler.handler ) {\n            handleObjIn = handler;\n            handler = handleObjIn.handler;\n            selector = handleObjIn.selector;\n        }\n\n        // Make sure that the handler has a unique ID, used to find/remove it later\n        if ( !handler.guid ) {\n            handler.guid = jQuery.guid++;\n        }\n\n        // Init the element's event structure and main handler, if this is the first\n        events = elemData.events;\n        if ( !events ) {\n            elemData.events = events = {};\n        }\n        eventHandle = elemData.handle;\n        if ( !eventHandle ) {\n            elemData.handle = eventHandle = function( e ) {\n                // Discard the second event of a jQuery.event.trigger() and\n                // when an event is called after a page has unloaded\n                return typeof jQuery !== \"undefined\" && (!e || jQuery.event.triggered !== e.type) ?\n                    jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\n                    undefined;\n            };\n            // Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\n            eventHandle.elem = elem;\n        }\n\n        // Handle multiple events separated by a space\n        // jQuery(...).bind(\"mouseover mouseout\", fn);\n        types = jQuery.trim( hoverHack(types) ).split( \" \" );\n        for ( t = 0; t < types.length; t++ ) {\n\n            tns = rtypenamespace.exec( types[t] ) || [];\n            type = tns[1];\n            namespaces = ( tns[2] || \"\" ).split( \".\" ).sort();\n\n            // If event changes its type, use the special event handlers for the changed type\n            special = jQuery.event.special[ type ] || {};\n\n            // If selector defined, determine special event api type, otherwise given type\n            type = ( selector ? special.delegateType : special.bindType ) || type;\n\n            // Update special based on newly reset type\n            special = jQuery.event.special[ type ] || {};\n\n            // handleObj is passed to all event handlers\n            handleObj = jQuery.extend({\n                type: type,\n                origType: tns[1],\n                data: data,\n                handler: handler,\n                guid: handler.guid,\n                selector: selector,\n                needsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n                namespace: namespaces.join(\".\")\n            }, handleObjIn );\n\n            // Init the event handler queue if we're the first\n            handlers = events[ type ];\n            if ( !handlers ) {\n                handlers = events[ type ] = [];\n                handlers.delegateCount = 0;\n\n                // Only use addEventListener/attachEvent if the special events handler returns false\n                if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n                    // Bind the global event handler to the element\n                    if ( elem.addEventListener ) {\n                        elem.addEventListener( type, eventHandle, false );\n\n                    } else if ( elem.attachEvent ) {\n                        elem.attachEvent( \"on\" + type, eventHandle );\n                    }\n                }\n            }\n\n            if ( special.add ) {\n                special.add.call( elem, handleObj );\n\n                if ( !handleObj.handler.guid ) {\n                    handleObj.handler.guid = handler.guid;\n                }\n            }\n\n            // Add to the element's handler list, delegates in front\n            if ( selector ) {\n                handlers.splice( handlers.delegateCount++, 0, handleObj );\n            } else {\n                handlers.push( handleObj );\n            }\n\n            // Keep track of which events have ever been used, for event optimization\n            jQuery.event.global[ type ] = true;\n        }\n\n        // Nullify elem to prevent memory leaks in IE\n        elem = null;\n    },\n\n    global: {},\n\n    // Detach an event or set of events from an element\n    remove: function( elem, types, handler, selector, mappedTypes ) {\n\n        var t, tns, type, origType, namespaces, origCount,\n            j, events, special, eventType, handleObj,\n            elemData = jQuery.hasData( elem ) && jQuery._data( elem );\n\n        if ( !elemData || !(events = elemData.events) ) {\n            return;\n        }\n\n        // Once for each type.namespace in types; type may be omitted\n        types = jQuery.trim( hoverHack( types || \"\" ) ).split(\" \");\n        for ( t = 0; t < types.length; t++ ) {\n            tns = rtypenamespace.exec( types[t] ) || [];\n            type = origType = tns[1];\n            namespaces = tns[2];\n\n            // Unbind all events (on this namespace, if provided) for the element\n            if ( !type ) {\n                for ( type in events ) {\n                    jQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n                }\n                continue;\n            }\n\n            special = jQuery.event.special[ type ] || {};\n            type = ( selector? special.delegateType : special.bindType ) || type;\n            eventType = events[ type ] || [];\n            origCount = eventType.length;\n            namespaces = namespaces ? new RegExp(\"(^|\\\\.)\" + namespaces.split(\".\").sort().join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null;\n\n            // Remove matching events\n            for ( j = 0; j < eventType.length; j++ ) {\n                handleObj = eventType[ j ];\n\n                if ( ( mappedTypes || origType === handleObj.origType ) &&\n                     ( !handler || handler.guid === handleObj.guid ) &&\n                     ( !namespaces || namespaces.test( handleObj.namespace ) ) &&\n                     ( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n                    eventType.splice( j--, 1 );\n\n                    if ( handleObj.selector ) {\n                        eventType.delegateCount--;\n                    }\n                    if ( special.remove ) {\n                        special.remove.call( elem, handleObj );\n                    }\n                }\n            }\n\n            // Remove generic event handler if we removed something and no more handlers exist\n            // (avoids potential for endless recursion during removal of special event handlers)\n            if ( eventType.length === 0 && origCount !== eventType.length ) {\n                if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n                    jQuery.removeEvent( elem, type, elemData.handle );\n                }\n\n                delete events[ type ];\n            }\n        }\n\n        // Remove the expando if it's no longer used\n        if ( jQuery.isEmptyObject( events ) ) {\n            delete elemData.handle;\n\n            // removeData also checks for emptiness and clears the expando if empty\n            // so use it instead of delete\n            jQuery.removeData( elem, \"events\", true );\n        }\n    },\n\n    // Events that are safe to short-circuit if no handlers are attached.\n    // Native DOM events should not be added, they may have inline handlers.\n    customEvent: {\n        \"getData\": true,\n        \"setData\": true,\n        \"changeData\": true\n    },\n\n    trigger: function( event, data, elem, onlyHandlers ) {\n        // Don't do events on text and comment nodes\n        if ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {\n            return;\n        }\n\n        // Event object or event type\n        var cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType,\n            type = event.type || event,\n            namespaces = [];\n\n        // focus/blur morphs to focusin/out; ensure we're not firing them right now\n        if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n            return;\n        }\n\n        if ( type.indexOf( \"!\" ) >= 0 ) {\n            // Exclusive events trigger only for the exact event (no namespaces)\n            type = type.slice(0, -1);\n            exclusive = true;\n        }\n\n        if ( type.indexOf( \".\" ) >= 0 ) {\n            // Namespaced trigger; create a regexp to match event type in handle()\n            namespaces = type.split(\".\");\n            type = namespaces.shift();\n            namespaces.sort();\n        }\n\n        if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {\n            // No jQuery handlers for this event type, and it can't have inline handlers\n            return;\n        }\n\n        // Caller can pass in an Event, Object, or just an event type string\n        event = typeof event === \"object\" ?\n            // jQuery.Event object\n            event[ jQuery.expando ] ? event :\n            // Object literal\n            new jQuery.Event( type, event ) :\n            // Just the event type (string)\n            new jQuery.Event( type );\n\n        event.type = type;\n        event.isTrigger = true;\n        event.exclusive = exclusive;\n        event.namespace = namespaces.join( \".\" );\n        event.namespace_re = event.namespace? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null;\n        ontype = type.indexOf( \":\" ) < 0 ? \"on\" + type : \"\";\n\n        // Handle a global trigger\n        if ( !elem ) {\n\n            // TODO: Stop taunting the data cache; remove global events and always attach to document\n            cache = jQuery.cache;\n            for ( i in cache ) {\n                if ( cache[ i ].events && cache[ i ].events[ type ] ) {\n                    jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );\n                }\n            }\n            return;\n        }\n\n        // Clean up the event in case it is being reused\n        event.result = undefined;\n        if ( !event.target ) {\n            event.target = elem;\n        }\n\n        // Clone any incoming data and prepend the event, creating the handler arg list\n        data = data != null ? jQuery.makeArray( data ) : [];\n        data.unshift( event );\n\n        // Allow special events to draw outside the lines\n        special = jQuery.event.special[ type ] || {};\n        if ( special.trigger && special.trigger.apply( elem, data ) === false ) {\n            return;\n        }\n\n        // Determine event propagation path in advance, per W3C events spec (#9951)\n        // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n        eventPath = [[ elem, special.bindType || type ]];\n        if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n            bubbleType = special.delegateType || type;\n            cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;\n            for ( old = elem; cur; cur = cur.parentNode ) {\n                eventPath.push([ cur, bubbleType ]);\n                old = cur;\n            }\n\n            // Only add window if we got to document (e.g., not plain obj or detached DOM)\n            if ( old === (elem.ownerDocument || document) ) {\n                eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);\n            }\n        }\n\n        // Fire handlers on the event path\n        for ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {\n\n            cur = eventPath[i][0];\n            event.type = eventPath[i][1];\n\n            handle = ( jQuery._data( cur, \"events\" ) || {} )[ event.type ] && jQuery._data( cur, \"handle\" );\n            if ( handle ) {\n                handle.apply( cur, data );\n            }\n            // Note that this is a bare JS function and not a jQuery handler\n            handle = ontype && cur[ ontype ];\n            if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {\n                event.preventDefault();\n            }\n        }\n        event.type = type;\n\n        // If nobody prevented the default action, do it now\n        if ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n            if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&\n                !(type === \"click\" && jQuery.nodeName( elem, \"a\" )) && jQuery.acceptData( elem ) ) {\n\n                // Call a native DOM method on the target with the same name name as the event.\n                // Can't use an .isFunction() check here because IE6/7 fails that test.\n                // Don't do default actions on window, that's where global variables be (#6170)\n                // IE<9 dies on focus/blur to hidden element (#1486)\n                if ( ontype && elem[ type ] && ((type !== \"focus\" && type !== \"blur\") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {\n\n                    // Don't re-trigger an onFOO event when we call its FOO() method\n                    old = elem[ ontype ];\n\n                    if ( old ) {\n                        elem[ ontype ] = null;\n                    }\n\n                    // Prevent re-triggering of the same event, since we already bubbled it above\n                    jQuery.event.triggered = type;\n                    elem[ type ]();\n                    jQuery.event.triggered = undefined;\n\n                    if ( old ) {\n                        elem[ ontype ] = old;\n                    }\n                }\n            }\n        }\n\n        return event.result;\n    },\n\n    dispatch: function( event ) {\n\n        // Make a writable jQuery.Event from the native event object\n        event = jQuery.event.fix( event || window.event );\n\n        var i, j, cur, ret, selMatch, matched, matches, handleObj, sel, related,\n            handlers = ( (jQuery._data( this, \"events\" ) || {} )[ event.type ] || []),\n            delegateCount = handlers.delegateCount,\n            args = core_slice.call( arguments ),\n            run_all = !event.exclusive && !event.namespace,\n            special = jQuery.event.special[ event.type ] || {},\n            handlerQueue = [];\n\n        // Use the fix-ed jQuery.Event rather than the (read-only) native event\n        args[0] = event;\n        event.delegateTarget = this;\n\n        // Call the preDispatch hook for the mapped type, and let it bail if desired\n        if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n            return;\n        }\n\n        // Determine handlers that should run if there are delegated events\n        // Avoid non-left-click bubbling in Firefox (#3861)\n        if ( delegateCount && !(event.button && event.type === \"click\") ) {\n\n            for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {\n\n                // Don't process clicks (ONLY) on disabled elements (#6911, #8165, #11382, #11764)\n                if ( cur.disabled !== true || event.type !== \"click\" ) {\n                    selMatch = {};\n                    matches = [];\n                    for ( i = 0; i < delegateCount; i++ ) {\n                        handleObj = handlers[ i ];\n                        sel = handleObj.selector;\n\n                        if ( selMatch[ sel ] === undefined ) {\n                            selMatch[ sel ] = handleObj.needsContext ?\n                                jQuery( sel, this ).index( cur ) >= 0 :\n                                jQuery.find( sel, this, null, [ cur ] ).length;\n                        }\n                        if ( selMatch[ sel ] ) {\n                            matches.push( handleObj );\n                        }\n                    }\n                    if ( matches.length ) {\n                        handlerQueue.push({ elem: cur, matches: matches });\n                    }\n                }\n            }\n        }\n\n        // Add the remaining (directly-bound) handlers\n        if ( handlers.length > delegateCount ) {\n            handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });\n        }\n\n        // Run delegates first; they may want to stop propagation beneath us\n        for ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {\n            matched = handlerQueue[ i ];\n            event.currentTarget = matched.elem;\n\n            for ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {\n                handleObj = matched.matches[ j ];\n\n                // Triggered event must either 1) be non-exclusive and have no namespace, or\n                // 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\n                if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {\n\n                    event.data = handleObj.data;\n                    event.handleObj = handleObj;\n\n                    ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n                            .apply( matched.elem, args );\n\n                    if ( ret !== undefined ) {\n                        event.result = ret;\n                        if ( ret === false ) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                        }\n                    }\n                }\n            }\n        }\n\n        // Call the postDispatch hook for the mapped type\n        if ( special.postDispatch ) {\n            special.postDispatch.call( this, event );\n        }\n\n        return event.result;\n    },\n\n    // Includes some event props shared by KeyEvent and MouseEvent\n    // *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***\n    props: \"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n    fixHooks: {},\n\n    keyHooks: {\n        props: \"char charCode key keyCode\".split(\" \"),\n        filter: function( event, original ) {\n\n            // Add which for key events\n            if ( event.which == null ) {\n                event.which = original.charCode != null ? original.charCode : original.keyCode;\n            }\n\n            return event;\n        }\n    },\n\n    mouseHooks: {\n        props: \"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n        filter: function( event, original ) {\n            var eventDoc, doc, body,\n                button = original.button,\n                fromElement = original.fromElement;\n\n            // Calculate pageX/Y if missing and clientX/Y available\n            if ( event.pageX == null && original.clientX != null ) {\n                eventDoc = event.target.ownerDocument || document;\n                doc = eventDoc.documentElement;\n                body = eventDoc.body;\n\n                event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n                event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n            }\n\n            // Add relatedTarget, if necessary\n            if ( !event.relatedTarget && fromElement ) {\n                event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;\n            }\n\n            // Add which for click: 1 === left; 2 === middle; 3 === right\n            // Note: button is not normalized, so don't use it\n            if ( !event.which && button !== undefined ) {\n                event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n            }\n\n            return event;\n        }\n    },\n\n    fix: function( event ) {\n        if ( event[ jQuery.expando ] ) {\n            return event;\n        }\n\n        // Create a writable copy of the event object and normalize some properties\n        var i, prop,\n            originalEvent = event,\n            fixHook = jQuery.event.fixHooks[ event.type ] || {},\n            copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n        event = jQuery.Event( originalEvent );\n\n        for ( i = copy.length; i; ) {\n            prop = copy[ --i ];\n            event[ prop ] = originalEvent[ prop ];\n        }\n\n        // Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)\n        if ( !event.target ) {\n            event.target = originalEvent.srcElement || document;\n        }\n\n        // Target should not be a text node (#504, Safari)\n        if ( event.target.nodeType === 3 ) {\n            event.target = event.target.parentNode;\n        }\n\n        // For mouse/key events, metaKey==false if it's undefined (#3368, #11328; IE6/7/8)\n        event.metaKey = !!event.metaKey;\n\n        return fixHook.filter? fixHook.filter( event, originalEvent ) : event;\n    },\n\n    special: {\n        load: {\n            // Prevent triggered image.load events from bubbling to window.load\n            noBubble: true\n        },\n\n        focus: {\n            delegateType: \"focusin\"\n        },\n        blur: {\n            delegateType: \"focusout\"\n        },\n\n        beforeunload: {\n            setup: function( data, namespaces, eventHandle ) {\n                // We only want to do this special case on windows\n                if ( jQuery.isWindow( this ) ) {\n                    this.onbeforeunload = eventHandle;\n                }\n            },\n\n            teardown: function( namespaces, eventHandle ) {\n                if ( this.onbeforeunload === eventHandle ) {\n                    this.onbeforeunload = null;\n                }\n            }\n        }\n    },\n\n    simulate: function( type, elem, event, bubble ) {\n        // Piggyback on a donor event to simulate a different one.\n        // Fake originalEvent to avoid donor's stopPropagation, but if the\n        // simulated event prevents default then we do the same on the donor.\n        var e = jQuery.extend(\n            new jQuery.Event(),\n            event,\n            { type: type,\n                isSimulated: true,\n                originalEvent: {}\n            }\n        );\n        if ( bubble ) {\n            jQuery.event.trigger( e, null, elem );\n        } else {\n            jQuery.event.dispatch.call( elem, e );\n        }\n        if ( e.isDefaultPrevented() ) {\n            event.preventDefault();\n        }\n    }\n};\n\n// Some plugins are using, but it's undocumented/deprecated and will be removed.\n// The 1.7 special event interface should provide all the hooks needed now.\njQuery.event.handle = jQuery.event.dispatch;\n\njQuery.removeEvent = document.removeEventListener ?\n    function( elem, type, handle ) {\n        if ( elem.removeEventListener ) {\n            elem.removeEventListener( type, handle, false );\n        }\n    } :\n    function( elem, type, handle ) {\n        var name = \"on\" + type;\n\n        if ( elem.detachEvent ) {\n\n            // #8545, #7054, preventing memory leaks for custom events in IE6-8 –\n            // detachEvent needed property on element, by name of that event, to properly expose it to GC\n            if ( typeof elem[ name ] === \"undefined\" ) {\n                elem[ name ] = null;\n            }\n\n            elem.detachEvent( name, handle );\n        }\n    };\n\njQuery.Event = function( src, props ) {\n    // Allow instantiation without the 'new' keyword\n    if ( !(this instanceof jQuery.Event) ) {\n        return new jQuery.Event( src, props );\n    }\n\n    // Event object\n    if ( src && src.type ) {\n        this.originalEvent = src;\n        this.type = src.type;\n\n        // Events bubbling up the document may have been marked as prevented\n        // by a handler lower down the tree; reflect the correct value.\n        this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||\n            src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;\n\n    // Event type\n    } else {\n        this.type = src;\n    }\n\n    // Put explicitly provided properties onto the event object\n    if ( props ) {\n        jQuery.extend( this, props );\n    }\n\n    // Create a timestamp if incoming event doesn't have one\n    this.timeStamp = src && src.timeStamp || jQuery.now();\n\n    // Mark it as fixed\n    this[ jQuery.expando ] = true;\n};\n\nfunction returnFalse() {\n    return false;\n}\nfunction returnTrue() {\n    return true;\n}\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n    preventDefault: function() {\n        this.isDefaultPrevented = returnTrue;\n\n        var e = this.originalEvent;\n        if ( !e ) {\n            return;\n        }\n\n        // if preventDefault exists run it on the original event\n        if ( e.preventDefault ) {\n            e.preventDefault();\n\n        // otherwise set the returnValue property of the original event to false (IE)\n        } else {\n            e.returnValue = false;\n        }\n    },\n    stopPropagation: function() {\n        this.isPropagationStopped = returnTrue;\n\n        var e = this.originalEvent;\n        if ( !e ) {\n            return;\n        }\n        // if stopPropagation exists run it on the original event\n        if ( e.stopPropagation ) {\n            e.stopPropagation();\n        }\n        // otherwise set the cancelBubble property of the original event to true (IE)\n        e.cancelBubble = true;\n    },\n    stopImmediatePropagation: function() {\n        this.isImmediatePropagationStopped = returnTrue;\n        this.stopPropagation();\n    },\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\njQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n}, function( orig, fix ) {\n    jQuery.event.special[ orig ] = {\n        delegateType: fix,\n        bindType: fix,\n\n        handle: function( event ) {\n            var ret,\n                target = this,\n                related = event.relatedTarget,\n                handleObj = event.handleObj,\n                selector = handleObj.selector;\n\n            // For mousenter/leave call the handler if related is outside the target.\n            // NB: No relatedTarget if the mouse left/entered the browser window\n            if ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n                event.type = handleObj.origType;\n                ret = handleObj.handler.apply( this, arguments );\n                event.type = fix;\n            }\n            return ret;\n        }\n    };\n});\n\n// IE submit delegation\nif ( !jQuery.support.submitBubbles ) {\n\n    jQuery.event.special.submit = {\n        setup: function() {\n            // Only need this for delegated form submit events\n            if ( jQuery.nodeName( this, \"form\" ) ) {\n                return false;\n            }\n\n            // Lazy-add a submit handler when a descendant form may potentially be submitted\n            jQuery.event.add( this, \"click._submit keypress._submit\", function( e ) {\n                // Node name check avoids a VML-related crash in IE (#9807)\n                var elem = e.target,\n                    form = jQuery.nodeName( elem, \"input\" ) || jQuery.nodeName( elem, \"button\" ) ? elem.form : undefined;\n                if ( form && !jQuery._data( form, \"_submit_attached\" ) ) {\n                    jQuery.event.add( form, \"submit._submit\", function( event ) {\n                        event._submit_bubble = true;\n                    });\n                    jQuery._data( form, \"_submit_attached\", true );\n                }\n            });\n            // return undefined since we don't need an event listener\n        },\n\n        postDispatch: function( event ) {\n            // If form was submitted by the user, bubble the event up the tree\n            if ( event._submit_bubble ) {\n                delete event._submit_bubble;\n                if ( this.parentNode && !event.isTrigger ) {\n                    jQuery.event.simulate( \"submit\", this.parentNode, event, true );\n                }\n            }\n        },\n\n        teardown: function() {\n            // Only need this for delegated form submit events\n            if ( jQuery.nodeName( this, \"form\" ) ) {\n                return false;\n            }\n\n            // Remove delegated handlers; cleanData eventually reaps submit handlers attached above\n            jQuery.event.remove( this, \"._submit\" );\n        }\n    };\n}\n\n// IE change delegation and checkbox/radio fix\nif ( !jQuery.support.changeBubbles ) {\n\n    jQuery.event.special.change = {\n\n        setup: function() {\n\n            if ( rformElems.test( this.nodeName ) ) {\n                // IE doesn't fire change on a check/radio until blur; trigger it on click\n                // after a propertychange. Eat the blur-change in special.change.handle.\n                // This still fires onchange a second time for check/radio after blur.\n                if ( this.type === \"checkbox\" || this.type === \"radio\" ) {\n                    jQuery.event.add( this, \"propertychange._change\", function( event ) {\n                        if ( event.originalEvent.propertyName === \"checked\" ) {\n                            this._just_changed = true;\n                        }\n                    });\n                    jQuery.event.add( this, \"click._change\", function( event ) {\n                        if ( this._just_changed && !event.isTrigger ) {\n                            this._just_changed = false;\n                        }\n                        // Allow triggered, simulated change events (#11500)\n                        jQuery.event.simulate( \"change\", this, event, true );\n                    });\n                }\n                return false;\n            }\n            // Delegated event; lazy-add a change handler on descendant inputs\n            jQuery.event.add( this, \"beforeactivate._change\", function( e ) {\n                var elem = e.target;\n\n                if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, \"_change_attached\" ) ) {\n                    jQuery.event.add( elem, \"change._change\", function( event ) {\n                        if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {\n                            jQuery.event.simulate( \"change\", this.parentNode, event, true );\n                        }\n                    });\n                    jQuery._data( elem, \"_change_attached\", true );\n                }\n            });\n        },\n\n        handle: function( event ) {\n            var elem = event.target;\n\n            // Swallow native change events from checkbox/radio, we already triggered them above\n            if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== \"radio\" && elem.type !== \"checkbox\") ) {\n                return event.handleObj.handler.apply( this, arguments );\n            }\n        },\n\n        teardown: function() {\n            jQuery.event.remove( this, \"._change\" );\n\n            return !rformElems.test( this.nodeName );\n        }\n    };\n}\n\n// Create \"bubbling\" focus and blur events\nif ( !jQuery.support.focusinBubbles ) {\n    jQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n        // Attach a single capturing handler while someone wants focusin/focusout\n        var attaches = 0,\n            handler = function( event ) {\n                jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n            };\n\n        jQuery.event.special[ fix ] = {\n            setup: function() {\n                if ( attaches++ === 0 ) {\n                    document.addEventListener( orig, handler, true );\n                }\n            },\n            teardown: function() {\n                if ( --attaches === 0 ) {\n                    document.removeEventListener( orig, handler, true );\n                }\n            }\n        };\n    });\n}\n\njQuery.fn.extend({\n\n    on: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n        var origFn, type;\n\n        // Types can be a map of types/handlers\n        if ( typeof types === \"object\" ) {\n            // ( types-Object, selector, data )\n            if ( typeof selector !== \"string\" ) { // && selector != null\n                // ( types-Object, data )\n                data = data || selector;\n                selector = undefined;\n            }\n            for ( type in types ) {\n                this.on( type, selector, data, types[ type ], one );\n            }\n            return this;\n        }\n\n        if ( data == null && fn == null ) {\n            // ( types, fn )\n            fn = selector;\n            data = selector = undefined;\n        } else if ( fn == null ) {\n            if ( typeof selector === \"string\" ) {\n                // ( types, selector, fn )\n                fn = data;\n                data = undefined;\n            } else {\n                // ( types, data, fn )\n                fn = data;\n                data = selector;\n                selector = undefined;\n            }\n        }\n        if ( fn === false ) {\n            fn = returnFalse;\n        } else if ( !fn ) {\n            return this;\n        }\n\n        if ( one === 1 ) {\n            origFn = fn;\n            fn = function( event ) {\n                // Can use an empty set, since event contains the info\n                jQuery().off( event );\n                return origFn.apply( this, arguments );\n            };\n            // Use same guid so caller can remove using origFn\n            fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n        }\n        return this.each( function() {\n            jQuery.event.add( this, types, fn, data, selector );\n        });\n    },\n    one: function( types, selector, data, fn ) {\n        return this.on( types, selector, data, fn, 1 );\n    },\n    off: function( types, selector, fn ) {\n        var handleObj, type;\n        if ( types && types.preventDefault && types.handleObj ) {\n            // ( event )  dispatched jQuery.Event\n            handleObj = types.handleObj;\n            jQuery( types.delegateTarget ).off(\n                handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n                handleObj.selector,\n                handleObj.handler\n            );\n            return this;\n        }\n        if ( typeof types === \"object\" ) {\n            // ( types-object [, selector] )\n            for ( type in types ) {\n                this.off( type, selector, types[ type ] );\n            }\n            return this;\n        }\n        if ( selector === false || typeof selector === \"function\" ) {\n            // ( types [, fn] )\n            fn = selector;\n            selector = undefined;\n        }\n        if ( fn === false ) {\n            fn = returnFalse;\n        }\n        return this.each(function() {\n            jQuery.event.remove( this, types, fn, selector );\n        });\n    },\n\n    bind: function( types, data, fn ) {\n        return this.on( types, null, data, fn );\n    },\n    unbind: function( types, fn ) {\n        return this.off( types, null, fn );\n    },\n\n    live: function( types, data, fn ) {\n        jQuery( this.context ).on( types, this.selector, data, fn );\n        return this;\n    },\n    die: function( types, fn ) {\n        jQuery( this.context ).off( types, this.selector || \"**\", fn );\n        return this;\n    },\n\n    delegate: function( selector, types, data, fn ) {\n        return this.on( types, selector, data, fn );\n    },\n    undelegate: function( selector, types, fn ) {\n        // ( namespace ) or ( selector, types [, fn] )\n        return arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n    },\n\n    trigger: function( type, data ) {\n        return this.each(function() {\n            jQuery.event.trigger( type, data, this );\n        });\n    },\n    triggerHandler: function( type, data ) {\n        if ( this[0] ) {\n            return jQuery.event.trigger( type, data, this[0], true );\n        }\n    },\n\n    toggle: function( fn ) {\n        // Save reference to arguments for access in closure\n        var args = arguments,\n            guid = fn.guid || jQuery.guid++,\n            i = 0,\n            toggler = function( event ) {\n                // Figure out which function to execute\n                var lastToggle = ( jQuery._data( this, \"lastToggle\" + fn.guid ) || 0 ) % i;\n                jQuery._data( this, \"lastToggle\" + fn.guid, lastToggle + 1 );\n\n                // Make sure that clicks stop\n                event.preventDefault();\n\n                // and execute the function\n                return args[ lastToggle ].apply( this, arguments ) || false;\n            };\n\n        // link all the functions, so any of them can unbind this click handler\n        toggler.guid = guid;\n        while ( i < args.length ) {\n            args[ i++ ].guid = guid;\n        }\n\n        return this.click( toggler );\n    },\n\n    hover: function( fnOver, fnOut ) {\n        return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n    }\n});\n\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n    \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n    \"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n    // Handle event binding\n    jQuery.fn[ name ] = function( data, fn ) {\n        if ( fn == null ) {\n            fn = data;\n            data = null;\n        }\n\n        return arguments.length > 0 ?\n            this.on( name, null, data, fn ) :\n            this.trigger( name );\n    };\n\n    if ( rkeyEvent.test( name ) ) {\n        jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;\n    }\n\n    if ( rmouseEvent.test( name ) ) {\n        jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;\n    }\n});\n/*!\n * Sizzle CSS Selector Engine\n * Copyright 2012 jQuery Foundation and other contributors\n * Released under the MIT license\n * http://sizzlejs.com/\n */\n(function( window, undefined ) {\n\nvar cachedruns,\n    assertGetIdNotName,\n    Expr,\n    getText,\n    isXML,\n    contains,\n    compile,\n    sortOrder,\n    hasDuplicate,\n    outermostContext,\n\n    baseHasDuplicate = true,\n    strundefined = \"undefined\",\n\n    expando = ( \"sizcache\" + Math.random() ).replace( \".\", \"\" ),\n\n    Token = String,\n    document = window.document,\n    docElem = document.documentElement,\n    dirruns = 0,\n    done = 0,\n    pop = [].pop,\n    push = [].push,\n    slice = [].slice,\n    // Use a stripped-down indexOf if a native one is unavailable\n    indexOf = [].indexOf || function( elem ) {\n        var i = 0,\n            len = this.length;\n        for ( ; i < len; i++ ) {\n            if ( this[i] === elem ) {\n                return i;\n            }\n        }\n        return -1;\n    },\n\n    // Augment a function for special use by Sizzle\n    markFunction = function( fn, value ) {\n        fn[ expando ] = value == null || value;\n        return fn;\n    },\n\n    createCache = function() {\n        var cache = {},\n            keys = [];\n\n        return markFunction(function( key, value ) {\n            // Only keep the most recent entries\n            if ( keys.push( key ) > Expr.cacheLength ) {\n                delete cache[ keys.shift() ];\n            }\n\n            return (cache[ key ] = value);\n        }, cache );\n    },\n\n    classCache = createCache(),\n    tokenCache = createCache(),\n    compilerCache = createCache(),\n\n    // Regex\n\n    // Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n    whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n    // http://www.w3.org/TR/css3-syntax/#characters\n    characterEncoding = \"(?:\\\\\\\\.|[-\\\\w]|[^\\\\x00-\\\\xa0])+\",\n\n    // Loosely modeled on CSS identifier characters\n    // An unquoted value should be a CSS identifier (http://www.w3.org/TR/css3-selectors/#attribute-selectors)\n    // Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n    identifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n    // Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors\n    operators = \"([*^$|!~]?=)\",\n    attributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")\" + whitespace +\n        \"*(?:\" + operators + whitespace + \"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\" + identifier + \")|)|)\" + whitespace + \"*\\\\]\",\n\n    // Prefer arguments not in parens/brackets,\n    //   then attribute selectors and non-pseudos (denoted by :),\n    //   then anything else\n    // These preferences are here to reduce the number of selectors\n    //   needing tokenize in the PSEUDO preFilter\n    pseudos = \":(\" + characterEncoding + \")(?:\\\\((?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\2|([^()[\\\\]]*|(?:(?:\" + attributes + \")|[^:]|\\\\\\\\.)*|.*))\\\\)|)\",\n\n    // For matchExpr.POS and matchExpr.needsContext\n    pos = \":(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n        \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\",\n\n    // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n    rcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n    rcombinators = new RegExp( \"^\" + whitespace + \"*([\\\\x20\\\\t\\\\r\\\\n\\\\f>+~])\" + whitespace + \"*\" ),\n    rpseudo = new RegExp( pseudos ),\n\n    // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w\\-]+)|(\\w+)|\\.([\\w\\-]+))$/,\n\n    rnot = /^:not/,\n    rsibling = /[\\x20\\t\\r\\n\\f]*[+~]/,\n    rendsWithNot = /:not\\($/,\n\n    rheader = /h\\d/i,\n    rinputs = /input|select|textarea|button/i,\n\n    rbackslash = /\\\\(?!\\\\)/g,\n\n    matchExpr = {\n        \"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n        \"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n        \"NAME\": new RegExp( \"^\\\\[name=['\\\"]?(\" + characterEncoding + \")['\\\"]?\\\\]\" ),\n        \"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n        \"ATTR\": new RegExp( \"^\" + attributes ),\n        \"PSEUDO\": new RegExp( \"^\" + pseudos ),\n        \"POS\": new RegExp( pos, \"i\" ),\n        \"CHILD\": new RegExp( \"^:(only|nth|first|last)-child(?:\\\\(\" + whitespace +\n            \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n            \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n        // For use in libraries implementing .is()\n        \"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|\" + pos, \"i\" )\n    },\n\n    // Support\n\n    // Used for testing something on an element\n    assert = function( fn ) {\n        var div = document.createElement(\"div\");\n\n        try {\n            return fn( div );\n        } catch (e) {\n            return false;\n        } finally {\n            // release memory in IE\n            div = null;\n        }\n    },\n\n    // Check if getElementsByTagName(\"*\") returns only elements\n    assertTagNameNoComments = assert(function( div ) {\n        div.appendChild( document.createComment(\"\") );\n        return !div.getElementsByTagName(\"*\").length;\n    }),\n\n    // Check if getAttribute returns normalized href attributes\n    assertHrefNotNormalized = assert(function( div ) {\n        div.innerHTML = \"<a href='#'></a>\";\n        return div.firstChild && typeof div.firstChild.getAttribute !== strundefined &&\n            div.firstChild.getAttribute(\"href\") === \"#\";\n    }),\n\n    // Check if attributes should be retrieved by attribute nodes\n    assertAttributes = assert(function( div ) {\n        div.innerHTML = \"<select></select>\";\n        var type = typeof div.lastChild.getAttribute(\"multiple\");\n        // IE8 returns a string for some attributes even when not present\n        return type !== \"boolean\" && type !== \"string\";\n    }),\n\n    // Check if getElementsByClassName can be trusted\n    assertUsableClassName = assert(function( div ) {\n        // Opera can't find a second classname (in 9.6)\n        div.innerHTML = \"<div class='hidden e'></div><div class='hidden'></div>\";\n        if ( !div.getElementsByClassName || !div.getElementsByClassName(\"e\").length ) {\n            return false;\n        }\n\n        // Safari 3.2 caches class attributes and doesn't catch changes\n        div.lastChild.className = \"e\";\n        return div.getElementsByClassName(\"e\").length === 2;\n    }),\n\n    // Check if getElementById returns elements by name\n    // Check if getElementsByName privileges form controls or returns elements by ID\n    assertUsableName = assert(function( div ) {\n        // Inject content\n        div.id = expando + 0;\n        div.innerHTML = \"<a name='\" + expando + \"'></a><div name='\" + expando + \"'></div>\";\n        docElem.insertBefore( div, docElem.firstChild );\n\n        // Test\n        var pass = document.getElementsByName &&\n            // buggy browsers will return fewer than the correct 2\n            document.getElementsByName( expando ).length === 2 +\n            // buggy browsers will return more than the correct 0\n            document.getElementsByName( expando + 0 ).length;\n        assertGetIdNotName = !document.getElementById( expando );\n\n        // Cleanup\n        docElem.removeChild( div );\n\n        return pass;\n    });\n\n// If slice is not available, provide a backup\ntry {\n    slice.call( docElem.childNodes, 0 )[0].nodeType;\n} catch ( e ) {\n    slice = function( i ) {\n        var elem,\n            results = [];\n        for ( ; (elem = this[i]); i++ ) {\n            results.push( elem );\n        }\n        return results;\n    };\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n    results = results || [];\n    context = context || document;\n    var match, elem, xml, m,\n        nodeType = context.nodeType;\n\n    if ( !selector || typeof selector !== \"string\" ) {\n        return results;\n    }\n\n    if ( nodeType !== 1 && nodeType !== 9 ) {\n        return [];\n    }\n\n    xml = isXML( context );\n\n    if ( !xml && !seed ) {\n        if ( (match = rquickExpr.exec( selector )) ) {\n            // Speed-up: Sizzle(\"#ID\")\n            if ( (m = match[1]) ) {\n                if ( nodeType === 9 ) {\n                    elem = context.getElementById( m );\n                    // Check parentNode to catch when Blackberry 4.6 returns\n                    // nodes that are no longer in the document #6963\n                    if ( elem && elem.parentNode ) {\n                        // Handle the case where IE, Opera, and Webkit return items\n                        // by name instead of ID\n                        if ( elem.id === m ) {\n                            results.push( elem );\n                            return results;\n                        }\n                    } else {\n                        return results;\n                    }\n                } else {\n                    // Context is not a document\n                    if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n                        contains( context, elem ) && elem.id === m ) {\n                        results.push( elem );\n                        return results;\n                    }\n                }\n\n            // Speed-up: Sizzle(\"TAG\")\n            } else if ( match[2] ) {\n                push.apply( results, slice.call(context.getElementsByTagName( selector ), 0) );\n                return results;\n\n            // Speed-up: Sizzle(\".CLASS\")\n            } else if ( (m = match[3]) && assertUsableClassName && context.getElementsByClassName ) {\n                push.apply( results, slice.call(context.getElementsByClassName( m ), 0) );\n                return results;\n            }\n        }\n    }\n\n    // All others\n    return select( selector.replace( rtrim, \"$1\" ), context, results, seed, xml );\n}\n\nSizzle.matches = function( expr, elements ) {\n    return Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n    return Sizzle( expr, null, null, [ elem ] ).length > 0;\n};\n\n// Returns a function to use in pseudos for input types\nfunction createInputPseudo( type ) {\n    return function( elem ) {\n        var name = elem.nodeName.toLowerCase();\n        return name === \"input\" && elem.type === type;\n    };\n}\n\n// Returns a function to use in pseudos for buttons\nfunction createButtonPseudo( type ) {\n    return function( elem ) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === \"input\" || name === \"button\") && elem.type === type;\n    };\n}\n\n// Returns a function to use in pseudos for positionals\nfunction createPositionalPseudo( fn ) {\n    return markFunction(function( argument ) {\n        argument = +argument;\n        return markFunction(function( seed, matches ) {\n            var j,\n                matchIndexes = fn( [], seed.length, argument ),\n                i = matchIndexes.length;\n\n            // Match elements found at the specified indexes\n            while ( i-- ) {\n                if ( seed[ (j = matchIndexes[i]) ] ) {\n                    seed[j] = !(matches[j] = seed[j]);\n                }\n            }\n        });\n    });\n}\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n    var node,\n        ret = \"\",\n        i = 0,\n        nodeType = elem.nodeType;\n\n    if ( nodeType ) {\n        if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n            // Use textContent for elements\n            // innerText usage removed for consistency of new lines (see #11153)\n            if ( typeof elem.textContent === \"string\" ) {\n                return elem.textContent;\n            } else {\n                // Traverse its children\n                for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n                    ret += getText( elem );\n                }\n            }\n        } else if ( nodeType === 3 || nodeType === 4 ) {\n            return elem.nodeValue;\n        }\n        // Do not include comment or processing instruction nodes\n    } else {\n\n        // If no nodeType, this is expected to be an array\n        for ( ; (node = elem[i]); i++ ) {\n            // Do not traverse comment nodes\n            ret += getText( node );\n        }\n    }\n    return ret;\n};\n\nisXML = Sizzle.isXML = function( elem ) {\n    // documentElement is verified for cases where it doesn't yet exist\n    // (such as loading iframes in IE - #4833)\n    var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n    return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n// Element contains another\ncontains = Sizzle.contains = docElem.contains ?\n    function( a, b ) {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n        return a === bup || !!( bup && bup.nodeType === 1 && adown.contains && adown.contains(bup) );\n    } :\n    docElem.compareDocumentPosition ?\n    function( a, b ) {\n        return b && !!( a.compareDocumentPosition( b ) & 16 );\n    } :\n    function( a, b ) {\n        while ( (b = b.parentNode) ) {\n            if ( b === a ) {\n                return true;\n            }\n        }\n        return false;\n    };\n\nSizzle.attr = function( elem, name ) {\n    var val,\n        xml = isXML( elem );\n\n    if ( !xml ) {\n        name = name.toLowerCase();\n    }\n    if ( (val = Expr.attrHandle[ name ]) ) {\n        return val( elem );\n    }\n    if ( xml || assertAttributes ) {\n        return elem.getAttribute( name );\n    }\n    val = elem.getAttributeNode( name );\n    return val ?\n        typeof elem[ name ] === \"boolean\" ?\n            elem[ name ] ? name : null :\n            val.specified ? val.value : null :\n        null;\n};\n\nExpr = Sizzle.selectors = {\n\n    // Can be adjusted by the user\n    cacheLength: 50,\n\n    createPseudo: markFunction,\n\n    match: matchExpr,\n\n    // IE6/7 return a modified href\n    attrHandle: assertHrefNotNormalized ?\n        {} :\n        {\n            \"href\": function( elem ) {\n                return elem.getAttribute( \"href\", 2 );\n            },\n            \"type\": function( elem ) {\n                return elem.getAttribute(\"type\");\n            }\n        },\n\n    find: {\n        \"ID\": assertGetIdNotName ?\n            function( id, context, xml ) {\n                if ( typeof context.getElementById !== strundefined && !xml ) {\n                    var m = context.getElementById( id );\n                    // Check parentNode to catch when Blackberry 4.6 returns\n                    // nodes that are no longer in the document #6963\n                    return m && m.parentNode ? [m] : [];\n                }\n            } :\n            function( id, context, xml ) {\n                if ( typeof context.getElementById !== strundefined && !xml ) {\n                    var m = context.getElementById( id );\n\n                    return m ?\n                        m.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode(\"id\").value === id ?\n                            [m] :\n                            undefined :\n                        [];\n                }\n            },\n\n        \"TAG\": assertTagNameNoComments ?\n            function( tag, context ) {\n                if ( typeof context.getElementsByTagName !== strundefined ) {\n                    return context.getElementsByTagName( tag );\n                }\n            } :\n            function( tag, context ) {\n                var results = context.getElementsByTagName( tag );\n\n                // Filter out possible comments\n                if ( tag === \"*\" ) {\n                    var elem,\n                        tmp = [],\n                        i = 0;\n\n                    for ( ; (elem = results[i]); i++ ) {\n                        if ( elem.nodeType === 1 ) {\n                            tmp.push( elem );\n                        }\n                    }\n\n                    return tmp;\n                }\n                return results;\n            },\n\n        \"NAME\": assertUsableName && function( tag, context ) {\n            if ( typeof context.getElementsByName !== strundefined ) {\n                return context.getElementsByName( name );\n            }\n        },\n\n        \"CLASS\": assertUsableClassName && function( className, context, xml ) {\n            if ( typeof context.getElementsByClassName !== strundefined && !xml ) {\n                return context.getElementsByClassName( className );\n            }\n        }\n    },\n\n    relative: {\n        \">\": { dir: \"parentNode\", first: true },\n        \" \": { dir: \"parentNode\" },\n        \"+\": { dir: \"previousSibling\", first: true },\n        \"~\": { dir: \"previousSibling\" }\n    },\n\n    preFilter: {\n        \"ATTR\": function( match ) {\n            match[1] = match[1].replace( rbackslash, \"\" );\n\n            // Move the given value to match[3] whether quoted or unquoted\n            match[3] = ( match[4] || match[5] || \"\" ).replace( rbackslash, \"\" );\n\n            if ( match[2] === \"~=\" ) {\n                match[3] = \" \" + match[3] + \" \";\n            }\n\n            return match.slice( 0, 4 );\n        },\n\n        \"CHILD\": function( match ) {\n            /* matches from matchExpr[\"CHILD\"]\n                1 type (only|nth|...)\n                2 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n                3 xn-component of xn+y argument ([+-]?\\d*n|)\n                4 sign of xn-component\n                5 x of xn-component\n                6 sign of y-component\n                7 y of y-component\n            */\n            match[1] = match[1].toLowerCase();\n\n            if ( match[1] === \"nth\" ) {\n                // nth-child requires argument\n                if ( !match[2] ) {\n                    Sizzle.error( match[0] );\n                }\n\n                // numeric x and y parameters for Expr.filter.CHILD\n                // remember that false/true cast respectively to 0/1\n                match[3] = +( match[3] ? match[4] + (match[5] || 1) : 2 * ( match[2] === \"even\" || match[2] === \"odd\" ) );\n                match[4] = +( ( match[6] + match[7] ) || match[2] === \"odd\" );\n\n            // other types prohibit arguments\n            } else if ( match[2] ) {\n                Sizzle.error( match[0] );\n            }\n\n            return match;\n        },\n\n        \"PSEUDO\": function( match ) {\n            var unquoted, excess;\n            if ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n                return null;\n            }\n\n            if ( match[3] ) {\n                match[2] = match[3];\n            } else if ( (unquoted = match[4]) ) {\n                // Only check arguments that contain a pseudo\n                if ( rpseudo.test(unquoted) &&\n                    // Get excess from tokenize (recursively)\n                    (excess = tokenize( unquoted, true )) &&\n                    // advance to the next closing parenthesis\n                    (excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n                    // excess is a negative index\n                    unquoted = unquoted.slice( 0, excess );\n                    match[0] = match[0].slice( 0, excess );\n                }\n                match[2] = unquoted;\n            }\n\n            // Return only captures needed by the pseudo filter method (type and argument)\n            return match.slice( 0, 3 );\n        }\n    },\n\n    filter: {\n        \"ID\": assertGetIdNotName ?\n            function( id ) {\n                id = id.replace( rbackslash, \"\" );\n                return function( elem ) {\n                    return elem.getAttribute(\"id\") === id;\n                };\n            } :\n            function( id ) {\n                id = id.replace( rbackslash, \"\" );\n                return function( elem ) {\n                    var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\n                    return node && node.value === id;\n                };\n            },\n\n        \"TAG\": function( nodeName ) {\n            if ( nodeName === \"*\" ) {\n                return function() { return true; };\n            }\n            nodeName = nodeName.replace( rbackslash, \"\" ).toLowerCase();\n\n            return function( elem ) {\n                return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n            };\n        },\n\n        \"CLASS\": function( className ) {\n            var pattern = classCache[ expando ][ className ];\n            if ( !pattern ) {\n                pattern = classCache( className, new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\") );\n            }\n            return function( elem ) {\n                return pattern.test( elem.className || (typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\")) || \"\" );\n            };\n        },\n\n        \"ATTR\": function( name, operator, check ) {\n            return function( elem, context ) {\n                var result = Sizzle.attr( elem, name );\n\n                if ( result == null ) {\n                    return operator === \"!=\";\n                }\n                if ( !operator ) {\n                    return true;\n                }\n\n                result += \"\";\n\n                return operator === \"=\" ? result === check :\n                    operator === \"!=\" ? result !== check :\n                    operator === \"^=\" ? check && result.indexOf( check ) === 0 :\n                    operator === \"*=\" ? check && result.indexOf( check ) > -1 :\n                    operator === \"$=\" ? check && result.substr( result.length - check.length ) === check :\n                    operator === \"~=\" ? ( \" \" + result + \" \" ).indexOf( check ) > -1 :\n                    operator === \"|=\" ? result === check || result.substr( 0, check.length + 1 ) === check + \"-\" :\n                    false;\n            };\n        },\n\n        \"CHILD\": function( type, argument, first, last ) {\n\n            if ( type === \"nth\" ) {\n                return function( elem ) {\n                    var node, diff,\n                        parent = elem.parentNode;\n\n                    if ( first === 1 && last === 0 ) {\n                        return true;\n                    }\n\n                    if ( parent ) {\n                        diff = 0;\n                        for ( node = parent.firstChild; node; node = node.nextSibling ) {\n                            if ( node.nodeType === 1 ) {\n                                diff++;\n                                if ( elem === node ) {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    // Incorporate the offset (or cast to NaN), then check against cycle size\n                    diff -= last;\n                    return diff === first || ( diff % first === 0 && diff / first >= 0 );\n                };\n            }\n\n            return function( elem ) {\n                var node = elem;\n\n                switch ( type ) {\n                    case \"only\":\n                    case \"first\":\n                        while ( (node = node.previousSibling) ) {\n                            if ( node.nodeType === 1 ) {\n                                return false;\n                            }\n                        }\n\n                        if ( type === \"first\" ) {\n                            return true;\n                        }\n\n                        node = elem;\n\n                        /* falls through */\n                    case \"last\":\n                        while ( (node = node.nextSibling) ) {\n                            if ( node.nodeType === 1 ) {\n                                return false;\n                            }\n                        }\n\n                        return true;\n                }\n            };\n        },\n\n        \"PSEUDO\": function( pseudo, argument ) {\n            // pseudo-class names are case-insensitive\n            // http://www.w3.org/TR/selectors/#pseudo-classes\n            // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n            // Remember that setFilters inherits from pseudos\n            var args,\n                fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n                    Sizzle.error( \"unsupported pseudo: \" + pseudo );\n\n            // The user may use createPseudo to indicate that\n            // arguments are needed to create the filter function\n            // just as Sizzle does\n            if ( fn[ expando ] ) {\n                return fn( argument );\n            }\n\n            // But maintain support for old signatures\n            if ( fn.length > 1 ) {\n                args = [ pseudo, pseudo, \"\", argument ];\n                return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n                    markFunction(function( seed, matches ) {\n                        var idx,\n                            matched = fn( seed, argument ),\n                            i = matched.length;\n                        while ( i-- ) {\n                            idx = indexOf.call( seed, matched[i] );\n                            seed[ idx ] = !( matches[ idx ] = matched[i] );\n                        }\n                    }) :\n                    function( elem ) {\n                        return fn( elem, 0, args );\n                    };\n            }\n\n            return fn;\n        }\n    },\n\n    pseudos: {\n        \"not\": markFunction(function( selector ) {\n            // Trim the selector passed to compile\n            // to avoid treating leading and trailing\n            // spaces as combinators\n            var input = [],\n                results = [],\n                matcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n            return matcher[ expando ] ?\n                markFunction(function( seed, matches, context, xml ) {\n                    var elem,\n                        unmatched = matcher( seed, null, xml, [] ),\n                        i = seed.length;\n\n                    // Match elements unmatched by `matcher`\n                    while ( i-- ) {\n                        if ( (elem = unmatched[i]) ) {\n                            seed[i] = !(matches[i] = elem);\n                        }\n                    }\n                }) :\n                function( elem, context, xml ) {\n                    input[0] = elem;\n                    matcher( input, null, xml, results );\n                    return !results.pop();\n                };\n        }),\n\n        \"has\": markFunction(function( selector ) {\n            return function( elem ) {\n                return Sizzle( selector, elem ).length > 0;\n            };\n        }),\n\n        \"contains\": markFunction(function( text ) {\n            return function( elem ) {\n                return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n            };\n        }),\n\n        \"enabled\": function( elem ) {\n            return elem.disabled === false;\n        },\n\n        \"disabled\": function( elem ) {\n            return elem.disabled === true;\n        },\n\n        \"checked\": function( elem ) {\n            // In CSS3, :checked should return both checked and selected elements\n            // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n            var nodeName = elem.nodeName.toLowerCase();\n            return (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n        },\n\n        \"selected\": function( elem ) {\n            // Accessing this property makes selected-by-default\n            // options in Safari work properly\n            if ( elem.parentNode ) {\n                elem.parentNode.selectedIndex;\n            }\n\n            return elem.selected === true;\n        },\n\n        \"parent\": function( elem ) {\n            return !Expr.pseudos[\"empty\"]( elem );\n        },\n\n        \"empty\": function( elem ) {\n            // http://www.w3.org/TR/selectors/#empty-pseudo\n            // :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),\n            //   not comment, processing instructions, or others\n            // Thanks to Diego Perini for the nodeName shortcut\n            //   Greater than \"@\" means alpha characters (specifically not starting with \"#\" or \"?\")\n            var nodeType;\n            elem = elem.firstChild;\n            while ( elem ) {\n                if ( elem.nodeName > \"@\" || (nodeType = elem.nodeType) === 3 || nodeType === 4 ) {\n                    return false;\n                }\n                elem = elem.nextSibling;\n            }\n            return true;\n        },\n\n        \"header\": function( elem ) {\n            return rheader.test( elem.nodeName );\n        },\n\n        \"text\": function( elem ) {\n            var type, attr;\n            // IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)\n            // use getAttribute instead to test this case\n            return elem.nodeName.toLowerCase() === \"input\" &&\n                (type = elem.type) === \"text\" &&\n                ( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === type );\n        },\n\n        // Input types\n        \"radio\": createInputPseudo(\"radio\"),\n        \"checkbox\": createInputPseudo(\"checkbox\"),\n        \"file\": createInputPseudo(\"file\"),\n        \"password\": createInputPseudo(\"password\"),\n        \"image\": createInputPseudo(\"image\"),\n\n        \"submit\": createButtonPseudo(\"submit\"),\n        \"reset\": createButtonPseudo(\"reset\"),\n\n        \"button\": function( elem ) {\n            var name = elem.nodeName.toLowerCase();\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\n        },\n\n        \"input\": function( elem ) {\n            return rinputs.test( elem.nodeName );\n        },\n\n        \"focus\": function( elem ) {\n            var doc = elem.ownerDocument;\n            return elem === doc.activeElement && (!doc.hasFocus || doc.hasFocus()) && !!(elem.type || elem.href);\n        },\n\n        \"active\": function( elem ) {\n            return elem === elem.ownerDocument.activeElement;\n        },\n\n        // Positional types\n        \"first\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n            return [ 0 ];\n        }),\n\n        \"last\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n            return [ length - 1 ];\n        }),\n\n        \"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n            return [ argument < 0 ? argument + length : argument ];\n        }),\n\n        \"even\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n            for ( var i = 0; i < length; i += 2 ) {\n                matchIndexes.push( i );\n            }\n            return matchIndexes;\n        }),\n\n        \"odd\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n            for ( var i = 1; i < length; i += 2 ) {\n                matchIndexes.push( i );\n            }\n            return matchIndexes;\n        }),\n\n        \"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n            for ( var i = argument < 0 ? argument + length : argument; --i >= 0; ) {\n                matchIndexes.push( i );\n            }\n            return matchIndexes;\n        }),\n\n        \"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n            for ( var i = argument < 0 ? argument + length : argument; ++i < length; ) {\n                matchIndexes.push( i );\n            }\n            return matchIndexes;\n        })\n    }\n};\n\nfunction siblingCheck( a, b, ret ) {\n    if ( a === b ) {\n        return ret;\n    }\n\n    var cur = a.nextSibling;\n\n    while ( cur ) {\n        if ( cur === b ) {\n            return -1;\n        }\n\n        cur = cur.nextSibling;\n    }\n\n    return 1;\n}\n\nsortOrder = docElem.compareDocumentPosition ?\n    function( a, b ) {\n        if ( a === b ) {\n            hasDuplicate = true;\n            return 0;\n        }\n\n        return ( !a.compareDocumentPosition || !b.compareDocumentPosition ?\n            a.compareDocumentPosition :\n            a.compareDocumentPosition(b) & 4\n        ) ? -1 : 1;\n    } :\n    function( a, b ) {\n        // The nodes are identical, we can exit early\n        if ( a === b ) {\n            hasDuplicate = true;\n            return 0;\n\n        // Fallback to using sourceIndex (in IE) if it's available on both nodes\n        } else if ( a.sourceIndex && b.sourceIndex ) {\n            return a.sourceIndex - b.sourceIndex;\n        }\n\n        var al, bl,\n            ap = [],\n            bp = [],\n            aup = a.parentNode,\n            bup = b.parentNode,\n            cur = aup;\n\n        // If the nodes are siblings (or identical) we can do a quick check\n        if ( aup === bup ) {\n            return siblingCheck( a, b );\n\n        // If no parents were found then the nodes are disconnected\n        } else if ( !aup ) {\n            return -1;\n\n        } else if ( !bup ) {\n            return 1;\n        }\n\n        // Otherwise they're somewhere else in the tree so we need\n        // to build up a full list of the parentNodes for comparison\n        while ( cur ) {\n            ap.unshift( cur );\n            cur = cur.parentNode;\n        }\n\n        cur = bup;\n\n        while ( cur ) {\n            bp.unshift( cur );\n            cur = cur.parentNode;\n        }\n\n        al = ap.length;\n        bl = bp.length;\n\n        // Start walking down the tree looking for a discrepancy\n        for ( var i = 0; i < al && i < bl; i++ ) {\n            if ( ap[i] !== bp[i] ) {\n                return siblingCheck( ap[i], bp[i] );\n            }\n        }\n\n        // We ended someplace up the tree so do a sibling check\n        return i === al ?\n            siblingCheck( a, bp[i], -1 ) :\n            siblingCheck( ap[i], b, 1 );\n    };\n\n// Always assume the presence of duplicates if sort doesn't\n// pass them to our comparison function (as in Google Chrome).\n[0, 0].sort( sortOrder );\nbaseHasDuplicate = !hasDuplicate;\n\n// Document sorting and removing duplicates\nSizzle.uniqueSort = function( results ) {\n    var elem,\n        i = 1;\n\n    hasDuplicate = baseHasDuplicate;\n    results.sort( sortOrder );\n\n    if ( hasDuplicate ) {\n        for ( ; (elem = results[i]); i++ ) {\n            if ( elem === results[ i - 1 ] ) {\n                results.splice( i--, 1 );\n            }\n        }\n    }\n\n    return results;\n};\n\nSizzle.error = function( msg ) {\n    throw new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\nfunction tokenize( selector, parseOnly ) {\n    var matched, match, tokens, type, soFar, groups, preFilters,\n        cached = tokenCache[ expando ][ selector ];\n\n    if ( cached ) {\n        return parseOnly ? 0 : cached.slice( 0 );\n    }\n\n    soFar = selector;\n    groups = [];\n    preFilters = Expr.preFilter;\n\n    while ( soFar ) {\n\n        // Comma and first run\n        if ( !matched || (match = rcomma.exec( soFar )) ) {\n            if ( match ) {\n                soFar = soFar.slice( match[0].length );\n            }\n            groups.push( tokens = [] );\n        }\n\n        matched = false;\n\n        // Combinators\n        if ( (match = rcombinators.exec( soFar )) ) {\n            tokens.push( matched = new Token( match.shift() ) );\n            soFar = soFar.slice( matched.length );\n\n            // Cast descendant combinators to space\n            matched.type = match[0].replace( rtrim, \" \" );\n        }\n\n        // Filters\n        for ( type in Expr.filter ) {\n            if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n                // The last two arguments here are (context, xml) for backCompat\n                (match = preFilters[ type ]( match, document, true ))) ) {\n\n                tokens.push( matched = new Token( match.shift() ) );\n                soFar = soFar.slice( matched.length );\n                matched.type = type;\n                matched.matches = match;\n            }\n        }\n\n        if ( !matched ) {\n            break;\n        }\n    }\n\n    // Return the length of the invalid excess\n    // if we're just parsing\n    // Otherwise, throw an error or return tokens\n    return parseOnly ?\n        soFar.length :\n        soFar ?\n            Sizzle.error( selector ) :\n            // Cache the tokens\n            tokenCache( selector, groups ).slice( 0 );\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n    var dir = combinator.dir,\n        checkNonElements = base && combinator.dir === \"parentNode\",\n        doneName = done++;\n\n    return combinator.first ?\n        // Check against closest ancestor/preceding element\n        function( elem, context, xml ) {\n            while ( (elem = elem[ dir ]) ) {\n                if ( checkNonElements || elem.nodeType === 1  ) {\n                    return matcher( elem, context, xml );\n                }\n            }\n        } :\n\n        // Check against all ancestor/preceding elements\n        function( elem, context, xml ) {\n            // We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n            if ( !xml ) {\n                var cache,\n                    dirkey = dirruns + \" \" + doneName + \" \",\n                    cachedkey = dirkey + cachedruns;\n                while ( (elem = elem[ dir ]) ) {\n                    if ( checkNonElements || elem.nodeType === 1 ) {\n                        if ( (cache = elem[ expando ]) === cachedkey ) {\n                            return elem.sizset;\n                        } else if ( typeof cache === \"string\" && cache.indexOf(dirkey) === 0 ) {\n                            if ( elem.sizset ) {\n                                return elem;\n                            }\n                        } else {\n                            elem[ expando ] = cachedkey;\n                            if ( matcher( elem, context, xml ) ) {\n                                elem.sizset = true;\n                                return elem;\n                            }\n                            elem.sizset = false;\n                        }\n                    }\n                }\n            } else {\n                while ( (elem = elem[ dir ]) ) {\n                    if ( checkNonElements || elem.nodeType === 1 ) {\n                        if ( matcher( elem, context, xml ) ) {\n                            return elem;\n                        }\n                    }\n                }\n            }\n        };\n}\n\nfunction elementMatcher( matchers ) {\n    return matchers.length > 1 ?\n        function( elem, context, xml ) {\n            var i = matchers.length;\n            while ( i-- ) {\n                if ( !matchers[i]( elem, context, xml ) ) {\n                    return false;\n                }\n            }\n            return true;\n        } :\n        matchers[0];\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n    var elem,\n        newUnmatched = [],\n        i = 0,\n        len = unmatched.length,\n        mapped = map != null;\n\n    for ( ; i < len; i++ ) {\n        if ( (elem = unmatched[i]) ) {\n            if ( !filter || filter( elem, context, xml ) ) {\n                newUnmatched.push( elem );\n                if ( mapped ) {\n                    map.push( i );\n                }\n            }\n        }\n    }\n\n    return newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n    if ( postFilter && !postFilter[ expando ] ) {\n        postFilter = setMatcher( postFilter );\n    }\n    if ( postFinder && !postFinder[ expando ] ) {\n        postFinder = setMatcher( postFinder, postSelector );\n    }\n    return markFunction(function( seed, results, context, xml ) {\n        // Positional selectors apply to seed elements, so it is invalid to follow them with relative ones\n        if ( seed && postFinder ) {\n            return;\n        }\n\n        var i, elem, postFilterIn,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n\n            // Get initial elements from seed or context\n            elems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [], seed ),\n\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n            matcherIn = preFilter && ( seed || !selector ) ?\n                condense( elems, preMap, preFilter, context, xml ) :\n                elems,\n\n            matcherOut = matcher ?\n                // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n                postFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n                    // ...intermediate processing is necessary\n                    [] :\n\n                    // ...otherwise use results directly\n                    results :\n                matcherIn;\n\n        // Find primary matches\n        if ( matcher ) {\n            matcher( matcherIn, matcherOut, context, xml );\n        }\n\n        // Apply postFilter\n        if ( postFilter ) {\n            postFilterIn = condense( matcherOut, postMap );\n            postFilter( postFilterIn, [], context, xml );\n\n            // Un-match failing elements by moving them back to matcherIn\n            i = postFilterIn.length;\n            while ( i-- ) {\n                if ( (elem = postFilterIn[i]) ) {\n                    matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n                }\n            }\n        }\n\n        // Keep seed and results synchronized\n        if ( seed ) {\n            // Ignore postFinder because it can't coexist with seed\n            i = preFilter && matcherOut.length;\n            while ( i-- ) {\n                if ( (elem = matcherOut[i]) ) {\n                    seed[ preMap[i] ] = !(results[ preMap[i] ] = elem);\n                }\n            }\n        } else {\n            matcherOut = condense(\n                matcherOut === results ?\n                    matcherOut.splice( preexisting, matcherOut.length ) :\n                    matcherOut\n            );\n            if ( postFinder ) {\n                postFinder( null, results, matcherOut, xml );\n            } else {\n                push.apply( results, matcherOut );\n            }\n        }\n    });\n}\n\nfunction matcherFromTokens( tokens ) {\n    var checkContext, matcher, j,\n        len = tokens.length,\n        leadingRelative = Expr.relative[ tokens[0].type ],\n        implicitRelative = leadingRelative || Expr.relative[\" \"],\n        i = leadingRelative ? 1 : 0,\n\n        // The foundational matcher ensures that elements are reachable from top-level context(s)\n        matchContext = addCombinator( function( elem ) {\n            return elem === checkContext;\n        }, implicitRelative, true ),\n        matchAnyContext = addCombinator( function( elem ) {\n            return indexOf.call( checkContext, elem ) > -1;\n        }, implicitRelative, true ),\n        matchers = [ function( elem, context, xml ) {\n            return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n                (checkContext = context).nodeType ?\n                    matchContext( elem, context, xml ) :\n                    matchAnyContext( elem, context, xml ) );\n        } ];\n\n    for ( ; i < len; i++ ) {\n        if ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n            matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n        } else {\n            // The concatenated values are (context, xml) for backCompat\n            matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n            // Return special upon seeing a positional matcher\n            if ( matcher[ expando ] ) {\n                // Find the next relative operator (if any) for proper handling\n                j = ++i;\n                for ( ; j < len; j++ ) {\n                    if ( Expr.relative[ tokens[j].type ] ) {\n                        break;\n                    }\n                }\n                return setMatcher(\n                    i > 1 && elementMatcher( matchers ),\n                    i > 1 && tokens.slice( 0, i - 1 ).join(\"\").replace( rtrim, \"$1\" ),\n                    matcher,\n                    i < j && matcherFromTokens( tokens.slice( i, j ) ),\n                    j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n                    j < len && tokens.join(\"\")\n                );\n            }\n            matchers.push( matcher );\n        }\n    }\n\n    return elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n    var bySet = setMatchers.length > 0,\n        byElement = elementMatchers.length > 0,\n        superMatcher = function( seed, context, xml, results, expandContext ) {\n            var elem, j, matcher,\n                setMatched = [],\n                matchedCount = 0,\n                i = \"0\",\n                unmatched = seed && [],\n                outermost = expandContext != null,\n                contextBackup = outermostContext,\n                // We must always have either seed elements or context\n                elems = seed || byElement && Expr.find[\"TAG\"]( \"*\", expandContext && context.parentNode || context ),\n                // Nested matchers should use non-integer dirruns\n                dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.E);\n\n            if ( outermost ) {\n                outermostContext = context !== document && context;\n                cachedruns = superMatcher.el;\n            }\n\n            // Add elements passing elementMatchers directly to results\n            for ( ; (elem = elems[i]) != null; i++ ) {\n                if ( byElement && elem ) {\n                    for ( j = 0; (matcher = elementMatchers[j]); j++ ) {\n                        if ( matcher( elem, context, xml ) ) {\n                            results.push( elem );\n                            break;\n                        }\n                    }\n                    if ( outermost ) {\n                        dirruns = dirrunsUnique;\n                        cachedruns = ++superMatcher.el;\n                    }\n                }\n\n                // Track unmatched elements for set filters\n                if ( bySet ) {\n                    // They will have gone through all possible matchers\n                    if ( (elem = !matcher && elem) ) {\n                        matchedCount--;\n                    }\n\n                    // Lengthen the array for every element, matched or not\n                    if ( seed ) {\n                        unmatched.push( elem );\n                    }\n                }\n            }\n\n            // Apply set filters to unmatched elements\n            matchedCount += i;\n            if ( bySet && i !== matchedCount ) {\n                for ( j = 0; (matcher = setMatchers[j]); j++ ) {\n                    matcher( unmatched, setMatched, context, xml );\n                }\n\n                if ( seed ) {\n                    // Reintegrate element matches to eliminate the need for sorting\n                    if ( matchedCount > 0 ) {\n                        while ( i-- ) {\n                            if ( !(unmatched[i] || setMatched[i]) ) {\n                                setMatched[i] = pop.call( results );\n                            }\n                        }\n                    }\n\n                    // Discard index placeholder values to get only actual matches\n                    setMatched = condense( setMatched );\n                }\n\n                // Add matches to results\n                push.apply( results, setMatched );\n\n                // Seedless set matches succeeding multiple successful matchers stipulate sorting\n                if ( outermost && !seed && setMatched.length > 0 &&\n                    ( matchedCount + setMatchers.length ) > 1 ) {\n\n                    Sizzle.uniqueSort( results );\n                }\n            }\n\n            // Override manipulation of globals by nested matchers\n            if ( outermost ) {\n                dirruns = dirrunsUnique;\n                outermostContext = contextBackup;\n            }\n\n            return unmatched;\n        };\n\n    superMatcher.el = 0;\n    return bySet ?\n        markFunction( superMatcher ) :\n        superMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {\n    var i,\n        setMatchers = [],\n        elementMatchers = [],\n        cached = compilerCache[ expando ][ selector ];\n\n    if ( !cached ) {\n        // Generate a function of recursive functions that can be used to check each element\n        if ( !group ) {\n            group = tokenize( selector );\n        }\n        i = group.length;\n        while ( i-- ) {\n            cached = matcherFromTokens( group[i] );\n            if ( cached[ expando ] ) {\n                setMatchers.push( cached );\n            } else {\n                elementMatchers.push( cached );\n            }\n        }\n\n        // Cache the compiled function\n        cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n    }\n    return cached;\n};\n\nfunction multipleContexts( selector, contexts, results, seed ) {\n    var i = 0,\n        len = contexts.length;\n    for ( ; i < len; i++ ) {\n        Sizzle( selector, contexts[i], results, seed );\n    }\n    return results;\n}\n\nfunction select( selector, context, results, seed, xml ) {\n    var i, tokens, token, type, find,\n        match = tokenize( selector ),\n        j = match.length;\n\n    if ( !seed ) {\n        // Try to minimize operations if there is only one group\n        if ( match.length === 1 ) {\n\n            // Take a shortcut and set the context if the root selector is an ID\n            tokens = match[0] = match[0].slice( 0 );\n            if ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n                    context.nodeType === 9 && !xml &&\n                    Expr.relative[ tokens[1].type ] ) {\n\n                context = Expr.find[\"ID\"]( token.matches[0].replace( rbackslash, \"\" ), context, xml )[0];\n                if ( !context ) {\n                    return results;\n                }\n\n                selector = selector.slice( tokens.shift().length );\n            }\n\n            // Fetch a seed set for right-to-left matching\n            for ( i = matchExpr[\"POS\"].test( selector ) ? -1 : tokens.length - 1; i >= 0; i-- ) {\n                token = tokens[i];\n\n                // Abort if we hit a combinator\n                if ( Expr.relative[ (type = token.type) ] ) {\n                    break;\n                }\n                if ( (find = Expr.find[ type ]) ) {\n                    // Search, expanding context for leading sibling combinators\n                    if ( (seed = find(\n                        token.matches[0].replace( rbackslash, \"\" ),\n                        rsibling.test( tokens[0].type ) && context.parentNode || context,\n                        xml\n                    )) ) {\n\n                        // If seed is empty or no tokens remain, we can return early\n                        tokens.splice( i, 1 );\n                        selector = seed.length && tokens.join(\"\");\n                        if ( !selector ) {\n                            push.apply( results, slice.call( seed, 0 ) );\n                            return results;\n                        }\n\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    // Compile and execute a filtering function\n    // Provide `match` to avoid retokenization if we modified the selector above\n    compile( selector, match )(\n        seed,\n        context,\n        xml,\n        results,\n        rsibling.test( selector )\n    );\n    return results;\n}\n\nif ( document.querySelectorAll ) {\n    (function() {\n        var disconnectedMatch,\n            oldSelect = select,\n            rescape = /'|\\\\/g,\n            rattributeQuotes = /\\=[\\x20\\t\\r\\n\\f]*([^'\"\\]]*)[\\x20\\t\\r\\n\\f]*\\]/g,\n\n            // qSa(:focus) reports false when true (Chrome 21),\n            // A support test would require too much code (would include document ready)\n            rbuggyQSA = [\":focus\"],\n\n            // matchesSelector(:focus) reports false when true (Chrome 21),\n            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n            // A support test would require too much code (would include document ready)\n            // just skip matchesSelector for :active\n            rbuggyMatches = [ \":active\", \":focus\" ],\n            matches = docElem.matchesSelector ||\n                docElem.mozMatchesSelector ||\n                docElem.webkitMatchesSelector ||\n                docElem.oMatchesSelector ||\n                docElem.msMatchesSelector;\n\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function( div ) {\n            // Select is set to empty string on purpose\n            // This is to test IE's treatment of not explictly\n            // setting a boolean content attribute,\n            // since its presence should be enough\n            // http://bugs.jquery.com/ticket/12359\n            div.innerHTML = \"<select><option selected=''></option></select>\";\n\n            // IE8 - Some boolean attributes are not treated correctly\n            if ( !div.querySelectorAll(\"[selected]\").length ) {\n                rbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:checked|disabled|ismap|multiple|readonly|selected|value)\" );\n            }\n\n            // Webkit/Opera - :checked should return selected option elements\n            // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n            // IE8 throws error here (do not put tests after this one)\n            if ( !div.querySelectorAll(\":checked\").length ) {\n                rbuggyQSA.push(\":checked\");\n            }\n        });\n\n        assert(function( div ) {\n\n            // Opera 10-12/IE9 - ^= $= *= and empty values\n            // Should not select anything\n            div.innerHTML = \"<p test=''></p>\";\n            if ( div.querySelectorAll(\"[test^='']\").length ) {\n                rbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:\\\"\\\"|'')\" );\n            }\n\n            // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n            // IE8 throws error here (do not put tests after this one)\n            div.innerHTML = \"<input type='hidden'/>\";\n            if ( !div.querySelectorAll(\":enabled\").length ) {\n                rbuggyQSA.push(\":enabled\", \":disabled\");\n            }\n        });\n\n        // rbuggyQSA always contains :focus, so no need for a length check\n        rbuggyQSA = /* rbuggyQSA.length && */ new RegExp( rbuggyQSA.join(\"|\") );\n\n        select = function( selector, context, results, seed, xml ) {\n            // Only use querySelectorAll when not filtering,\n            // when this is not xml,\n            // and when no QSA bugs apply\n            if ( !seed && !xml && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n                var groups, i,\n                    old = true,\n                    nid = expando,\n                    newContext = context,\n                    newSelector = context.nodeType === 9 && selector;\n\n                // qSA works strangely on Element-rooted queries\n                // We can work around this by specifying an extra ID on the root\n                // and working up from there (Thanks to Andrew Dupont for the technique)\n                // IE 8 doesn't work on object elements\n                if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n                    groups = tokenize( selector );\n\n                    if ( (old = context.getAttribute(\"id\")) ) {\n                        nid = old.replace( rescape, \"\\\\$&\" );\n                    } else {\n                        context.setAttribute( \"id\", nid );\n                    }\n                    nid = \"[id='\" + nid + \"'] \";\n\n                    i = groups.length;\n                    while ( i-- ) {\n                        groups[i] = nid + groups[i].join(\"\");\n                    }\n                    newContext = rsibling.test( selector ) && context.parentNode || context;\n                    newSelector = groups.join(\",\");\n                }\n\n                if ( newSelector ) {\n                    try {\n                        push.apply( results, slice.call( newContext.querySelectorAll(\n                            newSelector\n                        ), 0 ) );\n                        return results;\n                    } catch(qsaError) {\n                    } finally {\n                        if ( !old ) {\n                            context.removeAttribute(\"id\");\n                        }\n                    }\n                }\n            }\n\n            return oldSelect( selector, context, results, seed, xml );\n        };\n\n        if ( matches ) {\n            assert(function( div ) {\n                // Check to see if it's possible to do matchesSelector\n                // on a disconnected node (IE 9)\n                disconnectedMatch = matches.call( div, \"div\" );\n\n                // This should fail with an exception\n                // Gecko does not error, returns false instead\n                try {\n                    matches.call( div, \"[test!='']:sizzle\" );\n                    rbuggyMatches.push( \"!=\", pseudos );\n                } catch ( e ) {}\n            });\n\n            // rbuggyMatches always contains :active and :focus, so no need for a length check\n            rbuggyMatches = /* rbuggyMatches.length && */ new RegExp( rbuggyMatches.join(\"|\") );\n\n            Sizzle.matchesSelector = function( elem, expr ) {\n                // Make sure that attribute selectors are quoted\n                expr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n                // rbuggyMatches always contains :active, so no need for an existence check\n                if ( !isXML( elem ) && !rbuggyMatches.test( expr ) && (!rbuggyQSA || !rbuggyQSA.test( expr )) ) {\n                    try {\n                        var ret = matches.call( elem, expr );\n\n                        // IE 9's matchesSelector returns false on disconnected nodes\n                        if ( ret || disconnectedMatch ||\n                                // As well, disconnected nodes are said to be in a document\n                                // fragment in IE 9\n                                elem.document && elem.document.nodeType !== 11 ) {\n                            return ret;\n                        }\n                    } catch(e) {}\n                }\n\n                return Sizzle( expr, null, null, [ elem ] ).length > 0;\n            };\n        }\n    })();\n}\n\n// Deprecated\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Back-compat\nfunction setFilters() {}\nExpr.filters = setFilters.prototype = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\n// Override sizzle attribute retrieval\nSizzle.attr = jQuery.attr;\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n})( window );\nvar runtil = /Until$/,\n    rparentsprev = /^(?:parents|prev(?:Until|All))/,\n    isSimple = /^.[^:#\\[\\.,]*$/,\n    rneedsContext = jQuery.expr.match.needsContext,\n    // methods guaranteed to produce a unique set when starting from a unique set\n    guaranteedUnique = {\n        children: true,\n        contents: true,\n        next: true,\n        prev: true\n    };\n\njQuery.fn.extend({\n    find: function( selector ) {\n        var i, l, length, n, r, ret,\n            self = this;\n\n        if ( typeof selector !== \"string\" ) {\n            return jQuery( selector ).filter(function() {\n                for ( i = 0, l = self.length; i < l; i++ ) {\n                    if ( jQuery.contains( self[ i ], this ) ) {\n                        return true;\n                    }\n                }\n            });\n        }\n\n        ret = this.pushStack( \"\", \"find\", selector );\n\n        for ( i = 0, l = this.length; i < l; i++ ) {\n            length = ret.length;\n            jQuery.find( selector, this[i], ret );\n\n            if ( i > 0 ) {\n                // Make sure that the results are unique\n                for ( n = length; n < ret.length; n++ ) {\n                    for ( r = 0; r < length; r++ ) {\n                        if ( ret[r] === ret[n] ) {\n                            ret.splice(n--, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return ret;\n    },\n\n    has: function( target ) {\n        var i,\n            targets = jQuery( target, this ),\n            len = targets.length;\n\n        return this.filter(function() {\n            for ( i = 0; i < len; i++ ) {\n                if ( jQuery.contains( this, targets[i] ) ) {\n                    return true;\n                }\n            }\n        });\n    },\n\n    not: function( selector ) {\n        return this.pushStack( winnow(this, selector, false), \"not\", selector);\n    },\n\n    filter: function( selector ) {\n        return this.pushStack( winnow(this, selector, true), \"filter\", selector );\n    },\n\n    is: function( selector ) {\n        return !!selector && (\n            typeof selector === \"string\" ?\n                // If this is a positional/relative selector, check membership in the returned set\n                // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n                rneedsContext.test( selector ) ?\n                    jQuery( selector, this.context ).index( this[0] ) >= 0 :\n                    jQuery.filter( selector, this ).length > 0 :\n                this.filter( selector ).length > 0 );\n    },\n\n    closest: function( selectors, context ) {\n        var cur,\n            i = 0,\n            l = this.length,\n            ret = [],\n            pos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n                jQuery( selectors, context || this.context ) :\n                0;\n\n        for ( ; i < l; i++ ) {\n            cur = this[i];\n\n            while ( cur && cur.ownerDocument && cur !== context && cur.nodeType !== 11 ) {\n                if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {\n                    ret.push( cur );\n                    break;\n                }\n                cur = cur.parentNode;\n            }\n        }\n\n        ret = ret.length > 1 ? jQuery.unique( ret ) : ret;\n\n        return this.pushStack( ret, \"closest\", selectors );\n    },\n\n    // Determine the position of an element within\n    // the matched set of elements\n    index: function( elem ) {\n\n        // No argument, return index in parent\n        if ( !elem ) {\n            return ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;\n        }\n\n        // index in selector\n        if ( typeof elem === \"string\" ) {\n            return jQuery.inArray( this[0], jQuery( elem ) );\n        }\n\n        // Locate the position of the desired element\n        return jQuery.inArray(\n            // If it receives a jQuery object, the first element is used\n            elem.jquery ? elem[0] : elem, this );\n    },\n\n    add: function( selector, context ) {\n        var set = typeof selector === \"string\" ?\n                jQuery( selector, context ) :\n                jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),\n            all = jQuery.merge( this.get(), set );\n\n        return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?\n            all :\n            jQuery.unique( all ) );\n    },\n\n    addBack: function( selector ) {\n        return this.add( selector == null ?\n            this.prevObject : this.prevObject.filter(selector)\n        );\n    }\n});\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n// A painfully simple check to see if an element is disconnected\n// from a document (should be improved, where feasible).\nfunction isDisconnected( node ) {\n    return !node || !node.parentNode || node.parentNode.nodeType === 11;\n}\n\nfunction sibling( cur, dir ) {\n    do {\n        cur = cur[ dir ];\n    } while ( cur && cur.nodeType !== 1 );\n\n    return cur;\n}\n\njQuery.each({\n    parent: function( elem ) {\n        var parent = elem.parentNode;\n        return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function( elem ) {\n        return jQuery.dir( elem, \"parentNode\" );\n    },\n    parentsUntil: function( elem, i, until ) {\n        return jQuery.dir( elem, \"parentNode\", until );\n    },\n    next: function( elem ) {\n        return sibling( elem, \"nextSibling\" );\n    },\n    prev: function( elem ) {\n        return sibling( elem, \"previousSibling\" );\n    },\n    nextAll: function( elem ) {\n        return jQuery.dir( elem, \"nextSibling\" );\n    },\n    prevAll: function( elem ) {\n        return jQuery.dir( elem, \"previousSibling\" );\n    },\n    nextUntil: function( elem, i, until ) {\n        return jQuery.dir( elem, \"nextSibling\", until );\n    },\n    prevUntil: function( elem, i, until ) {\n        return jQuery.dir( elem, \"previousSibling\", until );\n    },\n    siblings: function( elem ) {\n        return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n    },\n    children: function( elem ) {\n        return jQuery.sibling( elem.firstChild );\n    },\n    contents: function( elem ) {\n        return jQuery.nodeName( elem, \"iframe\" ) ?\n            elem.contentDocument || elem.contentWindow.document :\n            jQuery.merge( [], elem.childNodes );\n    }\n}, function( name, fn ) {\n    jQuery.fn[ name ] = function( until, selector ) {\n        var ret = jQuery.map( this, fn, until );\n\n        if ( !runtil.test( name ) ) {\n            selector = until;\n        }\n\n        if ( selector && typeof selector === \"string\" ) {\n            ret = jQuery.filter( selector, ret );\n        }\n\n        ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;\n\n        if ( this.length > 1 && rparentsprev.test( name ) ) {\n            ret = ret.reverse();\n        }\n\n        return this.pushStack( ret, name, core_slice.call( arguments ).join(\",\") );\n    };\n});\n\njQuery.extend({\n    filter: function( expr, elems, not ) {\n        if ( not ) {\n            expr = \":not(\" + expr + \")\";\n        }\n\n        return elems.length === 1 ?\n            jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :\n            jQuery.find.matches(expr, elems);\n    },\n\n    dir: function( elem, dir, until ) {\n        var matched = [],\n            cur = elem[ dir ];\n\n        while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {\n            if ( cur.nodeType === 1 ) {\n                matched.push( cur );\n            }\n            cur = cur[dir];\n        }\n        return matched;\n    },\n\n    sibling: function( n, elem ) {\n        var r = [];\n\n        for ( ; n; n = n.nextSibling ) {\n            if ( n.nodeType === 1 && n !== elem ) {\n                r.push( n );\n            }\n        }\n\n        return r;\n    }\n});\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, keep ) {\n\n    // Can't pass null or undefined to indexOf in Firefox 4\n    // Set to 0 to skip string check\n    qualifier = qualifier || 0;\n\n    if ( jQuery.isFunction( qualifier ) ) {\n        return jQuery.grep(elements, function( elem, i ) {\n            var retVal = !!qualifier.call( elem, i, elem );\n            return retVal === keep;\n        });\n\n    } else if ( qualifier.nodeType ) {\n        return jQuery.grep(elements, function( elem, i ) {\n            return ( elem === qualifier ) === keep;\n        });\n\n    } else if ( typeof qualifier === \"string\" ) {\n        var filtered = jQuery.grep(elements, function( elem ) {\n            return elem.nodeType === 1;\n        });\n\n        if ( isSimple.test( qualifier ) ) {\n            return jQuery.filter(qualifier, filtered, !keep);\n        } else {\n            qualifier = jQuery.filter( qualifier, filtered );\n        }\n    }\n\n    return jQuery.grep(elements, function( elem, i ) {\n        return ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;\n    });\n}\nfunction createSafeFragment( document ) {\n    var list = nodeNames.split( \"|\" ),\n    safeFrag = document.createDocumentFragment();\n\n    if ( safeFrag.createElement ) {\n        while ( list.length ) {\n            safeFrag.createElement(\n                list.pop()\n            );\n        }\n    }\n    return safeFrag;\n}\n\nvar nodeNames = \"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|\" +\n        \"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",\n    rinlinejQuery = / jQuery\\d+=\"(?:null|\\d+)\"/g,\n    rleadingWhitespace = /^\\s+/,\n    rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n    rtagName = /<([\\w:]+)/,\n    rtbody = /<tbody/i,\n    rhtml = /<|&#?\\w+;/,\n    rnoInnerhtml = /<(?:script|style|link)/i,\n    rnocache = /<(?:script|object|embed|option|style)/i,\n    rnoshimcache = new RegExp(\"<(?:\" + nodeNames + \")[\\\\s/>]\", \"i\"),\n    rcheckableType = /^(?:checkbox|radio)$/,\n    // checked=\"checked\" or checked\n    rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n    rscriptType = /\\/(java|ecma)script/i,\n    rcleanScript = /^\\s*<!(?:\\[CDATA\\[|\\-\\-)|[\\]\\-]{2}>\\s*$/g,\n    wrapMap = {\n        option: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n        legend: [ 1, \"<fieldset>\", \"</fieldset>\" ],\n        thead: [ 1, \"<table>\", \"</table>\" ],\n        tr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n        td: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n        col: [ 2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\" ],\n        area: [ 1, \"<map>\", \"</map>\" ],\n        _default: [ 0, \"\", \"\" ]\n    },\n    safeFragment = createSafeFragment( document ),\n    fragmentDiv = safeFragment.appendChild( document.createElement(\"div\") );\n\nwrapMap.optgroup = wrapMap.option;\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,\n// unless wrapped in a div with non-breaking characters in front of it.\nif ( !jQuery.support.htmlSerialize ) {\n    wrapMap._default = [ 1, \"X<div>\", \"</div>\" ];\n}\n\njQuery.fn.extend({\n    text: function( value ) {\n        return jQuery.access( this, function( value ) {\n            return value === undefined ?\n                jQuery.text( this ) :\n                this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );\n        }, null, value, arguments.length );\n    },\n\n    wrapAll: function( html ) {\n        if ( jQuery.isFunction( html ) ) {\n            return this.each(function(i) {\n                jQuery(this).wrapAll( html.call(this, i) );\n            });\n        }\n\n        if ( this[0] ) {\n            // The elements to wrap the target around\n            var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);\n\n            if ( this[0].parentNode ) {\n                wrap.insertBefore( this[0] );\n            }\n\n            wrap.map(function() {\n                var elem = this;\n\n                while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {\n                    elem = elem.firstChild;\n                }\n\n                return elem;\n            }).append( this );\n        }\n\n        return this;\n    },\n\n    wrapInner: function( html ) {\n        if ( jQuery.isFunction( html ) ) {\n            return this.each(function(i) {\n                jQuery(this).wrapInner( html.call(this, i) );\n            });\n        }\n\n        return this.each(function() {\n            var self = jQuery( this ),\n                contents = self.contents();\n\n            if ( contents.length ) {\n                contents.wrapAll( html );\n\n            } else {\n                self.append( html );\n            }\n        });\n    },\n\n    wrap: function( html ) {\n        var isFunction = jQuery.isFunction( html );\n\n        return this.each(function(i) {\n            jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n        });\n    },\n\n    unwrap: function() {\n        return this.parent().each(function() {\n            if ( !jQuery.nodeName( this, \"body\" ) ) {\n                jQuery( this ).replaceWith( this.childNodes );\n            }\n        }).end();\n    },\n\n    append: function() {\n        return this.domManip(arguments, true, function( elem ) {\n            if ( this.nodeType === 1 || this.nodeType === 11 ) {\n                this.appendChild( elem );\n            }\n        });\n    },\n\n    prepend: function() {\n        return this.domManip(arguments, true, function( elem ) {\n            if ( this.nodeType === 1 || this.nodeType === 11 ) {\n                this.insertBefore( elem, this.firstChild );\n            }\n        });\n    },\n\n    before: function() {\n        if ( !isDisconnected( this[0] ) ) {\n            return this.domManip(arguments, false, function( elem ) {\n                this.parentNode.insertBefore( elem, this );\n            });\n        }\n\n        if ( arguments.length ) {\n            var set = jQuery.clean( arguments );\n            return this.pushStack( jQuery.merge( set, this ), \"before\", this.selector );\n        }\n    },\n\n    after: function() {\n        if ( !isDisconnected( this[0] ) ) {\n            return this.domManip(arguments, false, function( elem ) {\n                this.parentNode.insertBefore( elem, this.nextSibling );\n            });\n        }\n\n        if ( arguments.length ) {\n            var set = jQuery.clean( arguments );\n            return this.pushStack( jQuery.merge( this, set ), \"after\", this.selector );\n        }\n    },\n\n    // keepData is for internal use only--do not document\n    remove: function( selector, keepData ) {\n        var elem,\n            i = 0;\n\n        for ( ; (elem = this[i]) != null; i++ ) {\n            if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {\n                if ( !keepData && elem.nodeType === 1 ) {\n                    jQuery.cleanData( elem.getElementsByTagName(\"*\") );\n                    jQuery.cleanData( [ elem ] );\n                }\n\n                if ( elem.parentNode ) {\n                    elem.parentNode.removeChild( elem );\n                }\n            }\n        }\n\n        return this;\n    },\n\n    empty: function() {\n        var elem,\n            i = 0;\n\n        for ( ; (elem = this[i]) != null; i++ ) {\n            // Remove element nodes and prevent memory leaks\n            if ( elem.nodeType === 1 ) {\n                jQuery.cleanData( elem.getElementsByTagName(\"*\") );\n            }\n\n            // Remove any remaining nodes\n            while ( elem.firstChild ) {\n                elem.removeChild( elem.firstChild );\n            }\n        }\n\n        return this;\n    },\n\n    clone: function( dataAndEvents, deepDataAndEvents ) {\n        dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n        deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n        return this.map( function () {\n            return jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n        });\n    },\n\n    html: function( value ) {\n        return jQuery.access( this, function( value ) {\n            var elem = this[0] || {},\n                i = 0,\n                l = this.length;\n\n            if ( value === undefined ) {\n                return elem.nodeType === 1 ?\n                    elem.innerHTML.replace( rinlinejQuery, \"\" ) :\n                    undefined;\n            }\n\n            // See if we can take a shortcut and just use innerHTML\n            if ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n                ( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&\n                ( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&\n                !wrapMap[ ( rtagName.exec( value ) || [\"\", \"\"] )[1].toLowerCase() ] ) {\n\n                value = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n                try {\n                    for (; i < l; i++ ) {\n                        // Remove element nodes and prevent memory leaks\n                        elem = this[i] || {};\n                        if ( elem.nodeType === 1 ) {\n                            jQuery.cleanData( elem.getElementsByTagName( \"*\" ) );\n                            elem.innerHTML = value;\n                        }\n                    }\n\n                    elem = 0;\n\n                // If using innerHTML throws an exception, use the fallback method\n                } catch(e) {}\n            }\n\n            if ( elem ) {\n                this.empty().append( value );\n            }\n        }, null, value, arguments.length );\n    },\n\n    replaceWith: function( value ) {\n        if ( !isDisconnected( this[0] ) ) {\n            // Make sure that the elements are removed from the DOM before they are inserted\n            // this can help fix replacing a parent with child elements\n            if ( jQuery.isFunction( value ) ) {\n                return this.each(function(i) {\n                    var self = jQuery(this), old = self.html();\n                    self.replaceWith( value.call( this, i, old ) );\n                });\n            }\n\n            if ( typeof value !== \"string\" ) {\n                value = jQuery( value ).detach();\n            }\n\n            return this.each(function() {\n                var next = this.nextSibling,\n                    parent = this.parentNode;\n\n                jQuery( this ).remove();\n\n                if ( next ) {\n                    jQuery(next).before( value );\n                } else {\n                    jQuery(parent).append( value );\n                }\n            });\n        }\n\n        return this.length ?\n            this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), \"replaceWith\", value ) :\n            this;\n    },\n\n    detach: function( selector ) {\n        return this.remove( selector, true );\n    },\n\n    domManip: function( args, table, callback ) {\n\n        // Flatten any nested arrays\n        args = [].concat.apply( [], args );\n\n        var results, first, fragment, iNoClone,\n            i = 0,\n            value = args[0],\n            scripts = [],\n            l = this.length;\n\n        // We can't cloneNode fragments that contain checked, in WebKit\n        if ( !jQuery.support.checkClone && l > 1 && typeof value === \"string\" && rchecked.test( value ) ) {\n            return this.each(function() {\n                jQuery(this).domManip( args, table, callback );\n            });\n        }\n\n        if ( jQuery.isFunction(value) ) {\n            return this.each(function(i) {\n                var self = jQuery(this);\n                args[0] = value.call( this, i, table ? self.html() : undefined );\n                self.domManip( args, table, callback );\n            });\n        }\n\n        if ( this[0] ) {\n            results = jQuery.buildFragment( args, this, scripts );\n            fragment = results.fragment;\n            first = fragment.firstChild;\n\n            if ( fragment.childNodes.length === 1 ) {\n                fragment = first;\n            }\n\n            if ( first ) {\n                table = table && jQuery.nodeName( first, \"tr\" );\n\n                // Use the original fragment for the last item instead of the first because it can end up\n                // being emptied incorrectly in certain situations (#8070).\n                // Fragments from the fragment cache must always be cloned and never used in place.\n                for ( iNoClone = results.cacheable || l - 1; i < l; i++ ) {\n                    callback.call(\n                        table && jQuery.nodeName( this[i], \"table\" ) ?\n                            findOrAppend( this[i], \"tbody\" ) :\n                            this[i],\n                        i === iNoClone ?\n                            fragment :\n                            jQuery.clone( fragment, true, true )\n                    );\n                }\n            }\n\n            // Fix #11809: Avoid leaking memory\n            fragment = first = null;\n\n            if ( scripts.length ) {\n                jQuery.each( scripts, function( i, elem ) {\n                    if ( elem.src ) {\n                        if ( jQuery.ajax ) {\n                            jQuery.ajax({\n                                url: elem.src,\n                                type: \"GET\",\n                                dataType: \"script\",\n                                async: false,\n                                global: false,\n                                \"throws\": true\n                            });\n                        } else {\n                            jQuery.error(\"no ajax\");\n                        }\n                    } else {\n                        jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || \"\" ).replace( rcleanScript, \"\" ) );\n                    }\n\n                    if ( elem.parentNode ) {\n                        elem.parentNode.removeChild( elem );\n                    }\n                });\n            }\n        }\n\n        return this;\n    }\n});\n\nfunction findOrAppend( elem, tag ) {\n    return elem.getElementsByTagName( tag )[0] || elem.appendChild( elem.ownerDocument.createElement( tag ) );\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\n    if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {\n        return;\n    }\n\n    var type, i, l,\n        oldData = jQuery._data( src ),\n        curData = jQuery._data( dest, oldData ),\n        events = oldData.events;\n\n    if ( events ) {\n        delete curData.handle;\n        curData.events = {};\n\n        for ( type in events ) {\n            for ( i = 0, l = events[ type ].length; i < l; i++ ) {\n                jQuery.event.add( dest, type, events[ type ][ i ] );\n            }\n        }\n    }\n\n    // make the cloned public data object a copy from the original\n    if ( curData.data ) {\n        curData.data = jQuery.extend( {}, curData.data );\n    }\n}\n\nfunction cloneFixAttributes( src, dest ) {\n    var nodeName;\n\n    // We do not need to do anything for non-Elements\n    if ( dest.nodeType !== 1 ) {\n        return;\n    }\n\n    // clearAttributes removes the attributes, which we don't want,\n    // but also removes the attachEvent events, which we *do* want\n    if ( dest.clearAttributes ) {\n        dest.clearAttributes();\n    }\n\n    // mergeAttributes, in contrast, only merges back on the\n    // original attributes, not the events\n    if ( dest.mergeAttributes ) {\n        dest.mergeAttributes( src );\n    }\n\n    nodeName = dest.nodeName.toLowerCase();\n\n    if ( nodeName === \"object\" ) {\n        // IE6-10 improperly clones children of object elements using classid.\n        // IE10 throws NoModificationAllowedError if parent is null, #12132.\n        if ( dest.parentNode ) {\n            dest.outerHTML = src.outerHTML;\n        }\n\n        // This path appears unavoidable for IE9. When cloning an object\n        // element in IE9, the outerHTML strategy above is not sufficient.\n        // If the src has innerHTML and the destination does not,\n        // copy the src.innerHTML into the dest.innerHTML. #10324\n        if ( jQuery.support.html5Clone && (src.innerHTML && !jQuery.trim(dest.innerHTML)) ) {\n            dest.innerHTML = src.innerHTML;\n        }\n\n    } else if ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n        // IE6-8 fails to persist the checked state of a cloned checkbox\n        // or radio button. Worse, IE6-7 fail to give the cloned element\n        // a checked appearance if the defaultChecked value isn't also set\n\n        dest.defaultChecked = dest.checked = src.checked;\n\n        // IE6-7 get confused and end up setting the value of a cloned\n        // checkbox/radio button to an empty string instead of \"on\"\n        if ( dest.value !== src.value ) {\n            dest.value = src.value;\n        }\n\n    // IE6-8 fails to return the selected option to the default selected\n    // state when cloning options\n    } else if ( nodeName === \"option\" ) {\n        dest.selected = src.defaultSelected;\n\n    // IE6-8 fails to set the defaultValue to the correct value when\n    // cloning other types of input fields\n    } else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n        dest.defaultValue = src.defaultValue;\n\n    // IE blanks contents when cloning scripts\n    } else if ( nodeName === \"script\" && dest.text !== src.text ) {\n        dest.text = src.text;\n    }\n\n    // Event data gets referenced instead of copied if the expando\n    // gets copied too\n    dest.removeAttribute( jQuery.expando );\n}\n\njQuery.buildFragment = function( args, context, scripts ) {\n    var fragment, cacheable, cachehit,\n        first = args[ 0 ];\n\n    // Set context from what may come in as undefined or a jQuery collection or a node\n    // Updated to fix #12266 where accessing context[0] could throw an exception in IE9/10 &\n    // also doubles as fix for #8950 where plain objects caused createDocumentFragment exception\n    context = context || document;\n    context = !context.nodeType && context[0] || context;\n    context = context.ownerDocument || context;\n\n    // Only cache \"small\" (1/2 KB) HTML strings that are associated with the main document\n    // Cloning options loses the selected state, so don't cache them\n    // IE 6 doesn't like it when you put <object> or <embed> elements in a fragment\n    // Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache\n    // Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501\n    if ( args.length === 1 && typeof first === \"string\" && first.length < 512 && context === document &&\n        first.charAt(0) === \"<\" && !rnocache.test( first ) &&\n        (jQuery.support.checkClone || !rchecked.test( first )) &&\n        (jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {\n\n        // Mark cacheable and look for a hit\n        cacheable = true;\n        fragment = jQuery.fragments[ first ];\n        cachehit = fragment !== undefined;\n    }\n\n    if ( !fragment ) {\n        fragment = context.createDocumentFragment();\n        jQuery.clean( args, context, fragment, scripts );\n\n        // Update the cache, but only store false\n        // unless this is a second parsing of the same content\n        if ( cacheable ) {\n            jQuery.fragments[ first ] = cachehit && fragment;\n        }\n    }\n\n    return { fragment: fragment, cacheable: cacheable };\n};\n\njQuery.fragments = {};\n\njQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n}, function( name, original ) {\n    jQuery.fn[ name ] = function( selector ) {\n        var elems,\n            i = 0,\n            ret = [],\n            insert = jQuery( selector ),\n            l = insert.length,\n            parent = this.length === 1 && this[0].parentNode;\n\n        if ( (parent == null || parent && parent.nodeType === 11 && parent.childNodes.length === 1) && l === 1 ) {\n            insert[ original ]( this[0] );\n            return this;\n        } else {\n            for ( ; i < l; i++ ) {\n                elems = ( i > 0 ? this.clone(true) : this ).get();\n                jQuery( insert[i] )[ original ]( elems );\n                ret = ret.concat( elems );\n            }\n\n            return this.pushStack( ret, name, insert.selector );\n        }\n    };\n});\n\nfunction getAll( elem ) {\n    if ( typeof elem.getElementsByTagName !== \"undefined\" ) {\n        return elem.getElementsByTagName( \"*\" );\n\n    } else if ( typeof elem.querySelectorAll !== \"undefined\" ) {\n        return elem.querySelectorAll( \"*\" );\n\n    } else {\n        return [];\n    }\n}\n\n// Used in clean, fixes the defaultChecked property\nfunction fixDefaultChecked( elem ) {\n    if ( rcheckableType.test( elem.type ) ) {\n        elem.defaultChecked = elem.checked;\n    }\n}\n\njQuery.extend({\n    clone: function( elem, dataAndEvents, deepDataAndEvents ) {\n        var srcElements,\n            destElements,\n            i,\n            clone;\n\n        if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( \"<\" + elem.nodeName + \">\" ) ) {\n            clone = elem.cloneNode( true );\n\n        // IE<=8 does not properly clone detached, unknown element nodes\n        } else {\n            fragmentDiv.innerHTML = elem.outerHTML;\n            fragmentDiv.removeChild( clone = fragmentDiv.firstChild );\n        }\n\n        if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&\n                (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {\n            // IE copies events bound via attachEvent when using cloneNode.\n            // Calling detachEvent on the clone will also remove the events\n            // from the original. In order to get around this, we use some\n            // proprietary methods to clear the events. Thanks to MooTools\n            // guys for this hotness.\n\n            cloneFixAttributes( elem, clone );\n\n            // Using Sizzle here is crazy slow, so we use getElementsByTagName instead\n            srcElements = getAll( elem );\n            destElements = getAll( clone );\n\n            // Weird iteration because IE will replace the length property\n            // with an element if you are cloning the body and one of the\n            // elements on the page has a name or id of \"length\"\n            for ( i = 0; srcElements[i]; ++i ) {\n                // Ensure that the destination node is not null; Fixes #9587\n                if ( destElements[i] ) {\n                    cloneFixAttributes( srcElements[i], destElements[i] );\n                }\n            }\n        }\n\n        // Copy the events from the original to the clone\n        if ( dataAndEvents ) {\n            cloneCopyEvent( elem, clone );\n\n            if ( deepDataAndEvents ) {\n                srcElements = getAll( elem );\n                destElements = getAll( clone );\n\n                for ( i = 0; srcElements[i]; ++i ) {\n                    cloneCopyEvent( srcElements[i], destElements[i] );\n                }\n            }\n        }\n\n        srcElements = destElements = null;\n\n        // Return the cloned set\n        return clone;\n    },\n\n    clean: function( elems, context, fragment, scripts ) {\n        var i, j, elem, tag, wrap, depth, div, hasBody, tbody, len, handleScript, jsTags,\n            safe = context === document && safeFragment,\n            ret = [];\n\n        // Ensure that context is a document\n        if ( !context || typeof context.createDocumentFragment === \"undefined\" ) {\n            context = document;\n        }\n\n        // Use the already-created safe fragment if context permits\n        for ( i = 0; (elem = elems[i]) != null; i++ ) {\n            if ( typeof elem === \"number\" ) {\n                elem += \"\";\n            }\n\n            if ( !elem ) {\n                continue;\n            }\n\n            // Convert html string into DOM nodes\n            if ( typeof elem === \"string\" ) {\n                if ( !rhtml.test( elem ) ) {\n                    elem = context.createTextNode( elem );\n                } else {\n                    // Ensure a safe container in which to render the html\n                    safe = safe || createSafeFragment( context );\n                    div = context.createElement(\"div\");\n                    safe.appendChild( div );\n\n                    // Fix \"XHTML\"-style tags in all browsers\n                    elem = elem.replace(rxhtmlTag, \"<$1></$2>\");\n\n                    // Go to html and back, then peel off extra wrappers\n                    tag = ( rtagName.exec( elem ) || [\"\", \"\"] )[1].toLowerCase();\n                    wrap = wrapMap[ tag ] || wrapMap._default;\n                    depth = wrap[0];\n                    div.innerHTML = wrap[1] + elem + wrap[2];\n\n                    // Move to the right depth\n                    while ( depth-- ) {\n                        div = div.lastChild;\n                    }\n\n                    // Remove IE's autoinserted <tbody> from table fragments\n                    if ( !jQuery.support.tbody ) {\n\n                        // String was a <table>, *may* have spurious <tbody>\n                        hasBody = rtbody.test(elem);\n                            tbody = tag === \"table\" && !hasBody ?\n                                div.firstChild && div.firstChild.childNodes :\n\n                                // String was a bare <thead> or <tfoot>\n                                wrap[1] === \"<table>\" && !hasBody ?\n                                    div.childNodes :\n                                    [];\n\n                        for ( j = tbody.length - 1; j >= 0 ; --j ) {\n                            if ( jQuery.nodeName( tbody[ j ], \"tbody\" ) && !tbody[ j ].childNodes.length ) {\n                                tbody[ j ].parentNode.removeChild( tbody[ j ] );\n                            }\n                        }\n                    }\n\n                    // IE completely kills leading whitespace when innerHTML is used\n                    if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {\n                        div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );\n                    }\n\n                    elem = div.childNodes;\n\n                    // Take out of fragment container (we need a fresh div each time)\n                    div.parentNode.removeChild( div );\n                }\n            }\n\n            if ( elem.nodeType ) {\n                ret.push( elem );\n            } else {\n                jQuery.merge( ret, elem );\n            }\n        }\n\n        // Fix #11356: Clear elements from safeFragment\n        if ( div ) {\n            elem = div = safe = null;\n        }\n\n        // Reset defaultChecked for any radios and checkboxes\n        // about to be appended to the DOM in IE 6/7 (#8060)\n        if ( !jQuery.support.appendChecked ) {\n            for ( i = 0; (elem = ret[i]) != null; i++ ) {\n                if ( jQuery.nodeName( elem, \"input\" ) ) {\n                    fixDefaultChecked( elem );\n                } else if ( typeof elem.getElementsByTagName !== \"undefined\" ) {\n                    jQuery.grep( elem.getElementsByTagName(\"input\"), fixDefaultChecked );\n                }\n            }\n        }\n\n        // Append elements to a provided document fragment\n        if ( fragment ) {\n            // Special handling of each script element\n            handleScript = function( elem ) {\n                // Check if we consider it executable\n                if ( !elem.type || rscriptType.test( elem.type ) ) {\n                    // Detach the script and store it in the scripts array (if provided) or the fragment\n                    // Return truthy to indicate that it has been handled\n                    return scripts ?\n                        scripts.push( elem.parentNode ? elem.parentNode.removeChild( elem ) : elem ) :\n                        fragment.appendChild( elem );\n                }\n            };\n\n            for ( i = 0; (elem = ret[i]) != null; i++ ) {\n                // Check if we're done after handling an executable script\n                if ( !( jQuery.nodeName( elem, \"script\" ) && handleScript( elem ) ) ) {\n                    // Append to fragment and handle embedded scripts\n                    fragment.appendChild( elem );\n                    if ( typeof elem.getElementsByTagName !== \"undefined\" ) {\n                        // handleScript alters the DOM, so use jQuery.merge to ensure snapshot iteration\n                        jsTags = jQuery.grep( jQuery.merge( [], elem.getElementsByTagName(\"script\") ), handleScript );\n\n                        // Splice the scripts into ret after their former ancestor and advance our index beyond them\n                        ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );\n                        i += jsTags.length;\n                    }\n                }\n            }\n        }\n\n        return ret;\n    },\n\n    cleanData: function( elems, /* internal */ acceptData ) {\n        var data, id, elem, type,\n            i = 0,\n            internalKey = jQuery.expando,\n            cache = jQuery.cache,\n            deleteExpando = jQuery.support.deleteExpando,\n            special = jQuery.event.special;\n\n        for ( ; (elem = elems[i]) != null; i++ ) {\n\n            if ( acceptData || jQuery.acceptData( elem ) ) {\n\n                id = elem[ internalKey ];\n                data = id && cache[ id ];\n\n                if ( data ) {\n                    if ( data.events ) {\n                        for ( type in data.events ) {\n                            if ( special[ type ] ) {\n                                jQuery.event.remove( elem, type );\n\n                            // This is a shortcut to avoid jQuery.event.remove's overhead\n                            } else {\n                                jQuery.removeEvent( elem, type, data.handle );\n                            }\n                        }\n                    }\n\n                    // Remove cache only if it was not already removed by jQuery.event.remove\n                    if ( cache[ id ] ) {\n\n                        delete cache[ id ];\n\n                        // IE does not allow us to delete expando properties from nodes,\n                        // nor does it have a removeAttribute function on Document nodes;\n                        // we must handle all of these cases\n                        if ( deleteExpando ) {\n                            delete elem[ internalKey ];\n\n                        } else if ( elem.removeAttribute ) {\n                            elem.removeAttribute( internalKey );\n\n                        } else {\n                            elem[ internalKey ] = null;\n                        }\n\n                        jQuery.deletedIds.push( id );\n                    }\n                }\n            }\n        }\n    }\n});\n// Limit scope pollution from any deprecated API\n(function() {\n\nvar matched, browser;\n\n// Use of jQuery.browser is frowned upon.\n// More details: http://api.jquery.com/jQuery.browser\n// jQuery.uaMatch maintained for back-compat\njQuery.uaMatch = function( ua ) {\n    ua = ua.toLowerCase();\n\n    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\n        /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\n        /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\n        /(msie) ([\\w.]+)/.exec( ua ) ||\n        ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\n        [];\n\n    return {\n        browser: match[ 1 ] || \"\",\n        version: match[ 2 ] || \"0\"\n    };\n};\n\nmatched = jQuery.uaMatch( navigator.userAgent );\nbrowser = {};\n\nif ( matched.browser ) {\n    browser[ matched.browser ] = true;\n    browser.version = matched.version;\n}\n\n// Chrome is Webkit, but Webkit is also Safari.\nif ( browser.chrome ) {\n    browser.webkit = true;\n} else if ( browser.webkit ) {\n    browser.safari = true;\n}\n\njQuery.browser = browser;\n\njQuery.sub = function() {\n    function jQuerySub( selector, context ) {\n        return new jQuerySub.fn.init( selector, context );\n    }\n    jQuery.extend( true, jQuerySub, this );\n    jQuerySub.superclass = this;\n    jQuerySub.fn = jQuerySub.prototype = this();\n    jQuerySub.fn.constructor = jQuerySub;\n    jQuerySub.sub = this.sub;\n    jQuerySub.fn.init = function init( selector, context ) {\n        if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {\n            context = jQuerySub( context );\n        }\n\n        return jQuery.fn.init.call( this, selector, context, rootjQuerySub );\n    };\n    jQuerySub.fn.init.prototype = jQuerySub.fn;\n    var rootjQuerySub = jQuerySub(document);\n    return jQuerySub;\n};\n\n})();\nvar curCSS, iframe, iframeDoc,\n    ralpha = /alpha\\([^)]*\\)/i,\n    ropacity = /opacity=([^)]*)/,\n    rposition = /^(top|right|bottom|left)$/,\n    // swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n    // see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n    rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n    rmargin = /^margin/,\n    rnumsplit = new RegExp( \"^(\" + core_pnum + \")(.*)$\", \"i\" ),\n    rnumnonpx = new RegExp( \"^(\" + core_pnum + \")(?!px)[a-z%]+$\", \"i\" ),\n    rrelNum = new RegExp( \"^([-+])=(\" + core_pnum + \")\", \"i\" ),\n    elemdisplay = {},\n\n    cssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n    cssNormalTransform = {\n        letterSpacing: 0,\n        fontWeight: 400\n    },\n\n    cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ],\n    cssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\n\n    eventsToggle = jQuery.fn.toggle;\n\n// return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n    // shortcut for names that are not vendor prefixed\n    if ( name in style ) {\n        return name;\n    }\n\n    // check for vendor prefixed names\n    var capName = name.charAt(0).toUpperCase() + name.slice(1),\n        origName = name,\n        i = cssPrefixes.length;\n\n    while ( i-- ) {\n        name = cssPrefixes[ i ] + capName;\n        if ( name in style ) {\n            return name;\n        }\n    }\n\n    return origName;\n}\n\nfunction isHidden( elem, el ) {\n    elem = el || elem;\n    return jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n}\n\nfunction showHide( elements, show ) {\n    var elem, display,\n        values = [],\n        index = 0,\n        length = elements.length;\n\n    for ( ; index < length; index++ ) {\n        elem = elements[ index ];\n        if ( !elem.style ) {\n            continue;\n        }\n        values[ index ] = jQuery._data( elem, \"olddisplay\" );\n        if ( show ) {\n            // Reset the inline display of this element to learn if it is\n            // being hidden by cascaded rules or not\n            if ( !values[ index ] && elem.style.display === \"none\" ) {\n                elem.style.display = \"\";\n            }\n\n            // Set elements which have been overridden with display: none\n            // in a stylesheet to whatever the default browser style is\n            // for such an element\n            if ( elem.style.display === \"\" && isHidden( elem ) ) {\n                values[ index ] = jQuery._data( elem, \"olddisplay\", css_defaultDisplay(elem.nodeName) );\n            }\n        } else {\n            display = curCSS( elem, \"display\" );\n\n            if ( !values[ index ] && display !== \"none\" ) {\n                jQuery._data( elem, \"olddisplay\", display );\n            }\n        }\n    }\n\n    // Set the display of most of the elements in a second loop\n    // to avoid the constant reflow\n    for ( index = 0; index < length; index++ ) {\n        elem = elements[ index ];\n        if ( !elem.style ) {\n            continue;\n        }\n        if ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n            elem.style.display = show ? values[ index ] || \"\" : \"none\";\n        }\n    }\n\n    return elements;\n}\n\njQuery.fn.extend({\n    css: function( name, value ) {\n        return jQuery.access( this, function( elem, name, value ) {\n            return value !== undefined ?\n                jQuery.style( elem, name, value ) :\n                jQuery.css( elem, name );\n        }, name, value, arguments.length > 1 );\n    },\n    show: function() {\n        return showHide( this, true );\n    },\n    hide: function() {\n        return showHide( this );\n    },\n    toggle: function( state, fn2 ) {\n        var bool = typeof state === \"boolean\";\n\n        if ( jQuery.isFunction( state ) && jQuery.isFunction( fn2 ) ) {\n            return eventsToggle.apply( this, arguments );\n        }\n\n        return this.each(function() {\n            if ( bool ? state : isHidden( this ) ) {\n                jQuery( this ).show();\n            } else {\n                jQuery( this ).hide();\n            }\n        });\n    }\n});\n\njQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n        opacity: {\n            get: function( elem, computed ) {\n                if ( computed ) {\n                    // We should always get a number back from opacity\n                    var ret = curCSS( elem, \"opacity\" );\n                    return ret === \"\" ? \"1\" : ret;\n\n                }\n            }\n        }\n    },\n\n    // Exclude the following css properties to add px\n    cssNumber: {\n        \"fillOpacity\": true,\n        \"fontWeight\": true,\n        \"lineHeight\": true,\n        \"opacity\": true,\n        \"orphans\": true,\n        \"widows\": true,\n        \"zIndex\": true,\n        \"zoom\": true\n    },\n\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {\n        // normalize float css property\n        \"float\": jQuery.support.cssFloat ? \"cssFloat\" : \"styleFloat\"\n    },\n\n    // Get and set the style property on a DOM Node\n    style: function( elem, name, value, extra ) {\n        // Don't set styles on text and comment nodes\n        if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n            return;\n        }\n\n        // Make sure that we're working with the right name\n        var ret, type, hooks,\n            origName = jQuery.camelCase( name ),\n            style = elem.style;\n\n        name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n        // gets hook for the prefixed version\n        // followed by the unprefixed version\n        hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n        // Check if we're setting a value\n        if ( value !== undefined ) {\n            type = typeof value;\n\n            // convert relative number strings (+= or -=) to relative numbers. #7345\n            if ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n                value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n                // Fixes bug #9237\n                type = \"number\";\n            }\n\n            // Make sure that NaN and null values aren't set. See: #7116\n            if ( value == null || type === \"number\" && isNaN( value ) ) {\n                return;\n            }\n\n            // If a number was passed in, add 'px' to the (except for certain CSS properties)\n            if ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n                value += \"px\";\n            }\n\n            // If a hook was provided, use that value, otherwise just set the specified value\n            if ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n                // Wrapped to prevent IE from throwing errors when 'invalid' values are provided\n                // Fixes bug #5509\n                try {\n                    style[ name ] = value;\n                } catch(e) {}\n            }\n\n        } else {\n            // If a hook was provided get the non-computed value from there\n            if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n                return ret;\n            }\n\n            // Otherwise just get the value from the style object\n            return style[ name ];\n        }\n    },\n\n    css: function( elem, name, numeric, extra ) {\n        var val, num, hooks,\n            origName = jQuery.camelCase( name );\n\n        // Make sure that we're working with the right name\n        name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n        // gets hook for the prefixed version\n        // followed by the unprefixed version\n        hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n        // If a hook was provided get the computed value from there\n        if ( hooks && \"get\" in hooks ) {\n            val = hooks.get( elem, true, extra );\n        }\n\n        // Otherwise, if a way to get the computed value exists, use that\n        if ( val === undefined ) {\n            val = curCSS( elem, name );\n        }\n\n        //convert \"normal\" to computed value\n        if ( val === \"normal\" && name in cssNormalTransform ) {\n            val = cssNormalTransform[ name ];\n        }\n\n        // Return, converting to number if forced or a qualifier was provided and val looks numeric\n        if ( numeric || extra !== undefined ) {\n            num = parseFloat( val );\n            return numeric || jQuery.isNumeric( num ) ? num || 0 : val;\n        }\n        return val;\n    },\n\n    // A method for quickly swapping in/out CSS properties to get correct calculations\n    swap: function( elem, options, callback ) {\n        var ret, name,\n            old = {};\n\n        // Remember the old values, and insert the new ones\n        for ( name in options ) {\n            old[ name ] = elem.style[ name ];\n            elem.style[ name ] = options[ name ];\n        }\n\n        ret = callback.call( elem );\n\n        // Revert the old values\n        for ( name in options ) {\n            elem.style[ name ] = old[ name ];\n        }\n\n        return ret;\n    }\n});\n\n// NOTE: To any future maintainer, we've window.getComputedStyle\n// because jsdom on node.js will break without it.\nif ( window.getComputedStyle ) {\n    curCSS = function( elem, name ) {\n        var ret, width, minWidth, maxWidth,\n            computed = window.getComputedStyle( elem, null ),\n            style = elem.style;\n\n        if ( computed ) {\n\n            ret = computed[ name ];\n            if ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n                ret = jQuery.style( elem, name );\n            }\n\n            // A tribute to the \"awesome hack by Dean Edwards\"\n            // Chrome < 17 and Safari 5.0 uses \"computed value\" instead of \"used value\" for margin-right\n            // Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n            // this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n            if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n                width = style.width;\n                minWidth = style.minWidth;\n                maxWidth = style.maxWidth;\n\n                style.minWidth = style.maxWidth = style.width = ret;\n                ret = computed.width;\n\n                style.width = width;\n                style.minWidth = minWidth;\n                style.maxWidth = maxWidth;\n            }\n        }\n\n        return ret;\n    };\n} else if ( document.documentElement.currentStyle ) {\n    curCSS = function( elem, name ) {\n        var left, rsLeft,\n            ret = elem.currentStyle && elem.currentStyle[ name ],\n            style = elem.style;\n\n        // Avoid setting ret to empty string here\n        // so we don't default to auto\n        if ( ret == null && style && style[ name ] ) {\n            ret = style[ name ];\n        }\n\n        // From the awesome hack by Dean Edwards\n        // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n        // If we're not dealing with a regular pixel number\n        // but a number that has a weird ending, we need to convert it to pixels\n        // but not position css attributes, as those are proportional to the parent element instead\n        // and we can't measure the parent instead because it might trigger a \"stacking dolls\" problem\n        if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {\n\n            // Remember the original values\n            left = style.left;\n            rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;\n\n            // Put in the new values to get a computed value out\n            if ( rsLeft ) {\n                elem.runtimeStyle.left = elem.currentStyle.left;\n            }\n            style.left = name === \"fontSize\" ? \"1em\" : ret;\n            ret = style.pixelLeft + \"px\";\n\n            // Revert the changed values\n            style.left = left;\n            if ( rsLeft ) {\n                elem.runtimeStyle.left = rsLeft;\n            }\n        }\n\n        return ret === \"\" ? \"auto\" : ret;\n    };\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n    var matches = rnumsplit.exec( value );\n    return matches ?\n            Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n            value;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox ) {\n    var i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n        // If we already have the right measurement, avoid augmentation\n        4 :\n        // Otherwise initialize for horizontal or vertical properties\n        name === \"width\" ? 1 : 0,\n\n        val = 0;\n\n    for ( ; i < 4; i += 2 ) {\n        // both box models exclude margin, so add it if we want it\n        if ( extra === \"margin\" ) {\n            // we use jQuery.css instead of curCSS here\n            // because of the reliableMarginRight CSS hook!\n            val += jQuery.css( elem, extra + cssExpand[ i ], true );\n        }\n\n        // From this point on we use curCSS for maximum performance (relevant in animations)\n        if ( isBorderBox ) {\n            // border-box includes padding, so remove it if we want content\n            if ( extra === \"content\" ) {\n                val -= parseFloat( curCSS( elem, \"padding\" + cssExpand[ i ] ) ) || 0;\n            }\n\n            // at this point, extra isn't border nor margin, so remove border\n            if ( extra !== \"margin\" ) {\n                val -= parseFloat( curCSS( elem, \"border\" + cssExpand[ i ] + \"Width\" ) ) || 0;\n            }\n        } else {\n            // at this point, extra isn't content, so add padding\n            val += parseFloat( curCSS( elem, \"padding\" + cssExpand[ i ] ) ) || 0;\n\n            // at this point, extra isn't content nor padding, so add border\n            if ( extra !== \"padding\" ) {\n                val += parseFloat( curCSS( elem, \"border\" + cssExpand[ i ] + \"Width\" ) ) || 0;\n            }\n        }\n    }\n\n    return val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n    // Start with offset property, which is equivalent to the border-box value\n    var val = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n        valueIsBorderBox = true,\n        isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\" ) === \"border-box\";\n\n    // some non-html elements return undefined for offsetWidth, so check for null/undefined\n    // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n    // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n    if ( val <= 0 || val == null ) {\n        // Fall back to computed then uncomputed css if necessary\n        val = curCSS( elem, name );\n        if ( val < 0 || val == null ) {\n            val = elem.style[ name ];\n        }\n\n        // Computed unit is not pixels. Stop here and return.\n        if ( rnumnonpx.test(val) ) {\n            return val;\n        }\n\n        // we need the check for style in case a browser which returns unreliable values\n        // for getComputedStyle silently falls back to the reliable elem.style\n        valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );\n\n        // Normalize \"\", auto, and prepare for extra\n        val = parseFloat( val ) || 0;\n    }\n\n    // use the active box-sizing model to add/subtract irrelevant styles\n    return ( val +\n        augmentWidthOrHeight(\n            elem,\n            name,\n            extra || ( isBorderBox ? \"border\" : \"content\" ),\n            valueIsBorderBox\n        )\n    ) + \"px\";\n}\n\n\n// Try to determine the default display value of an element\nfunction css_defaultDisplay( nodeName ) {\n    if ( elemdisplay[ nodeName ] ) {\n        return elemdisplay[ nodeName ];\n    }\n\n    var elem = jQuery( \"<\" + nodeName + \">\" ).appendTo( document.body ),\n        display = elem.css(\"display\");\n    elem.remove();\n\n    // If the simple way fails,\n    // get element's real default display by attaching it to a temp iframe\n    if ( display === \"none\" || display === \"\" ) {\n        // Use the already-created iframe if possible\n        iframe = document.body.appendChild(\n            iframe || jQuery.extend( document.createElement(\"iframe\"), {\n                frameBorder: 0,\n                width: 0,\n                height: 0\n            })\n        );\n\n        // Create a cacheable copy of the iframe document on first call.\n        // IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML\n        // document to it; WebKit & Firefox won't allow reusing the iframe document.\n        if ( !iframeDoc || !iframe.createElement ) {\n            iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;\n            iframeDoc.write(\"<!doctype html><html><body>\");\n            iframeDoc.close();\n        }\n\n        elem = iframeDoc.body.appendChild( iframeDoc.createElement(nodeName) );\n\n        display = curCSS( elem, \"display\" );\n        document.body.removeChild( iframe );\n    }\n\n    // Store the correct default display\n    elemdisplay[ nodeName ] = display;\n\n    return display;\n}\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n    jQuery.cssHooks[ name ] = {\n        get: function( elem, computed, extra ) {\n            if ( computed ) {\n                // certain elements can have dimension info if we invisibly show them\n                // however, it must have a current display style that would benefit from this\n                if ( elem.offsetWidth === 0 && rdisplayswap.test( curCSS( elem, \"display\" ) ) ) {\n                    return jQuery.swap( elem, cssShow, function() {\n                        return getWidthOrHeight( elem, name, extra );\n                    });\n                } else {\n                    return getWidthOrHeight( elem, name, extra );\n                }\n            }\n        },\n\n        set: function( elem, value, extra ) {\n            return setPositiveNumber( elem, value, extra ?\n                augmentWidthOrHeight(\n                    elem,\n                    name,\n                    extra,\n                    jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\" ) === \"border-box\"\n                ) : 0\n            );\n        }\n    };\n});\n\nif ( !jQuery.support.opacity ) {\n    jQuery.cssHooks.opacity = {\n        get: function( elem, computed ) {\n            // IE uses filters for opacity\n            return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || \"\" ) ?\n                ( 0.01 * parseFloat( RegExp.$1 ) ) + \"\" :\n                computed ? \"1\" : \"\";\n        },\n\n        set: function( elem, value ) {\n            var style = elem.style,\n                currentStyle = elem.currentStyle,\n                opacity = jQuery.isNumeric( value ) ? \"alpha(opacity=\" + value * 100 + \")\" : \"\",\n                filter = currentStyle && currentStyle.filter || style.filter || \"\";\n\n            // IE has trouble with opacity if it does not have layout\n            // Force it by setting the zoom level\n            style.zoom = 1;\n\n            // if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652\n            if ( value >= 1 && jQuery.trim( filter.replace( ralpha, \"\" ) ) === \"\" &&\n                style.removeAttribute ) {\n\n                // Setting style.filter to null, \"\" & \" \" still leave \"filter:\" in the cssText\n                // if \"filter:\" is present at all, clearType is disabled, we want to avoid this\n                // style.removeAttribute is IE Only, but so apparently is this code path...\n                style.removeAttribute( \"filter\" );\n\n                // if there there is no filter style applied in a css rule, we are done\n                if ( currentStyle && !currentStyle.filter ) {\n                    return;\n                }\n            }\n\n            // otherwise, set new filter values\n            style.filter = ralpha.test( filter ) ?\n                filter.replace( ralpha, opacity ) :\n                filter + \" \" + opacity;\n        }\n    };\n}\n\n// These hooks cannot be added until DOM ready because the support test\n// for it is not run until after DOM ready\njQuery(function() {\n    if ( !jQuery.support.reliableMarginRight ) {\n        jQuery.cssHooks.marginRight = {\n            get: function( elem, computed ) {\n                // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n                // Work around by temporarily setting element display to inline-block\n                return jQuery.swap( elem, { \"display\": \"inline-block\" }, function() {\n                    if ( computed ) {\n                        return curCSS( elem, \"marginRight\" );\n                    }\n                });\n            }\n        };\n    }\n\n    // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n    // getComputedStyle returns percent when specified for top/left/bottom/right\n    // rather than make the css module depend on the offset module, we just check for it here\n    if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {\n        jQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n            jQuery.cssHooks[ prop ] = {\n                get: function( elem, computed ) {\n                    if ( computed ) {\n                        var ret = curCSS( elem, prop );\n                        // if curCSS returns percentage, fallback to offset\n                        return rnumnonpx.test( ret ) ? jQuery( elem ).position()[ prop ] + \"px\" : ret;\n                    }\n                }\n            };\n        });\n    }\n\n});\n\nif ( jQuery.expr && jQuery.expr.filters ) {\n    jQuery.expr.filters.hidden = function( elem ) {\n        return ( elem.offsetWidth === 0 && elem.offsetHeight === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || curCSS( elem, \"display\" )) === \"none\");\n    };\n\n    jQuery.expr.filters.visible = function( elem ) {\n        return !jQuery.expr.filters.hidden( elem );\n    };\n}\n\n// These hooks are used by animate to expand properties\njQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n}, function( prefix, suffix ) {\n    jQuery.cssHooks[ prefix + suffix ] = {\n        expand: function( value ) {\n            var i,\n\n                // assumes a single number if not a string\n                parts = typeof value === \"string\" ? value.split(\" \") : [ value ],\n                expanded = {};\n\n            for ( i = 0; i < 4; i++ ) {\n                expanded[ prefix + cssExpand[ i ] + suffix ] =\n                    parts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n            }\n\n            return expanded;\n        }\n    };\n\n    if ( !rmargin.test( prefix ) ) {\n        jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n    }\n});\nvar r20 = /%20/g,\n    rbracket = /\\[\\]$/,\n    rCRLF = /\\r?\\n/g,\n    rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,\n    rselectTextarea = /^(?:select|textarea)/i;\n\njQuery.fn.extend({\n    serialize: function() {\n        return jQuery.param( this.serializeArray() );\n    },\n    serializeArray: function() {\n        return this.map(function(){\n            return this.elements ? jQuery.makeArray( this.elements ) : this;\n        })\n        .filter(function(){\n            return this.name && !this.disabled &&\n                ( this.checked || rselectTextarea.test( this.nodeName ) ||\n                    rinput.test( this.type ) );\n        })\n        .map(function( i, elem ){\n            var val = jQuery( this ).val();\n\n            return val == null ?\n                null :\n                jQuery.isArray( val ) ?\n                    jQuery.map( val, function( val, i ){\n                        return { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n                    }) :\n                    { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n        }).get();\n    }\n});\n\n//Serialize an array of form elements or a set of\n//key/values into a query string\njQuery.param = function( a, traditional ) {\n    var prefix,\n        s = [],\n        add = function( key, value ) {\n            // If value is a function, invoke it and return its value\n            value = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n            s[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n        };\n\n    // Set traditional to true for jQuery <= 1.3.2 behavior.\n    if ( traditional === undefined ) {\n        traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n    }\n\n    // If an array was passed in, assume that it is an array of form elements.\n    if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n        // Serialize the form elements\n        jQuery.each( a, function() {\n            add( this.name, this.value );\n        });\n\n    } else {\n        // If traditional, encode the \"old\" way (the way 1.3.2 or older\n        // did it), otherwise encode params recursively.\n        for ( prefix in a ) {\n            buildParams( prefix, a[ prefix ], traditional, add );\n        }\n    }\n\n    // Return the resulting serialization\n    return s.join( \"&\" ).replace( r20, \"+\" );\n};\n\nfunction buildParams( prefix, obj, traditional, add ) {\n    var name;\n\n    if ( jQuery.isArray( obj ) ) {\n        // Serialize array item.\n        jQuery.each( obj, function( i, v ) {\n            if ( traditional || rbracket.test( prefix ) ) {\n                // Treat each array item as a scalar.\n                add( prefix, v );\n\n            } else {\n                // If array item is non-scalar (array or object), encode its\n                // numeric index to resolve deserialization ambiguity issues.\n                // Note that rack (as of 1.0.0) can't currently deserialize\n                // nested arrays properly, and attempting to do so may cause\n                // a server error. Possible fixes are to modify rack's\n                // deserialization algorithm or to provide an option or flag\n                // to force array serialization to be shallow.\n                buildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n            }\n        });\n\n    } else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n        // Serialize object item.\n        for ( name in obj ) {\n            buildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n        }\n\n    } else {\n        // Serialize scalar item.\n        add( prefix, obj );\n    }\n}\nvar\n    // Document location\n    ajaxLocParts,\n    ajaxLocation,\n\n    rhash = /#.*$/,\n    rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg, // IE leaves an \\r character at EOL\n    // #7653, #8125, #8152: local protocol detection\n    rlocalProtocol = /^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/,\n    rnoContent = /^(?:GET|HEAD)$/,\n    rprotocol = /^\\/\\//,\n    rquery = /\\?/,\n    rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n    rts = /([?&])_=[^&]*/,\n    rurl = /^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n    // Keep a copy of the old load method\n    _load = jQuery.fn.load,\n\n    /* Prefilters\n     * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n     * 2) These are called:\n     *    - BEFORE asking for a transport\n     *    - AFTER param serialization (s.data is a string if s.processData is true)\n     * 3) key is the dataType\n     * 4) the catchall symbol \"*\" can be used\n     * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n     */\n    prefilters = {},\n\n    /* Transports bindings\n     * 1) key is the dataType\n     * 2) the catchall symbol \"*\" can be used\n     * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n     */\n    transports = {},\n\n    // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n    allTypes = [\"*/\"] + [\"*\"];\n\n// #8138, IE may throw an exception when accessing\n// a field from window.location if document.domain has been set\ntry {\n    ajaxLocation = location.href;\n} catch( e ) {\n    // Use the href attribute of an A element\n    // since IE will modify it given document.location\n    ajaxLocation = document.createElement( \"a\" );\n    ajaxLocation.href = \"\";\n    ajaxLocation = ajaxLocation.href;\n}\n\n// Segment location into parts\najaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function( dataTypeExpression, func ) {\n\n        if ( typeof dataTypeExpression !== \"string\" ) {\n            func = dataTypeExpression;\n            dataTypeExpression = \"*\";\n        }\n\n        var dataType, list, placeBefore,\n            dataTypes = dataTypeExpression.toLowerCase().split( core_rspace ),\n            i = 0,\n            length = dataTypes.length;\n\n        if ( jQuery.isFunction( func ) ) {\n            // For each dataType in the dataTypeExpression\n            for ( ; i < length; i++ ) {\n                dataType = dataTypes[ i ];\n                // We control if we're asked to add before\n                // any existing element\n                placeBefore = /^\\+/.test( dataType );\n                if ( placeBefore ) {\n                    dataType = dataType.substr( 1 ) || \"*\";\n                }\n                list = structure[ dataType ] = structure[ dataType ] || [];\n                // then we add to the structure accordingly\n                list[ placeBefore ? \"unshift\" : \"push\" ]( func );\n            }\n        }\n    };\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,\n        dataType /* internal */, inspected /* internal */ ) {\n\n    dataType = dataType || options.dataTypes[ 0 ];\n    inspected = inspected || {};\n\n    inspected[ dataType ] = true;\n\n    var selection,\n        list = structure[ dataType ],\n        i = 0,\n        length = list ? list.length : 0,\n        executeOnly = ( structure === prefilters );\n\n    for ( ; i < length && ( executeOnly || !selection ); i++ ) {\n        selection = list[ i ]( options, originalOptions, jqXHR );\n        // If we got redirected to another dataType\n        // we try there if executing only and not done already\n        if ( typeof selection === \"string\" ) {\n            if ( !executeOnly || inspected[ selection ] ) {\n                selection = undefined;\n            } else {\n                options.dataTypes.unshift( selection );\n                selection = inspectPrefiltersOrTransports(\n                        structure, options, originalOptions, jqXHR, selection, inspected );\n            }\n        }\n    }\n    // If we're only executing or nothing was selected\n    // we try the catchall dataType if not done already\n    if ( ( executeOnly || !selection ) && !inspected[ \"*\" ] ) {\n        selection = inspectPrefiltersOrTransports(\n                structure, options, originalOptions, jqXHR, \"*\", inspected );\n    }\n    // unnecessary when only executing (prefilters)\n    // but it'll be ignored by the caller in that case\n    return selection;\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n    var key, deep,\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\n    for ( key in src ) {\n        if ( src[ key ] !== undefined ) {\n            ( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n        }\n    }\n    if ( deep ) {\n        jQuery.extend( true, target, deep );\n    }\n}\n\njQuery.fn.load = function( url, params, callback ) {\n    if ( typeof url !== \"string\" && _load ) {\n        return _load.apply( this, arguments );\n    }\n\n    // Don't do a request if no elements are being requested\n    if ( !this.length ) {\n        return this;\n    }\n\n    var selector, type, response,\n        self = this,\n        off = url.indexOf(\" \");\n\n    if ( off >= 0 ) {\n        selector = url.slice( off, url.length );\n        url = url.slice( 0, off );\n    }\n\n    // If it's a function\n    if ( jQuery.isFunction( params ) ) {\n\n        // We assume that it's the callback\n        callback = params;\n        params = undefined;\n\n    // Otherwise, build a param string\n    } else if ( params && typeof params === \"object\" ) {\n        type = \"POST\";\n    }\n\n    // Request the remote document\n    jQuery.ajax({\n        url: url,\n\n        // if \"type\" variable is undefined, then \"GET\" method will be used\n        type: type,\n        dataType: \"html\",\n        data: params,\n        complete: function( jqXHR, status ) {\n            if ( callback ) {\n                self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n            }\n        }\n    }).done(function( responseText ) {\n\n        // Save response for use in complete callback\n        response = arguments;\n\n        // See if a selector was specified\n        self.html( selector ?\n\n            // Create a dummy div to hold the results\n            jQuery(\"<div>\")\n\n                // inject the contents of the document in, removing the scripts\n                // to avoid any 'Permission Denied' errors in IE\n                .append( responseText.replace( rscript, \"\" ) )\n\n                // Locate the specified elements\n                .find( selector ) :\n\n            // If not, just inject the full result\n            responseText );\n\n    });\n\n    return this;\n};\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( \"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split( \" \" ), function( i, o ){\n    jQuery.fn[ o ] = function( f ){\n        return this.on( o, f );\n    };\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n    jQuery[ method ] = function( url, data, callback, type ) {\n        // shift arguments if data argument was omitted\n        if ( jQuery.isFunction( data ) ) {\n            type = type || callback;\n            callback = data;\n            data = undefined;\n        }\n\n        return jQuery.ajax({\n            type: method,\n            url: url,\n            data: data,\n            success: callback,\n            dataType: type\n        });\n    };\n});\n\njQuery.extend({\n\n    getScript: function( url, callback ) {\n        return jQuery.get( url, undefined, callback, \"script\" );\n    },\n\n    getJSON: function( url, data, callback ) {\n        return jQuery.get( url, data, callback, \"json\" );\n    },\n\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function( target, settings ) {\n        if ( settings ) {\n            // Building a settings object\n            ajaxExtend( target, jQuery.ajaxSettings );\n        } else {\n            // Extending ajaxSettings\n            settings = target;\n            target = jQuery.ajaxSettings;\n        }\n        ajaxExtend( target, settings );\n        return target;\n    },\n\n    ajaxSettings: {\n        url: ajaxLocation,\n        isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n        global: true,\n        type: \"GET\",\n        contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n        processData: true,\n        async: true,\n        /*\n        timeout: 0,\n        data: null,\n        dataType: null,\n        username: null,\n        password: null,\n        cache: null,\n        throws: false,\n        traditional: false,\n        headers: {},\n        */\n\n        accepts: {\n            xml: \"application/xml, text/xml\",\n            html: \"text/html\",\n            text: \"text/plain\",\n            json: \"application/json, text/javascript\",\n            \"*\": allTypes\n        },\n\n        contents: {\n            xml: /xml/,\n            html: /html/,\n            json: /json/\n        },\n\n        responseFields: {\n            xml: \"responseXML\",\n            text: \"responseText\"\n        },\n\n        // List of data converters\n        // 1) key format is \"source_type destination_type\" (a single space in-between)\n        // 2) the catchall symbol \"*\" can be used for source_type\n        converters: {\n\n            // Convert anything to text\n            \"* text\": window.String,\n\n            // Text to html (true = no transformation)\n            \"text html\": true,\n\n            // Evaluate text as a json expression\n            \"text json\": jQuery.parseJSON,\n\n            // Parse text as xml\n            \"text xml\": jQuery.parseXML\n        },\n\n        // For options that shouldn't be deep extended:\n        // you can add your own custom options here if\n        // and when you create one that shouldn't be\n        // deep extended (see ajaxExtend)\n        flatOptions: {\n            context: true,\n            url: true\n        }\n    },\n\n    ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n    ajaxTransport: addToPrefiltersOrTransports( transports ),\n\n    // Main method\n    ajax: function( url, options ) {\n\n        // If url is an object, simulate pre-1.5 signature\n        if ( typeof url === \"object\" ) {\n            options = url;\n            url = undefined;\n        }\n\n        // Force options to be an object\n        options = options || {};\n\n        var // ifModified key\n            ifModifiedKey,\n            // Response headers\n            responseHeadersString,\n            responseHeaders,\n            // transport\n            transport,\n            // timeout handle\n            timeoutTimer,\n            // Cross-domain detection vars\n            parts,\n            // To know if global events are to be dispatched\n            fireGlobals,\n            // Loop variable\n            i,\n            // Create the final options object\n            s = jQuery.ajaxSetup( {}, options ),\n            // Callbacks context\n            callbackContext = s.context || s,\n            // Context for global events\n            // It's the callbackContext if one was provided in the options\n            // and if it's a DOM node or a jQuery collection\n            globalEventContext = callbackContext !== s &&\n                ( callbackContext.nodeType || callbackContext instanceof jQuery ) ?\n                        jQuery( callbackContext ) : jQuery.event,\n            // Deferreds\n            deferred = jQuery.Deferred(),\n            completeDeferred = jQuery.Callbacks( \"once memory\" ),\n            // Status-dependent callbacks\n            statusCode = s.statusCode || {},\n            // Headers (they are sent all at once)\n            requestHeaders = {},\n            requestHeadersNames = {},\n            // The jqXHR state\n            state = 0,\n            // Default abort message\n            strAbort = \"canceled\",\n            // Fake xhr\n            jqXHR = {\n\n                readyState: 0,\n\n                // Caches the header\n                setRequestHeader: function( name, value ) {\n                    if ( !state ) {\n                        var lname = name.toLowerCase();\n                        name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n                        requestHeaders[ name ] = value;\n                    }\n                    return this;\n                },\n\n                // Raw string\n                getAllResponseHeaders: function() {\n                    return state === 2 ? responseHeadersString : null;\n                },\n\n                // Builds headers hashtable if needed\n                getResponseHeader: function( key ) {\n                    var match;\n                    if ( state === 2 ) {\n                        if ( !responseHeaders ) {\n                            responseHeaders = {};\n                            while( ( match = rheaders.exec( responseHeadersString ) ) ) {\n                                responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n                            }\n                        }\n                        match = responseHeaders[ key.toLowerCase() ];\n                    }\n                    return match === undefined ? null : match;\n                },\n\n                // Overrides response content-type header\n                overrideMimeType: function( type ) {\n                    if ( !state ) {\n                        s.mimeType = type;\n                    }\n                    return this;\n                },\n\n                // Cancel the request\n                abort: function( statusText ) {\n                    statusText = statusText || strAbort;\n                    if ( transport ) {\n                        transport.abort( statusText );\n                    }\n                    done( 0, statusText );\n                    return this;\n                }\n            };\n\n        // Callback for when everything is done\n        // It is defined here because jslint complains if it is declared\n        // at the end of the function (which would be more logical and readable)\n        function done( status, nativeStatusText, responses, headers ) {\n            var isSuccess, success, error, response, modified,\n                statusText = nativeStatusText;\n\n            // Called once\n            if ( state === 2 ) {\n                return;\n            }\n\n            // State is \"done\" now\n            state = 2;\n\n            // Clear timeout if it exists\n            if ( timeoutTimer ) {\n                clearTimeout( timeoutTimer );\n            }\n\n            // Dereference transport for early garbage collection\n            // (no matter how long the jqXHR object will be used)\n            transport = undefined;\n\n            // Cache response headers\n            responseHeadersString = headers || \"\";\n\n            // Set readyState\n            jqXHR.readyState = status > 0 ? 4 : 0;\n\n            // Get response data\n            if ( responses ) {\n                response = ajaxHandleResponses( s, jqXHR, responses );\n            }\n\n            // If successful, handle type chaining\n            if ( status >= 200 && status < 300 || status === 304 ) {\n\n                // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n                if ( s.ifModified ) {\n\n                    modified = jqXHR.getResponseHeader(\"Last-Modified\");\n                    if ( modified ) {\n                        jQuery.lastModified[ ifModifiedKey ] = modified;\n                    }\n                    modified = jqXHR.getResponseHeader(\"Etag\");\n                    if ( modified ) {\n                        jQuery.etag[ ifModifiedKey ] = modified;\n                    }\n                }\n\n                // If not modified\n                if ( status === 304 ) {\n\n                    statusText = \"notmodified\";\n                    isSuccess = true;\n\n                // If we have data\n                } else {\n\n                    isSuccess = ajaxConvert( s, response );\n                    statusText = isSuccess.state;\n                    success = isSuccess.data;\n                    error = isSuccess.error;\n                    isSuccess = !error;\n                }\n            } else {\n                // We extract error from statusText\n                // then normalize statusText and status for non-aborts\n                error = statusText;\n                if ( !statusText || status ) {\n                    statusText = \"error\";\n                    if ( status < 0 ) {\n                        status = 0;\n                    }\n                }\n            }\n\n            // Set data for the fake xhr object\n            jqXHR.status = status;\n            jqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n            // Success/Error\n            if ( isSuccess ) {\n                deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n            } else {\n                deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n            }\n\n            // Status-dependent callbacks\n            jqXHR.statusCode( statusCode );\n            statusCode = undefined;\n\n            if ( fireGlobals ) {\n                globalEventContext.trigger( \"ajax\" + ( isSuccess ? \"Success\" : \"Error\" ),\n                        [ jqXHR, s, isSuccess ? success : error ] );\n            }\n\n            // Complete\n            completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n            if ( fireGlobals ) {\n                globalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n                // Handle the global AJAX counter\n                if ( !( --jQuery.active ) ) {\n                    jQuery.event.trigger( \"ajaxStop\" );\n                }\n            }\n        }\n\n        // Attach deferreds\n        deferred.promise( jqXHR );\n        jqXHR.success = jqXHR.done;\n        jqXHR.error = jqXHR.fail;\n        jqXHR.complete = completeDeferred.add;\n\n        // Status-dependent callbacks\n        jqXHR.statusCode = function( map ) {\n            if ( map ) {\n                var tmp;\n                if ( state < 2 ) {\n                    for ( tmp in map ) {\n                        statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];\n                    }\n                } else {\n                    tmp = map[ jqXHR.status ];\n                    jqXHR.always( tmp );\n                }\n            }\n            return this;\n        };\n\n        // Remove hash character (#7531: and string promotion)\n        // Add protocol if not provided (#5866: IE7 issue with protocol-less urls)\n        // We also use the url parameter if available\n        s.url = ( ( url || s.url ) + \"\" ).replace( rhash, \"\" ).replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n        // Extract dataTypes list\n        s.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().split( core_rspace );\n\n        // A cross-domain request is in order when we have a protocol:host:port mismatch\n        if ( s.crossDomain == null ) {\n            parts = rurl.exec( s.url.toLowerCase() ) || false;\n            s.crossDomain = parts && ( parts.join(\":\") + ( parts[ 3 ] ? \"\" : parts[ 1 ] === \"http:\" ? 80 : 443 ) ) !==\n                ( ajaxLocParts.join(\":\") + ( ajaxLocParts[ 3 ] ? \"\" : ajaxLocParts[ 1 ] === \"http:\" ? 80 : 443 ) );\n        }\n\n        // Convert data if not already a string\n        if ( s.data && s.processData && typeof s.data !== \"string\" ) {\n            s.data = jQuery.param( s.data, s.traditional );\n        }\n\n        // Apply prefilters\n        inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n        // If request was aborted inside a prefilter, stop there\n        if ( state === 2 ) {\n            return jqXHR;\n        }\n\n        // We can fire global events as of now if asked to\n        fireGlobals = s.global;\n\n        // Uppercase the type\n        s.type = s.type.toUpperCase();\n\n        // Determine if request has content\n        s.hasContent = !rnoContent.test( s.type );\n\n        // Watch for a new set of requests\n        if ( fireGlobals && jQuery.active++ === 0 ) {\n            jQuery.event.trigger( \"ajaxStart\" );\n        }\n\n        // More options handling for requests with no content\n        if ( !s.hasContent ) {\n\n            // If data is available, append data to url\n            if ( s.data ) {\n                s.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.data;\n                // #9682: remove data so that it's not used in an eventual retry\n                delete s.data;\n            }\n\n            // Get ifModifiedKey before adding the anti-cache parameter\n            ifModifiedKey = s.url;\n\n            // Add anti-cache in url if needed\n            if ( s.cache === false ) {\n\n                var ts = jQuery.now(),\n                    // try replacing _= if it is there\n                    ret = s.url.replace( rts, \"$1_=\" + ts );\n\n                // if nothing was replaced, add timestamp to the end\n                s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? \"&\" : \"?\" ) + \"_=\" + ts : \"\" );\n            }\n        }\n\n        // Set the correct header, if data is being sent\n        if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n            jqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n        }\n\n        // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n        if ( s.ifModified ) {\n            ifModifiedKey = ifModifiedKey || s.url;\n            if ( jQuery.lastModified[ ifModifiedKey ] ) {\n                jqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ ifModifiedKey ] );\n            }\n            if ( jQuery.etag[ ifModifiedKey ] ) {\n                jqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ ifModifiedKey ] );\n            }\n        }\n\n        // Set the Accepts header for the server, depending on the dataType\n        jqXHR.setRequestHeader(\n            \"Accept\",\n            s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n                s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n                s.accepts[ \"*\" ]\n        );\n\n        // Check for headers option\n        for ( i in s.headers ) {\n            jqXHR.setRequestHeader( i, s.headers[ i ] );\n        }\n\n        // Allow custom headers/mimetypes and early abort\n        if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n                // Abort if not done already and return\n                return jqXHR.abort();\n\n        }\n\n        // aborting is no longer a cancellation\n        strAbort = \"abort\";\n\n        // Install callbacks on deferreds\n        for ( i in { success: 1, error: 1, complete: 1 } ) {\n            jqXHR[ i ]( s[ i ] );\n        }\n\n        // Get transport\n        transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n        // If no transport, we auto-abort\n        if ( !transport ) {\n            done( -1, \"No Transport\" );\n        } else {\n            jqXHR.readyState = 1;\n            // Send global event\n            if ( fireGlobals ) {\n                globalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n            }\n            // Timeout\n            if ( s.async && s.timeout > 0 ) {\n                timeoutTimer = setTimeout( function(){\n                    jqXHR.abort( \"timeout\" );\n                }, s.timeout );\n            }\n\n            try {\n                state = 1;\n                transport.send( requestHeaders, done );\n            } catch (e) {\n                // Propagate exception as error if not done\n                if ( state < 2 ) {\n                    done( -1, e );\n                // Simply rethrow otherwise\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        return jqXHR;\n    },\n\n    // Counter for holding the number of active queries\n    active: 0,\n\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {}\n\n});\n\n/* Handles responses to an ajax request:\n * - sets all responseXXX fields accordingly\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n    var ct, type, finalDataType, firstDataType,\n        contents = s.contents,\n        dataTypes = s.dataTypes,\n        responseFields = s.responseFields;\n\n    // Fill responseXXX fields\n    for ( type in responseFields ) {\n        if ( type in responses ) {\n            jqXHR[ responseFields[type] ] = responses[ type ];\n        }\n    }\n\n    // Remove auto dataType and get content-type in the process\n    while( dataTypes[ 0 ] === \"*\" ) {\n        dataTypes.shift();\n        if ( ct === undefined ) {\n            ct = s.mimeType || jqXHR.getResponseHeader( \"content-type\" );\n        }\n    }\n\n    // Check if we're dealing with a known content-type\n    if ( ct ) {\n        for ( type in contents ) {\n            if ( contents[ type ] && contents[ type ].test( ct ) ) {\n                dataTypes.unshift( type );\n                break;\n            }\n        }\n    }\n\n    // Check to see if we have a response for the expected dataType\n    if ( dataTypes[ 0 ] in responses ) {\n        finalDataType = dataTypes[ 0 ];\n    } else {\n        // Try convertible dataTypes\n        for ( type in responses ) {\n            if ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n                finalDataType = type;\n                break;\n            }\n            if ( !firstDataType ) {\n                firstDataType = type;\n            }\n        }\n        // Or just use first one\n        finalDataType = finalDataType || firstDataType;\n    }\n\n    // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n    if ( finalDataType ) {\n        if ( finalDataType !== dataTypes[ 0 ] ) {\n            dataTypes.unshift( finalDataType );\n        }\n        return responses[ finalDataType ];\n    }\n}\n\n// Chain conversions given the request and the original response\nfunction ajaxConvert( s, response ) {\n\n    var conv, conv2, current, tmp,\n        // Work with a copy of dataTypes in case we need to modify it for conversion\n        dataTypes = s.dataTypes.slice(),\n        prev = dataTypes[ 0 ],\n        converters = {},\n        i = 0;\n\n    // Apply the dataFilter if provided\n    if ( s.dataFilter ) {\n        response = s.dataFilter( response, s.dataType );\n    }\n\n    // Create converters map with lowercased keys\n    if ( dataTypes[ 1 ] ) {\n        for ( conv in s.converters ) {\n            converters[ conv.toLowerCase() ] = s.converters[ conv ];\n        }\n    }\n\n    // Convert to each sequential dataType, tolerating list modification\n    for ( ; (current = dataTypes[++i]); ) {\n\n        // There's only work to do if current dataType is non-auto\n        if ( current !== \"*\" ) {\n\n            // Convert response if prev dataType is non-auto and differs from current\n            if ( prev !== \"*\" && prev !== current ) {\n\n                // Seek a direct converter\n                conv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n                // If none found, seek a pair\n                if ( !conv ) {\n                    for ( conv2 in converters ) {\n\n                        // If conv2 outputs current\n                        tmp = conv2.split(\" \");\n                        if ( tmp[ 1 ] === current ) {\n\n                            // If prev can be converted to accepted input\n                            conv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n                                converters[ \"* \" + tmp[ 0 ] ];\n                            if ( conv ) {\n                                // Condense equivalence converters\n                                if ( conv === true ) {\n                                    conv = converters[ conv2 ];\n\n                                // Otherwise, insert the intermediate dataType\n                                } else if ( converters[ conv2 ] !== true ) {\n                                    current = tmp[ 0 ];\n                                    dataTypes.splice( i--, 0, current );\n                                }\n\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                // Apply converter (if not an equivalence)\n                if ( conv !== true ) {\n\n                    // Unless errors are allowed to bubble, catch and return them\n                    if ( conv && s[\"throws\"] ) {\n                        response = conv( response );\n                    } else {\n                        try {\n                            response = conv( response );\n                        } catch ( e ) {\n                            return { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n                        }\n                    }\n                }\n            }\n\n            // Update prev for next iteration\n            prev = current;\n        }\n    }\n\n    return { state: \"success\", data: response };\n}\nvar oldCallbacks = [],\n    rquestion = /\\?/,\n    rjsonp = /(=)\\?(?=&|$)|\\?\\?/,\n    nonce = jQuery.now();\n\n// Default jsonp settings\njQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function() {\n        var callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n        this[ callback ] = true;\n        return callback;\n    }\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n    var callbackName, overwritten, responseContainer,\n        data = s.data,\n        url = s.url,\n        hasCallback = s.jsonp !== false,\n        replaceInUrl = hasCallback && rjsonp.test( url ),\n        replaceInData = hasCallback && !replaceInUrl && typeof data === \"string\" &&\n            !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") &&\n            rjsonp.test( data );\n\n    // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n    if ( s.dataTypes[ 0 ] === \"jsonp\" || replaceInUrl || replaceInData ) {\n\n        // Get callback name, remembering preexisting value associated with it\n        callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n            s.jsonpCallback() :\n            s.jsonpCallback;\n        overwritten = window[ callbackName ];\n\n        // Insert callback into url or form data\n        if ( replaceInUrl ) {\n            s.url = url.replace( rjsonp, \"$1\" + callbackName );\n        } else if ( replaceInData ) {\n            s.data = data.replace( rjsonp, \"$1\" + callbackName );\n        } else if ( hasCallback ) {\n            s.url += ( rquestion.test( url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n        }\n\n        // Use data converter to retrieve json after script execution\n        s.converters[\"script json\"] = function() {\n            if ( !responseContainer ) {\n                jQuery.error( callbackName + \" was not called\" );\n            }\n            return responseContainer[ 0 ];\n        };\n\n        // force json dataType\n        s.dataTypes[ 0 ] = \"json\";\n\n        // Install callback\n        window[ callbackName ] = function() {\n            responseContainer = arguments;\n        };\n\n        // Clean-up function (fires after converters)\n        jqXHR.always(function() {\n            // Restore preexisting value\n            window[ callbackName ] = overwritten;\n\n            // Save back as free\n            if ( s[ callbackName ] ) {\n                // make sure that re-using the options doesn't screw things around\n                s.jsonpCallback = originalSettings.jsonpCallback;\n\n                // save the callback name for future use\n                oldCallbacks.push( callbackName );\n            }\n\n            // Call if it was a function and we have a response\n            if ( responseContainer && jQuery.isFunction( overwritten ) ) {\n                overwritten( responseContainer[ 0 ] );\n            }\n\n            responseContainer = overwritten = undefined;\n        });\n\n        // Delegate to script\n        return \"script\";\n    }\n});\n// Install script dataType\njQuery.ajaxSetup({\n    accepts: {\n        script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n        script: /javascript|ecmascript/\n    },\n    converters: {\n        \"text script\": function( text ) {\n            jQuery.globalEval( text );\n            return text;\n        }\n    }\n});\n\n// Handle cache's special case and global\njQuery.ajaxPrefilter( \"script\", function( s ) {\n    if ( s.cache === undefined ) {\n        s.cache = false;\n    }\n    if ( s.crossDomain ) {\n        s.type = \"GET\";\n        s.global = false;\n    }\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function(s) {\n\n    // This transport only deals with cross domain requests\n    if ( s.crossDomain ) {\n\n        var script,\n            head = document.head || document.getElementsByTagName( \"head\" )[0] || document.documentElement;\n\n        return {\n\n            send: function( _, callback ) {\n\n                script = document.createElement( \"script\" );\n\n                script.async = \"async\";\n\n                if ( s.scriptCharset ) {\n                    script.charset = s.scriptCharset;\n                }\n\n                script.src = s.url;\n\n                // Attach handlers for all browsers\n                script.onload = script.onreadystatechange = function( _, isAbort ) {\n\n                    if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {\n\n                        // Handle memory leak in IE\n                        script.onload = script.onreadystatechange = null;\n\n                        // Remove the script\n                        if ( head && script.parentNode ) {\n                            head.removeChild( script );\n                        }\n\n                        // Dereference the script\n                        script = undefined;\n\n                        // Callback if not abort\n                        if ( !isAbort ) {\n                            callback( 200, \"success\" );\n                        }\n                    }\n                };\n                // Use insertBefore instead of appendChild  to circumvent an IE6 bug.\n                // This arises when a base node is used (#2709 and #4378).\n                head.insertBefore( script, head.firstChild );\n            },\n\n            abort: function() {\n                if ( script ) {\n                    script.onload( 0, 1 );\n                }\n            }\n        };\n    }\n});\nvar xhrCallbacks,\n    // #5280: Internet Explorer will keep connections alive if we don't abort on unload\n    xhrOnUnloadAbort = window.ActiveXObject ? function() {\n        // Abort all pending requests\n        for ( var key in xhrCallbacks ) {\n            xhrCallbacks[ key ]( 0, 1 );\n        }\n    } : false,\n    xhrId = 0;\n\n// Functions to create xhrs\nfunction createStandardXHR() {\n    try {\n        return new window.XMLHttpRequest();\n    } catch( e ) {}\n}\n\nfunction createActiveXHR() {\n    try {\n        return new window.ActiveXObject( \"Microsoft.XMLHTTP\" );\n    } catch( e ) {}\n}\n\n// Create the request object\n// (This is still attached to ajaxSettings for backward compatibility)\njQuery.ajaxSettings.xhr = window.ActiveXObject ?\n    /* Microsoft failed to properly\n     * implement the XMLHttpRequest in IE7 (can't request local files),\n     * so we use the ActiveXObject when it is available\n     * Additionally XMLHttpRequest can be disabled in IE7/IE8 so\n     * we need a fallback.\n     */\n    function() {\n        return !this.isLocal && createStandardXHR() || createActiveXHR();\n    } :\n    // For all other browsers, use the standard XMLHttpRequest object\n    createStandardXHR;\n\n// Determine support properties\n(function( xhr ) {\n    jQuery.extend( jQuery.support, {\n        ajax: !!xhr,\n        cors: !!xhr && ( \"withCredentials\" in xhr )\n    });\n})( jQuery.ajaxSettings.xhr() );\n\n// Create transport if the browser can provide an xhr\nif ( jQuery.support.ajax ) {\n\n    jQuery.ajaxTransport(function( s ) {\n        // Cross domain only allowed if supported through XMLHttpRequest\n        if ( !s.crossDomain || jQuery.support.cors ) {\n\n            var callback;\n\n            return {\n                send: function( headers, complete ) {\n\n                    // Get a new xhr\n                    var handle, i,\n                        xhr = s.xhr();\n\n                    // Open the socket\n                    // Passing null username, generates a login popup on Opera (#2865)\n                    if ( s.username ) {\n                        xhr.open( s.type, s.url, s.async, s.username, s.password );\n                    } else {\n                        xhr.open( s.type, s.url, s.async );\n                    }\n\n                    // Apply custom fields if provided\n                    if ( s.xhrFields ) {\n                        for ( i in s.xhrFields ) {\n                            xhr[ i ] = s.xhrFields[ i ];\n                        }\n                    }\n\n                    // Override mime type if needed\n                    if ( s.mimeType && xhr.overrideMimeType ) {\n                        xhr.overrideMimeType( s.mimeType );\n                    }\n\n                    // X-Requested-With header\n                    // For cross-domain requests, seeing as conditions for a preflight are\n                    // akin to a jigsaw puzzle, we simply never set it to be sure.\n                    // (it can always be set on a per-request basis or even using ajaxSetup)\n                    // For same-domain requests, won't change header if already provided.\n                    if ( !s.crossDomain && !headers[\"X-Requested-With\"] ) {\n                        headers[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n                    }\n\n                    // Need an extra try/catch for cross domain requests in Firefox 3\n                    try {\n                        for ( i in headers ) {\n                            xhr.setRequestHeader( i, headers[ i ] );\n                        }\n                    } catch( _ ) {}\n\n                    // Do send the request\n                    // This may raise an exception which is actually\n                    // handled in jQuery.ajax (so no try/catch here)\n                    xhr.send( ( s.hasContent && s.data ) || null );\n\n                    // Listener\n                    callback = function( _, isAbort ) {\n\n                        var status,\n                            statusText,\n                            responseHeaders,\n                            responses,\n                            xml;\n\n                        // Firefox throws exceptions when accessing properties\n                        // of an xhr when a network error occurred\n                        // http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)\n                        try {\n\n                            // Was never called and is aborted or complete\n                            if ( callback && ( isAbort || xhr.readyState === 4 ) ) {\n\n                                // Only called once\n                                callback = undefined;\n\n                                // Do not keep as active anymore\n                                if ( handle ) {\n                                    xhr.onreadystatechange = jQuery.noop;\n                                    if ( xhrOnUnloadAbort ) {\n                                        delete xhrCallbacks[ handle ];\n                                    }\n                                }\n\n                                // If it's an abort\n                                if ( isAbort ) {\n                                    // Abort it manually if needed\n                                    if ( xhr.readyState !== 4 ) {\n                                        xhr.abort();\n                                    }\n                                } else {\n                                    status = xhr.status;\n                                    responseHeaders = xhr.getAllResponseHeaders();\n                                    responses = {};\n                                    xml = xhr.responseXML;\n\n                                    // Construct response list\n                                    if ( xml && xml.documentElement /* #4958 */ ) {\n                                        responses.xml = xml;\n                                    }\n\n                                    // When requesting binary data, IE6-9 will throw an exception\n                                    // on any attempt to access responseText (#11426)\n                                    try {\n                                        responses.text = xhr.responseText;\n                                    } catch( _ ) {\n                                    }\n\n                                    // Firefox throws an exception when accessing\n                                    // statusText for faulty cross-domain requests\n                                    try {\n                                        statusText = xhr.statusText;\n                                    } catch( e ) {\n                                        // We normalize with Webkit giving an empty statusText\n                                        statusText = \"\";\n                                    }\n\n                                    // Filter status for non standard behaviors\n\n                                    // If the request is local and we have data: assume a success\n                                    // (success with no data won't get notified, that's the best we\n                                    // can do given current implementations)\n                                    if ( !status && s.isLocal && !s.crossDomain ) {\n                                        status = responses.text ? 200 : 404;\n                                    // IE - #1450: sometimes returns 1223 when it should be 204\n                                    } else if ( status === 1223 ) {\n                                        status = 204;\n                                    }\n                                }\n                            }\n                        } catch( firefoxAccessException ) {\n                            if ( !isAbort ) {\n                                complete( -1, firefoxAccessException );\n                            }\n                        }\n\n                        // Call complete if needed\n                        if ( responses ) {\n                            complete( status, statusText, responses, responseHeaders );\n                        }\n                    };\n\n                    if ( !s.async ) {\n                        // if we're in sync mode we fire the callback\n                        callback();\n                    } else if ( xhr.readyState === 4 ) {\n                        // (IE6 & IE7) if it's in cache and has been\n                        // retrieved directly we need to fire the callback\n                        setTimeout( callback, 0 );\n                    } else {\n                        handle = ++xhrId;\n                        if ( xhrOnUnloadAbort ) {\n                            // Create the active xhrs callbacks list if needed\n                            // and attach the unload handler\n                            if ( !xhrCallbacks ) {\n                                xhrCallbacks = {};\n                                jQuery( window ).unload( xhrOnUnloadAbort );\n                            }\n                            // Add to list of active xhrs callbacks\n                            xhrCallbacks[ handle ] = callback;\n                        }\n                        xhr.onreadystatechange = callback;\n                    }\n                },\n\n                abort: function() {\n                    if ( callback ) {\n                        callback(0,1);\n                    }\n                }\n            };\n        }\n    });\n}\nvar fxNow, timerId,\n    rfxtypes = /^(?:toggle|show|hide)$/,\n    rfxnum = new RegExp( \"^(?:([-+])=|)(\" + core_pnum + \")([a-z%]*)$\", \"i\" ),\n    rrun = /queueHooks$/,\n    animationPrefilters = [ defaultPrefilter ],\n    tweeners = {\n        \"*\": [function( prop, value ) {\n            var end, unit,\n                tween = this.createTween( prop, value ),\n                parts = rfxnum.exec( value ),\n                target = tween.cur(),\n                start = +target || 0,\n                scale = 1,\n                maxIterations = 20;\n\n            if ( parts ) {\n                end = +parts[2];\n                unit = parts[3] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\n                // We need to compute starting value\n                if ( unit !== \"px\" && start ) {\n                    // Iteratively approximate from a nonzero starting point\n                    // Prefer the current property, because this process will be trivial if it uses the same units\n                    // Fallback to end or a simple constant\n                    start = jQuery.css( tween.elem, prop, true ) || end || 1;\n\n                    do {\n                        // If previous iteration zeroed out, double until we get *something*\n                        // Use a string for doubling factor so we don't accidentally see scale as unchanged below\n                        scale = scale || \".5\";\n\n                        // Adjust and apply\n                        start = start / scale;\n                        jQuery.style( tween.elem, prop, start + unit );\n\n                    // Update scale, tolerating zero or NaN from tween.cur()\n                    // And breaking the loop if scale is unchanged or perfect, or if we've just had enough\n                    } while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n                }\n\n                tween.unit = unit;\n                tween.start = start;\n                // If a +=/-= token was provided, we're doing a relative animation\n                tween.end = parts[1] ? start + ( parts[1] + 1 ) * end : end;\n            }\n            return tween;\n        }]\n    };\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n    setTimeout(function() {\n        fxNow = undefined;\n    }, 0 );\n    return ( fxNow = jQuery.now() );\n}\n\nfunction createTweens( animation, props ) {\n    jQuery.each( props, function( prop, value ) {\n        var collection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n            index = 0,\n            length = collection.length;\n        for ( ; index < length; index++ ) {\n            if ( collection[ index ].call( animation, prop, value ) ) {\n\n                // we're done with this property\n                return;\n            }\n        }\n    });\n}\n\nfunction Animation( elem, properties, options ) {\n    var result,\n        index = 0,\n        tweenerIndex = 0,\n        length = animationPrefilters.length,\n        deferred = jQuery.Deferred().always( function() {\n            // don't match elem in the :animated selector\n            delete tick.elem;\n        }),\n        tick = function() {\n            var currentTime = fxNow || createFxNow(),\n                remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n                percent = 1 - ( remaining / animation.duration || 0 ),\n                index = 0,\n                length = animation.tweens.length;\n\n            for ( ; index < length ; index++ ) {\n                animation.tweens[ index ].run( percent );\n            }\n\n            deferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n            if ( percent < 1 && length ) {\n                return remaining;\n            } else {\n                deferred.resolveWith( elem, [ animation ] );\n                return false;\n            }\n        },\n        animation = deferred.promise({\n            elem: elem,\n            props: jQuery.extend( {}, properties ),\n            opts: jQuery.extend( true, { specialEasing: {} }, options ),\n            originalProperties: properties,\n            originalOptions: options,\n            startTime: fxNow || createFxNow(),\n            duration: options.duration,\n            tweens: [],\n            createTween: function( prop, end, easing ) {\n                var tween = jQuery.Tween( elem, animation.opts, prop, end,\n                        animation.opts.specialEasing[ prop ] || animation.opts.easing );\n                animation.tweens.push( tween );\n                return tween;\n            },\n            stop: function( gotoEnd ) {\n                var index = 0,\n                    // if we are going to the end, we want to run all the tweens\n                    // otherwise we skip this part\n                    length = gotoEnd ? animation.tweens.length : 0;\n\n                for ( ; index < length ; index++ ) {\n                    animation.tweens[ index ].run( 1 );\n                }\n\n                // resolve when we played the last frame\n                // otherwise, reject\n                if ( gotoEnd ) {\n                    deferred.resolveWith( elem, [ animation, gotoEnd ] );\n                } else {\n                    deferred.rejectWith( elem, [ animation, gotoEnd ] );\n                }\n                return this;\n            }\n        }),\n        props = animation.props;\n\n    propFilter( props, animation.opts.specialEasing );\n\n    for ( ; index < length ; index++ ) {\n        result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n        if ( result ) {\n            return result;\n        }\n    }\n\n    createTweens( animation, props );\n\n    if ( jQuery.isFunction( animation.opts.start ) ) {\n        animation.opts.start.call( elem, animation );\n    }\n\n    jQuery.fx.timer(\n        jQuery.extend( tick, {\n            anim: animation,\n            queue: animation.opts.queue,\n            elem: elem\n        })\n    );\n\n    // attach callbacks from options\n    return animation.progress( animation.opts.progress )\n        .done( animation.opts.done, animation.opts.complete )\n        .fail( animation.opts.fail )\n        .always( animation.opts.always );\n}\n\nfunction propFilter( props, specialEasing ) {\n    var index, name, easing, value, hooks;\n\n    // camelCase, specialEasing and expand cssHook pass\n    for ( index in props ) {\n        name = jQuery.camelCase( index );\n        easing = specialEasing[ name ];\n        value = props[ index ];\n        if ( jQuery.isArray( value ) ) {\n            easing = value[ 1 ];\n            value = props[ index ] = value[ 0 ];\n        }\n\n        if ( index !== name ) {\n            props[ name ] = value;\n            delete props[ index ];\n        }\n\n        hooks = jQuery.cssHooks[ name ];\n        if ( hooks && \"expand\" in hooks ) {\n            value = hooks.expand( value );\n            delete props[ name ];\n\n            // not quite $.extend, this wont overwrite keys already present.\n            // also - reusing 'index' from above because we have the correct \"name\"\n            for ( index in value ) {\n                if ( !( index in props ) ) {\n                    props[ index ] = value[ index ];\n                    specialEasing[ index ] = easing;\n                }\n            }\n        } else {\n            specialEasing[ name ] = easing;\n        }\n    }\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n    tweener: function( props, callback ) {\n        if ( jQuery.isFunction( props ) ) {\n            callback = props;\n            props = [ \"*\" ];\n        } else {\n            props = props.split(\" \");\n        }\n\n        var prop,\n            index = 0,\n            length = props.length;\n\n        for ( ; index < length ; index++ ) {\n            prop = props[ index ];\n            tweeners[ prop ] = tweeners[ prop ] || [];\n            tweeners[ prop ].unshift( callback );\n        }\n    },\n\n    prefilter: function( callback, prepend ) {\n        if ( prepend ) {\n            animationPrefilters.unshift( callback );\n        } else {\n            animationPrefilters.push( callback );\n        }\n    }\n});\n\nfunction defaultPrefilter( elem, props, opts ) {\n    var index, prop, value, length, dataShow, tween, hooks, oldfire,\n        anim = this,\n        style = elem.style,\n        orig = {},\n        handled = [],\n        hidden = elem.nodeType && isHidden( elem );\n\n    // handle queue: false promises\n    if ( !opts.queue ) {\n        hooks = jQuery._queueHooks( elem, \"fx\" );\n        if ( hooks.unqueued == null ) {\n            hooks.unqueued = 0;\n            oldfire = hooks.empty.fire;\n            hooks.empty.fire = function() {\n                if ( !hooks.unqueued ) {\n                    oldfire();\n                }\n            };\n        }\n        hooks.unqueued++;\n\n        anim.always(function() {\n            // doing this makes sure that the complete handler will be called\n            // before this completes\n            anim.always(function() {\n                hooks.unqueued--;\n                if ( !jQuery.queue( elem, \"fx\" ).length ) {\n                    hooks.empty.fire();\n                }\n            });\n        });\n    }\n\n    // height/width overflow pass\n    if ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n        // Make sure that nothing sneaks out\n        // Record all 3 overflow attributes because IE does not\n        // change the overflow attribute when overflowX and\n        // overflowY are set to the same value\n        opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n        // Set display property to inline-block for height/width\n        // animations on inline elements that are having width/height animated\n        if ( jQuery.css( elem, \"display\" ) === \"inline\" &&\n                jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n            // inline-level elements accept inline-block;\n            // block-level elements need to be inline with layout\n            if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === \"inline\" ) {\n                style.display = \"inline-block\";\n\n            } else {\n                style.zoom = 1;\n            }\n        }\n    }\n\n    if ( opts.overflow ) {\n        style.overflow = \"hidden\";\n        if ( !jQuery.support.shrinkWrapBlocks ) {\n            anim.done(function() {\n                style.overflow = opts.overflow[ 0 ];\n                style.overflowX = opts.overflow[ 1 ];\n                style.overflowY = opts.overflow[ 2 ];\n            });\n        }\n    }\n\n\n    // show/hide pass\n    for ( index in props ) {\n        value = props[ index ];\n        if ( rfxtypes.exec( value ) ) {\n            delete props[ index ];\n            if ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n                continue;\n            }\n            handled.push( index );\n        }\n    }\n\n    length = handled.length;\n    if ( length ) {\n        dataShow = jQuery._data( elem, \"fxshow\" ) || jQuery._data( elem, \"fxshow\", {} );\n        if ( hidden ) {\n            jQuery( elem ).show();\n        } else {\n            anim.done(function() {\n                jQuery( elem ).hide();\n            });\n        }\n        anim.done(function() {\n            var prop;\n            jQuery.removeData( elem, \"fxshow\", true );\n            for ( prop in orig ) {\n                jQuery.style( elem, prop, orig[ prop ] );\n            }\n        });\n        for ( index = 0 ; index < length ; index++ ) {\n            prop = handled[ index ];\n            tween = anim.createTween( prop, hidden ? dataShow[ prop ] : 0 );\n            orig[ prop ] = dataShow[ prop ] || jQuery.style( elem, prop );\n\n            if ( !( prop in dataShow ) ) {\n                dataShow[ prop ] = tween.start;\n                if ( hidden ) {\n                    tween.end = tween.start;\n                    tween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n                }\n            }\n        }\n    }\n}\n\nfunction Tween( elem, options, prop, end, easing ) {\n    return new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n    constructor: Tween,\n    init: function( elem, options, prop, end, easing, unit ) {\n        this.elem = elem;\n        this.prop = prop;\n        this.easing = easing || \"swing\";\n        this.options = options;\n        this.start = this.now = this.cur();\n        this.end = end;\n        this.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n    },\n    cur: function() {\n        var hooks = Tween.propHooks[ this.prop ];\n\n        return hooks && hooks.get ?\n            hooks.get( this ) :\n            Tween.propHooks._default.get( this );\n    },\n    run: function( percent ) {\n        var eased,\n            hooks = Tween.propHooks[ this.prop ];\n\n        if ( this.options.duration ) {\n            this.pos = eased = jQuery.easing[ this.easing ](\n                percent, this.options.duration * percent, 0, 1, this.options.duration\n            );\n        } else {\n            this.pos = eased = percent;\n        }\n        this.now = ( this.end - this.start ) * eased + this.start;\n\n        if ( this.options.step ) {\n            this.options.step.call( this.elem, this.now, this );\n        }\n\n        if ( hooks && hooks.set ) {\n            hooks.set( this );\n        } else {\n            Tween.propHooks._default.set( this );\n        }\n        return this;\n    }\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n    _default: {\n        get: function( tween ) {\n            var result;\n\n            if ( tween.elem[ tween.prop ] != null &&\n                (!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n                return tween.elem[ tween.prop ];\n            }\n\n            // passing any value as a 4th parameter to .css will automatically\n            // attempt a parseFloat and fallback to a string if the parse fails\n            // so, simple values such as \"10px\" are parsed to Float.\n            // complex values such as \"rotate(1rad)\" are returned as is.\n            result = jQuery.css( tween.elem, tween.prop, false, \"\" );\n            // Empty strings, null, undefined and \"auto\" are converted to 0.\n            return !result || result === \"auto\" ? 0 : result;\n        },\n        set: function( tween ) {\n            // use step hook for back compat - use cssHook if its there - use .style if its\n            // available and use plain properties where available\n            if ( jQuery.fx.step[ tween.prop ] ) {\n                jQuery.fx.step[ tween.prop ]( tween );\n            } else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n                jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n            } else {\n                tween.elem[ tween.prop ] = tween.now;\n            }\n        }\n    }\n};\n\n// Remove in 2.0 - this supports IE8's panic based approach\n// to setting things on disconnected nodes\n\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function( tween ) {\n        if ( tween.elem.nodeType && tween.elem.parentNode ) {\n            tween.elem[ tween.prop ] = tween.now;\n        }\n    }\n};\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n    var cssFn = jQuery.fn[ name ];\n    jQuery.fn[ name ] = function( speed, easing, callback ) {\n        return speed == null || typeof speed === \"boolean\" ||\n            // special check for .toggle( handler, handler, ... )\n            ( !i && jQuery.isFunction( speed ) && jQuery.isFunction( easing ) ) ?\n            cssFn.apply( this, arguments ) :\n            this.animate( genFx( name, true ), speed, easing, callback );\n    };\n});\n\njQuery.fn.extend({\n    fadeTo: function( speed, to, easing, callback ) {\n\n        // show any hidden elements after setting opacity to 0\n        return this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n            // animate to the value specified\n            .end().animate({ opacity: to }, speed, easing, callback );\n    },\n    animate: function( prop, speed, easing, callback ) {\n        var empty = jQuery.isEmptyObject( prop ),\n            optall = jQuery.speed( speed, easing, callback ),\n            doAnimation = function() {\n                // Operate on a copy of prop so per-property easing won't be lost\n                var anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n                // Empty animations resolve immediately\n                if ( empty ) {\n                    anim.stop( true );\n                }\n            };\n\n        return empty || optall.queue === false ?\n            this.each( doAnimation ) :\n            this.queue( optall.queue, doAnimation );\n    },\n    stop: function( type, clearQueue, gotoEnd ) {\n        var stopQueue = function( hooks ) {\n            var stop = hooks.stop;\n            delete hooks.stop;\n            stop( gotoEnd );\n        };\n\n        if ( typeof type !== \"string\" ) {\n            gotoEnd = clearQueue;\n            clearQueue = type;\n            type = undefined;\n        }\n        if ( clearQueue && type !== false ) {\n            this.queue( type || \"fx\", [] );\n        }\n\n        return this.each(function() {\n            var dequeue = true,\n                index = type != null && type + \"queueHooks\",\n                timers = jQuery.timers,\n                data = jQuery._data( this );\n\n            if ( index ) {\n                if ( data[ index ] && data[ index ].stop ) {\n                    stopQueue( data[ index ] );\n                }\n            } else {\n                for ( index in data ) {\n                    if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n                        stopQueue( data[ index ] );\n                    }\n                }\n            }\n\n            for ( index = timers.length; index--; ) {\n                if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n                    timers[ index ].anim.stop( gotoEnd );\n                    dequeue = false;\n                    timers.splice( index, 1 );\n                }\n            }\n\n            // start the next in the queue if the last step wasn't forced\n            // timers currently will call their complete callbacks, which will dequeue\n            // but only if they were gotoEnd\n            if ( dequeue || !gotoEnd ) {\n                jQuery.dequeue( this, type );\n            }\n        });\n    }\n});\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n    var which,\n        attrs = { height: type },\n        i = 0;\n\n    // if we include width, step value is 1 to do all cssExpand values,\n    // if we don't include width, step value is 2 to skip over Left and Right\n    includeWidth = includeWidth? 1 : 0;\n    for( ; i < 4 ; i += 2 - includeWidth ) {\n        which = cssExpand[ i ];\n        attrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n    }\n\n    if ( includeWidth ) {\n        attrs.opacity = attrs.width = type;\n    }\n\n    return attrs;\n}\n\n// Generate shortcuts for custom animations\njQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: { opacity: \"show\" },\n    fadeOut: { opacity: \"hide\" },\n    fadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n    jQuery.fn[ name ] = function( speed, easing, callback ) {\n        return this.animate( props, speed, easing, callback );\n    };\n});\n\njQuery.speed = function( speed, easing, fn ) {\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n        complete: fn || !fn && easing ||\n            jQuery.isFunction( speed ) && speed,\n        duration: speed,\n        easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n    };\n\n    opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n        opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n    // normalize opt.queue - true/undefined/null -> \"fx\"\n    if ( opt.queue == null || opt.queue === true ) {\n        opt.queue = \"fx\";\n    }\n\n    // Queueing\n    opt.old = opt.complete;\n\n    opt.complete = function() {\n        if ( jQuery.isFunction( opt.old ) ) {\n            opt.old.call( this );\n        }\n\n        if ( opt.queue ) {\n            jQuery.dequeue( this, opt.queue );\n        }\n    };\n\n    return opt;\n};\n\njQuery.easing = {\n    linear: function( p ) {\n        return p;\n    },\n    swing: function( p ) {\n        return 0.5 - Math.cos( p*Math.PI ) / 2;\n    }\n};\n\njQuery.timers = [];\njQuery.fx = Tween.prototype.init;\njQuery.fx.tick = function() {\n    var timer,\n        timers = jQuery.timers,\n        i = 0;\n\n    for ( ; i < timers.length; i++ ) {\n        timer = timers[ i ];\n        // Checks the timer has not already been removed\n        if ( !timer() && timers[ i ] === timer ) {\n            timers.splice( i--, 1 );\n        }\n    }\n\n    if ( !timers.length ) {\n        jQuery.fx.stop();\n    }\n};\n\njQuery.fx.timer = function( timer ) {\n    if ( timer() && jQuery.timers.push( timer ) && !timerId ) {\n        timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n    }\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.stop = function() {\n    clearInterval( timerId );\n    timerId = null;\n};\n\njQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n};\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\nif ( jQuery.expr && jQuery.expr.filters ) {\n    jQuery.expr.filters.animated = function( elem ) {\n        return jQuery.grep(jQuery.timers, function( fn ) {\n            return elem === fn.elem;\n        }).length;\n    };\n}\nvar rroot = /^(?:body|html)$/i;\n\njQuery.fn.offset = function( options ) {\n    if ( arguments.length ) {\n        return options === undefined ?\n            this :\n            this.each(function( i ) {\n                jQuery.offset.setOffset( this, options, i );\n            });\n    }\n\n    var docElem, body, win, clientTop, clientLeft, scrollTop, scrollLeft,\n        box = { top: 0, left: 0 },\n        elem = this[ 0 ],\n        doc = elem && elem.ownerDocument;\n\n    if ( !doc ) {\n        return;\n    }\n\n    if ( (body = doc.body) === elem ) {\n        return jQuery.offset.bodyOffset( elem );\n    }\n\n    docElem = doc.documentElement;\n\n    // Make sure it's not a disconnected DOM node\n    if ( !jQuery.contains( docElem, elem ) ) {\n        return box;\n    }\n\n    // If we don't have gBCR, just use 0,0 rather than error\n    // BlackBerry 5, iOS 3 (original iPhone)\n    if ( typeof elem.getBoundingClientRect !== \"undefined\" ) {\n        box = elem.getBoundingClientRect();\n    }\n    win = getWindow( doc );\n    clientTop  = docElem.clientTop  || body.clientTop  || 0;\n    clientLeft = docElem.clientLeft || body.clientLeft || 0;\n    scrollTop  = win.pageYOffset || docElem.scrollTop;\n    scrollLeft = win.pageXOffset || docElem.scrollLeft;\n    return {\n        top: box.top  + scrollTop  - clientTop,\n        left: box.left + scrollLeft - clientLeft\n    };\n};\n\njQuery.offset = {\n\n    bodyOffset: function( body ) {\n        var top = body.offsetTop,\n            left = body.offsetLeft;\n\n        if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {\n            top  += parseFloat( jQuery.css(body, \"marginTop\") ) || 0;\n            left += parseFloat( jQuery.css(body, \"marginLeft\") ) || 0;\n        }\n\n        return { top: top, left: left };\n    },\n\n    setOffset: function( elem, options, i ) {\n        var position = jQuery.css( elem, \"position\" );\n\n        // set position first, in-case top/left are set even on static elem\n        if ( position === \"static\" ) {\n            elem.style.position = \"relative\";\n        }\n\n        var curElem = jQuery( elem ),\n            curOffset = curElem.offset(),\n            curCSSTop = jQuery.css( elem, \"top\" ),\n            curCSSLeft = jQuery.css( elem, \"left\" ),\n            calculatePosition = ( position === \"absolute\" || position === \"fixed\" ) && jQuery.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\n            props = {}, curPosition = {}, curTop, curLeft;\n\n        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\n        if ( calculatePosition ) {\n            curPosition = curElem.position();\n            curTop = curPosition.top;\n            curLeft = curPosition.left;\n        } else {\n            curTop = parseFloat( curCSSTop ) || 0;\n            curLeft = parseFloat( curCSSLeft ) || 0;\n        }\n\n        if ( jQuery.isFunction( options ) ) {\n            options = options.call( elem, i, curOffset );\n        }\n\n        if ( options.top != null ) {\n            props.top = ( options.top - curOffset.top ) + curTop;\n        }\n        if ( options.left != null ) {\n            props.left = ( options.left - curOffset.left ) + curLeft;\n        }\n\n        if ( \"using\" in options ) {\n            options.using.call( elem, props );\n        } else {\n            curElem.css( props );\n        }\n    }\n};\n\n\njQuery.fn.extend({\n\n    position: function() {\n        if ( !this[0] ) {\n            return;\n        }\n\n        var elem = this[0],\n\n        // Get *real* offsetParent\n        offsetParent = this.offsetParent(),\n\n        // Get correct offsets\n        offset       = this.offset(),\n        parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();\n\n        // Subtract element margins\n        // note: when an element has margin: auto the offsetLeft and marginLeft\n        // are the same in Safari causing offset.left to incorrectly be 0\n        offset.top  -= parseFloat( jQuery.css(elem, \"marginTop\") ) || 0;\n        offset.left -= parseFloat( jQuery.css(elem, \"marginLeft\") ) || 0;\n\n        // Add offsetParent borders\n        parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], \"borderTopWidth\") ) || 0;\n        parentOffset.left += parseFloat( jQuery.css(offsetParent[0], \"borderLeftWidth\") ) || 0;\n\n        // Subtract the two offsets\n        return {\n            top:  offset.top  - parentOffset.top,\n            left: offset.left - parentOffset.left\n        };\n    },\n\n    offsetParent: function() {\n        return this.map(function() {\n            var offsetParent = this.offsetParent || document.body;\n            while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, \"position\") === \"static\") ) {\n                offsetParent = offsetParent.offsetParent;\n            }\n            return offsetParent || document.body;\n        });\n    }\n});\n\n\n// Create scrollLeft and scrollTop methods\njQuery.each( {scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\"}, function( method, prop ) {\n    var top = /Y/.test( prop );\n\n    jQuery.fn[ method ] = function( val ) {\n        return jQuery.access( this, function( elem, method, val ) {\n            var win = getWindow( elem );\n\n            if ( val === undefined ) {\n                return win ? (prop in win) ? win[ prop ] :\n                    win.document.documentElement[ method ] :\n                    elem[ method ];\n            }\n\n            if ( win ) {\n                win.scrollTo(\n                    !top ? val : jQuery( win ).scrollLeft(),\n                     top ? val : jQuery( win ).scrollTop()\n                );\n\n            } else {\n                elem[ method ] = val;\n            }\n        }, method, val, arguments.length, null );\n    };\n});\n\nfunction getWindow( elem ) {\n    return jQuery.isWindow( elem ) ?\n        elem :\n        elem.nodeType === 9 ?\n            elem.defaultView || elem.parentWindow :\n            false;\n}\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n    jQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n        // margin is only for outerHeight, outerWidth\n        jQuery.fn[ funcName ] = function( margin, value ) {\n            var chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n                extra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n            return jQuery.access( this, function( elem, type, value ) {\n                var doc;\n\n                if ( jQuery.isWindow( elem ) ) {\n                    // As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n                    // isn't a whole lot we can do. See pull request at this URL for discussion:\n                    // https://github.com/jquery/jquery/pull/764\n                    return elem.document.documentElement[ \"client\" + name ];\n                }\n\n                // Get document width or height\n                if ( elem.nodeType === 9 ) {\n                    doc = elem.documentElement;\n\n                    // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest\n                    // unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.\n                    return Math.max(\n                        elem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n                        elem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n                        doc[ \"client\" + name ]\n                    );\n                }\n\n                return value === undefined ?\n                    // Get width or height on the element, requesting but not forcing parseFloat\n                    jQuery.css( elem, type, value, extra ) :\n\n                    // Set width or height on the element\n                    jQuery.style( elem, type, value, extra );\n            }, type, chainable ? margin : undefined, chainable, null );\n        };\n    });\n});\n// Expose jQuery to the global object\nwindow.jQuery = window.$ = jQuery;\n\n// Expose jQuery as an AMD module, but only for AMD loaders that\n// understand the issues with loading multiple versions of jQuery\n// in a page that all might call define(). The loader will indicate\n// they have special allowances for multiple jQuery versions by\n// specifying define.amd.jQuery = true. Register as a named module,\n// since jQuery can be concatenated with other files that may use define,\n// but not use a proper concatenation script that understands anonymous\n// AMD modules. A named AMD is safest and most robust way to register.\n// Lowercase jquery is used because AMD module names are derived from\n// file names, and jQuery is normally delivered in a lowercase file name.\n// Do this after creating the global so that if an AMD module wants to call\n// noConflict to hide this version of jQuery, it will work.\nif ( typeof define === \"function\" && define.amd && define.amd.jQuery ) {\n    define( \"jquery\", [], function () { return jQuery; } );\n}\n\n})( window );\n","/*!\n * Lo-Dash v0.9.1 <http://lodash.com>\n * (c) 2012 John-David Dalton <http://allyoucanleet.com/>\n * Based on Underscore.js 1.4.2 <http://underscorejs.org>\n * (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.\n * Available under MIT license <http://lodash.com/license>\n */\n;(function(window, undefined) {\n\n  /** Detect free variable `exports` */\n  var freeExports = typeof exports == 'object' && exports;\n\n  /** Detect free variable `global` and use it as `window` */\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    window = freeGlobal;\n  }\n\n  /** Used for array and object method references */\n  var arrayRef = [],\n      objectRef = {};\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used internally to indicate various things */\n  var indicatorObject = {};\n\n  /** Used by `cachedContains` as the default size when optimizations are enabled for large arrays */\n  var largeArraySize = 30;\n\n  /** Used to restore the original `_` reference in `noConflict` */\n  var oldDash = window._;\n\n  /** Used to detect delimiter values that should be processed by `tokenizeEvaluate` */\n  var reComplexDelimiter = /[-?+=!~*%&^<>|{(\\/]|\\[\\D|\\b(?:delete|in|instanceof|new|typeof|void)\\b/;\n\n  /** Used to match HTML entities */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#x27);/g;\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to insert the data object variable into compiled template source */\n  var reInsertVariable = /(?:__e|__t = )\\(\\s*(?![\\d\\s\"']|this\\.)/g;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' +\n    (objectRef.valueOf + '')\n      .replace(/[.*+?^=!:${}()|[\\]\\/\\\\]/g, '\\\\$&')\n      .replace(/valueOf|for [^\\]]+/g, '.+?') + '$'\n  );\n\n  /** Used to ensure capturing order and avoid matches for undefined delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to match HTML characters */\n  var reUnescapedHtml = /[&<>\"']/g;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to fix the JScript [[DontEnum]] bug */\n  var shadowed = [\n    'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n    'toLocaleString', 'toString', 'valueOf'\n  ];\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** Native method shortcuts */\n  var ceil = Math.ceil,\n      concat = arrayRef.concat,\n      floor = Math.floor,\n      getPrototypeOf = reNative.test(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n      hasOwnProperty = objectRef.hasOwnProperty,\n      push = arrayRef.push,\n      propertyIsEnumerable = objectRef.propertyIsEnumerable,\n      slice = arrayRef.slice,\n      toString = objectRef.toString;\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeBind = reNative.test(nativeBind = slice.bind) && nativeBind,\n      nativeIsArray = reNative.test(nativeIsArray = Array.isArray) && nativeIsArray,\n      nativeIsFinite = window.isFinite,\n      nativeIsNaN = window.isNaN,\n      nativeKeys = reNative.test(nativeKeys = Object.keys) && nativeKeys,\n      nativeMax = Math.max,\n      nativeMin = Math.min,\n      nativeRandom = Math.random;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /**\n   * Detect the JScript [[DontEnum]] bug:\n   *\n   * In IE < 9 an objects own properties, shadowing non-enumerable ones, are\n   * made non-enumerable as well.\n   */\n  var hasDontEnumBug;\n\n  /** Detect if own properties are iterated after inherited properties (IE < 9) */\n  var iteratesOwnLast;\n\n  /**\n   * Detect if `Array#shift` and `Array#splice` augment array-like objects\n   * incorrectly:\n   *\n   * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`\n   * and `splice()` functions that fail to remove the last element, `value[0]`,\n   * of array-like objects even though the `length` property is set to `0`.\n   * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`\n   * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.\n   */\n  var hasObjectSpliceBug = (hasObjectSpliceBug = { '0': 1, 'length': 1 },\n    arrayRef.splice.call(hasObjectSpliceBug, 0, 1), hasObjectSpliceBug[0]);\n\n  /** Detect if an `arguments` object's indexes are non-enumerable (IE < 9) */\n  var noArgsEnum = true;\n\n  (function() {\n    var props = [];\n    function ctor() { this.x = 1; }\n    ctor.prototype = { 'valueOf': 1, 'y': 1 };\n    for (var prop in new ctor) { props.push(prop); }\n    for (prop in arguments) { noArgsEnum = !prop; }\n\n    hasDontEnumBug = !/valueOf/.test(props);\n    iteratesOwnLast = props[0] != 'x';\n  }(1));\n\n  /** Detect if an `arguments` object's [[Class]] is unresolvable (Firefox < 4, IE < 9) */\n  var noArgsClass = !isArguments(arguments);\n\n  /** Detect if `Array#slice` cannot be used to convert strings to arrays (Opera < 10.52) */\n  var noArraySliceOnStrings = slice.call('x')[0] != 'x';\n\n  /**\n   * Detect lack of support for accessing string characters by index:\n   *\n   * IE < 8 can't access characters by index and IE 8 can only access\n   * characters by index on string literals.\n   */\n  var noCharByIndex = ('x'[0] + Object('x')[0]) != 'xx';\n\n  /**\n   * Detect if a node's [[Class]] is unresolvable (IE < 9)\n   * and that the JS engine won't error when attempting to coerce an object to\n   * a string without a `toString` property value of `typeof` \"function\".\n  try {\n    var noNodeClass = ({ 'toString': 0 } + '', toString.call(window.document || 0) == objectClass);\n  } catch(e) { }\n   */\n\n  /* Detect if `Function#bind` exists and is inferred to be fast (all but V8) */\n  var isBindFast = nativeBind && /\\n|Opera/.test(nativeBind + toString.call(window.opera));\n\n  /* Detect if `Object.keys` exists and is inferred to be fast (IE, Opera, V8) */\n  var isKeysFast = nativeKeys && /^.+$|true/.test(nativeKeys + !!window.attachEvent);\n\n  /**\n   * Detect if sourceURL syntax is usable without erroring:\n   *\n   * The JS engine in Adobe products, like InDesign, will throw a syntax error\n   * when it encounters a single line comment beginning with the `@` symbol.\n   *\n   * The JS engine in Narwhal will generate the function `function anonymous(){//}`\n   * and throw a syntax error.\n   *\n   * Avoid comments beginning `@` symbols in IE because they are part of its\n   * non-standard conditional compilation support.\n   * http://msdn.microsoft.com/en-us/library/121hztk3(v=vs.94).aspx\n   */\n  try {\n    var useSourceURL = (Function('//@')(), !window.attachEvent);\n  } catch(e) { }\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[argsClass] = cloneableClasses[funcClass] = false;\n  cloneableClasses[arrayClass] = cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] = cloneableClasses[regexpClass] =\n  cloneableClasses[stringClass] = true;\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The `lodash` function.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {Mixed} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   */\n  function lodash(value) {\n    // exit early if already wrapped\n    if (value && value.__wrapped__) {\n      return value;\n    }\n    // allow invoking `lodash` without the `new` operator\n    if (!(this instanceof lodash)) {\n      return new lodash(value);\n    }\n    this.__wrapped__ = value;\n  }\n\n  /**\n   * By default, the template delimiters used by Lo-Dash are similar to those in\n   * embedded Ruby (ERB). Change the following template settings to use alternative\n   * delimiters.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  lodash.templateSettings = {\n\n    /**\n     * Used to detect `data` property values to be HTML-escaped.\n     *\n     * @static\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'escape': /<%-([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to detect code to be evaluated.\n     *\n     * @static\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'evaluate': /<%([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to detect `data` property values to inject.\n     *\n     * @static\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'interpolate': /<%=([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to reference the data object in the template text.\n     *\n     * @static\n     * @memberOf _.templateSettings\n     * @type String\n     */\n    'variable': ''\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The template used to create iterator functions.\n   *\n   * @private\n   * @param {Obect} data The data object used to populate the text.\n   * @returns {String} Returns the interpolated text.\n   */\n  var iteratorTemplate = template(\n    // conditional strict mode\n    '<% if (obj.useStrict) { %>\\'use strict\\';\\n<% } %>' +\n\n    // the `iteratee` may be reassigned by the `top` snippet\n    'var index, value, iteratee = <%= firstArg %>, ' +\n    // assign the `result` variable an initial value\n    'result = <%= firstArg %>;\\n' +\n    // exit early if the first argument is falsey\n    'if (!<%= firstArg %>) return result;\\n' +\n    // add code before the iteration branches\n    '<%= top %>;\\n' +\n\n    // array-like iteration:\n    '<% if (arrayLoop) { %>' +\n    'var length = iteratee.length; index = -1;\\n' +\n    'if (typeof length == \\'number\\') {' +\n\n    // add support for accessing string characters by index if needed\n    '  <% if (noCharByIndex) { %>\\n' +\n    '  if (toString.call(iteratee) == stringClass) {\\n' +\n    '    iteratee = iteratee.split(\\'\\')\\n' +\n    '  }' +\n    '  <% } %>\\n' +\n\n    // iterate over the array-like value\n    '  while (++index < length) {\\n' +\n    '    value = iteratee[index];\\n' +\n    '    <%= arrayLoop %>\\n' +\n    '  }\\n' +\n    '}\\n' +\n    'else {' +\n\n    // object iteration:\n    // add support for iterating over `arguments` objects if needed\n    '  <%  } else if (noArgsEnum) { %>\\n' +\n    '  var length = iteratee.length; index = -1;\\n' +\n    '  if (length && isArguments(iteratee)) {\\n' +\n    '    while (++index < length) {\\n' +\n    '      value = iteratee[index += \\'\\'];\\n' +\n    '      <%= objectLoop %>\\n' +\n    '    }\\n' +\n    '  } else {' +\n    '  <% } %>' +\n\n    // Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n    // (if the prototype or a property on the prototype has been set)\n    // incorrectly sets a function's `prototype` property [[Enumerable]]\n    // value to `true`. Because of this Lo-Dash standardizes on skipping\n    // the the `prototype` property of functions regardless of its\n    // [[Enumerable]] value.\n    '  <% if (!hasDontEnumBug) { %>\\n' +\n    '  var skipProto = typeof iteratee == \\'function\\' && \\n' +\n    '    propertyIsEnumerable.call(iteratee, \\'prototype\\');\\n' +\n    '  <% } %>' +\n\n    // iterate own properties using `Object.keys` if it's fast\n    '  <% if (isKeysFast && useHas) { %>\\n' +\n    '  var ownIndex = -1,\\n' +\n    '      ownProps = objectTypes[typeof iteratee] ? nativeKeys(iteratee) : [],\\n' +\n    '      length = ownProps.length;\\n\\n' +\n    '  while (++ownIndex < length) {\\n' +\n    '    index = ownProps[ownIndex];\\n' +\n    '    <% if (!hasDontEnumBug) { %>if (!(skipProto && index == \\'prototype\\')) {\\n  <% } %>' +\n    '    value = iteratee[index];\\n' +\n    '    <%= objectLoop %>\\n' +\n    '    <% if (!hasDontEnumBug) { %>}\\n<% } %>' +\n    '  }' +\n\n    // else using a for-in loop\n    '  <% } else { %>\\n' +\n    '  for (index in iteratee) {<%' +\n    '    if (!hasDontEnumBug || useHas) { %>\\n    if (<%' +\n    '      if (!hasDontEnumBug) { %>!(skipProto && index == \\'prototype\\')<% }' +\n    '      if (!hasDontEnumBug && useHas) { %> && <% }' +\n    '      if (useHas) { %>hasOwnProperty.call(iteratee, index)<% }' +\n    '    %>) {' +\n    '    <% } %>\\n' +\n    '    value = iteratee[index];\\n' +\n    '    <%= objectLoop %>;' +\n    '    <% if (!hasDontEnumBug || useHas) { %>\\n    }<% } %>\\n' +\n    '  }' +\n    '  <% } %>' +\n\n    // Because IE < 9 can't set the `[[Enumerable]]` attribute of an\n    // existing property and the `constructor` property of a prototype\n    // defaults to non-enumerable, Lo-Dash skips the `constructor`\n    // property when it infers it's iterating over a `prototype` object.\n    '  <% if (hasDontEnumBug) { %>\\n\\n' +\n    '  var ctor = iteratee.constructor;\\n' +\n    '    <% for (var k = 0; k < 7; k++) { %>\\n' +\n    '  index = \\'<%= shadowed[k] %>\\';\\n' +\n    '  if (<%' +\n    '      if (shadowed[k] == \\'constructor\\') {' +\n    '        %>!(ctor && ctor.prototype === iteratee) && <%' +\n    '      } %>hasOwnProperty.call(iteratee, index)) {\\n' +\n    '    value = iteratee[index];\\n' +\n    '    <%= objectLoop %>\\n' +\n    '  }' +\n    '    <% } %>' +\n    '  <% } %>' +\n    '  <% if (arrayLoop || noArgsEnum) { %>\\n}<% } %>\\n' +\n\n    // add code to the bottom of the iteration function\n    '<%= bottom %>;\\n' +\n    // finally, return the `result`\n    'return result'\n  );\n\n  /**\n   * Reusable iterator options shared by `forEach`, `forIn`, and `forOwn`.\n   */\n  var forEachIteratorOptions = {\n    'args': 'collection, callback, thisArg',\n    'top': 'callback = createCallback(callback, thisArg)',\n    'arrayLoop': 'if (callback(value, index, collection) === false) return result',\n    'objectLoop': 'if (callback(value, index, collection) === false) return result'\n  };\n\n  /** Reusable iterator options for `defaults`, and `extend` */\n  var extendIteratorOptions = {\n    'useHas': false,\n    'args': 'object',\n    'top':\n      'for (var argsIndex = 1, argsLength = arguments.length; argsIndex < argsLength; argsIndex++) {\\n' +\n      '  if (iteratee = arguments[argsIndex]) {',\n    'objectLoop': 'result[index] = value',\n    'bottom': '  }\\n}'\n  };\n\n  /** Reusable iterator options for `forIn` and `forOwn` */\n  var forOwnIteratorOptions = {\n    'arrayLoop': null\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function optimized for searching large arrays for a given `value`,\n   * starting at `fromIndex`, using strict equality for comparisons, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Number} [fromIndex=0] The index to start searching from.\n   * @param {Number} [largeSize=30] The length at which an array is considered large.\n   * @returns {Boolean} Returns `true` if `value` is found, else `false`.\n   */\n  function cachedContains(array, fromIndex, largeSize) {\n    fromIndex || (fromIndex = 0);\n\n    var length = array.length,\n        isLarge = (length - fromIndex) >= (largeSize || largeArraySize),\n        cache = isLarge ? {} : array;\n\n    if (isLarge) {\n      // init value cache\n      var index = fromIndex - 1;\n      while (++index < length) {\n        // manually coerce `value` to string because `hasOwnProperty`, in some\n        // older versions of Firefox, coerces objects incorrectly\n        var key = array[index] + '';\n        (hasOwnProperty.call(cache, key) ? cache[key] : (cache[key] = [])).push(array[index]);\n      }\n    }\n    return function(value) {\n      if (isLarge) {\n        var key = value + '';\n        return hasOwnProperty.call(cache, key) && indexOf(cache[key], value) > -1;\n      }\n      return indexOf(cache, value, fromIndex) > -1;\n    }\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` values, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {Number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ai = a.index,\n        bi = b.index;\n\n    a = a.criteria;\n    b = b.criteria;\n\n    // ensure a stable sort in V8 and other engines\n    // http://code.google.com/p/v8/issues/detail?id=90\n    if (a !== b) {\n      if (a > b || a === undefined) {\n        return 1;\n      }\n      if (a < b || b === undefined) {\n        return -1;\n      }\n    }\n    return ai < bi ? -1 : 1;\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any `partailArgs` to the arguments passed\n   * to the bound function.\n   *\n   * @private\n   * @param {Function|String} func The function to bind or the method name.\n   * @param {Mixed} [thisArg] The `this` binding of `func`.\n   * @param {Array} partialArgs An array of arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   */\n  function createBound(func, thisArg, partialArgs) {\n    var isFunc = isFunction(func),\n        isPartial = !partialArgs,\n        methodName = func;\n\n    // juggle arguments\n    if (isPartial) {\n      partialArgs = thisArg;\n    }\n\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.com/#x15.3.4.5\n      var args = arguments,\n          thisBinding = isPartial ? this : thisArg;\n\n      if (!isFunc) {\n        func = thisArg[methodName];\n      }\n      if (partialArgs.length) {\n        args = args.length\n          ? partialArgs.concat(slice.call(args))\n          : partialArgs;\n      }\n      if (this instanceof bound) {\n        // get `func` instance if `bound` is invoked in a `new` expression\n        noop.prototype = func.prototype;\n        thisBinding = new noop;\n\n        // mimic the constructor's `return` behavior\n        // http://es5.github.com/#x13.2.2\n        var result = func.apply(thisBinding, args);\n        return result && objectTypes[typeof result]\n          ? result\n          : thisBinding\n      }\n      return func.apply(thisBinding, args);\n    }\n    return bound;\n  }\n\n  /**\n   * Produces an iteration callback bound to an optional `thisArg`. If `func` is\n   * a property name, the callback will return the property value for a given element.\n   *\n   * @private\n   * @param {Function|String} [func=identity|property] The function called per\n   * iteration or property name to query.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Function} Returns a callback function.\n   */\n  function createCallback(func, thisArg) {\n    if (!func) {\n      return identity;\n    }\n    if (typeof func != 'function') {\n      return function(object) {\n        return object[func];\n      };\n    }\n    if (thisArg !== undefined) {\n      return function(value, index, object) {\n        return func.call(thisArg, value, index, object);\n      };\n    }\n    return func;\n  }\n\n  /**\n   * Creates compiled iteration functions.\n   *\n   * @private\n   * @param {Object} [options1, options2, ...] The compile options object(s).\n   *  useHas - A boolean to specify using `hasOwnProperty` checks in the object loop.\n   *  args - A string of comma separated arguments the iteration function will accept.\n   *  top - A string of code to execute before the iteration branches.\n   *  arrayLoop - A string of code to execute in the array loop.\n   *  objectLoop - A string of code to execute in the object loop.\n   *  bottom - A string of code to execute after the iteration branches.\n   *\n   * @returns {Function} Returns the compiled function.\n   */\n  function createIterator() {\n    var data = {\n      'arrayLoop': '',\n      'bottom': '',\n      'hasDontEnumBug': hasDontEnumBug,\n      'isKeysFast': isKeysFast,\n      'objectLoop': '',\n      'noArgsEnum': noArgsEnum,\n      'noCharByIndex': noCharByIndex,\n      'shadowed': shadowed,\n      'top': '',\n      'useHas': true\n    };\n\n    // merge options into a template data object\n    for (var object, index = 0; object = arguments[index]; index++) {\n      for (var key in object) {\n        data[key] = object[key];\n      }\n    }\n    var args = data.args;\n    data.firstArg = /^[^,]+/.exec(args)[0];\n\n    // create the function factory\n    var factory = Function(\n        'createCallback, hasOwnProperty, isArguments, objectTypes, nativeKeys, ' +\n        'propertyIsEnumerable, stringClass, toString',\n      'return function(' + args + ') {\\n' + iteratorTemplate(data) + '\\n}'\n    );\n    // return the compiled function\n    return factory(\n      createCallback, hasOwnProperty, isArguments, objectTypes, nativeKeys,\n      propertyIsEnumerable, stringClass, toString\n    );\n  }\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {String} match The matched character to escape.\n   * @returns {String} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Used by `escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {String} match The matched character to escape.\n   * @returns {String} Returns the escaped character.\n   */\n  function escapeHtmlChar(match) {\n    return htmlEscapes[match];\n  }\n\n  /**\n   * A no-operation function.\n   *\n   * @private\n   */\n  function noop() {\n    // no operation performed\n  }\n\n  /**\n   * Used by `unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {String} match The matched character to unescape.\n   * @returns {String} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(match) {\n    return htmlUnescapes[match];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return toString.call(value) == argsClass;\n  }\n  // fallback for browsers that can't detect `arguments` objects by [[Class]]\n  if (noArgsClass) {\n    isArguments = function(value) {\n      return value ? hasOwnProperty.call(value, 'callee') : false;\n    };\n  }\n\n  /**\n   * Iterates over `object`'s own and inherited enumerable properties, executing\n   * the `callback` for each property. The `callback` is bound to `thisArg` and\n   * invoked with three arguments; (value, key, object). Callbacks may exit iteration\n   * early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Dog(name) {\n   *   this.name = name;\n   * }\n   *\n   * Dog.prototype.bark = function() {\n   *   alert('Woof, woof!');\n   * };\n   *\n   * _.forIn(new Dog('Dagny'), function(value, key) {\n   *   alert(key);\n   * });\n   * // => alerts 'name' and 'bark' (order is not guaranteed)\n   */\n  var forIn = createIterator(forEachIteratorOptions, forOwnIteratorOptions, {\n    'useHas': false\n  });\n\n  /**\n   * Iterates over `object`'s own enumerable properties, executing the `callback`\n   * for each property. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by explicitly\n   * returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   alert(key);\n   * });\n   * // => alerts '0', '1', and 'length' (order is not guaranteed)\n   */\n  var forOwn = createIterator(forEachIteratorOptions, forOwnIteratorOptions);\n\n  /**\n   * A fallback implementation of `isPlainObject` that checks if a given `value`\n   * is an object created by the `Object` constructor, assuming objects created\n   * by the `Object` constructor have no inherited enumerable properties and that\n   * there are no `Object.prototype` extensions.\n   *\n   * @private\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if `value` is a plain object, else `false`.\n   */\n  function shimIsPlainObject(value) {\n    // avoid non-objects and false positives for `arguments` objects\n    var result = false;\n    if (!(value && typeof value == 'object') || isArguments(value)) {\n      return result;\n    }\n    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`\n    // methods that are `typeof` \"string\" and still can coerce nodes to strings.\n    // Also check that the constructor is `Object` (i.e. `Object instanceof Object`)\n    var ctor = value.constructor;\n    if ((!noNodeClass || !(typeof value.toString != 'function' && typeof (value + '') == 'string')) &&\n        (!isFunction(ctor) || ctor instanceof ctor)) {\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      if (iteratesOwnLast) {\n        forIn(value, function(value, key, object) {\n          result = !hasOwnProperty.call(object, key);\n          return false;\n        });\n        return result === false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return result === false || hasOwnProperty.call(value, result);\n    }\n    return result;\n  }\n\n  /**\n   * A fallback implementation of `Object.keys` that produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names.\n   */\n  function shimKeys(object) {\n    var result = [];\n    forOwn(object, function(value, key) {\n      result.push(key);\n    });\n    return result;\n  }\n\n  /**\n   * Used to convert characters to HTML entities:\n   *\n   * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n   * don't require escaping in HTML and have no special meaning unless they're part\n   * of a tag or an unquoted attribute value.\n   * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n   */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;'\n  };\n\n  /** Used to convert HTML entities to characters */\n  var htmlUnescapes = invert(htmlEscapes);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a clone of `value`. If `deep` is `true`, all nested objects will\n   * also be cloned otherwise they will be assigned by reference. Functions, DOM\n   * nodes, `arguments` objects, and objects created by constructors other than\n   * `Object` are **not** cloned.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to clone.\n   * @param {Boolean} deep A flag to indicate a deep clone.\n   * @param- {Object} [guard] Internally used to allow this method to work with\n   *  others like `_.map` without using their callback `index` argument for `deep`.\n   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.\n   * @param- {Array} [stackB=[]] Internally used to associate clones with their\n   *  source counterparts.\n   * @returns {Mixed} Returns the cloned `value`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 },\n   *   { 'name': 'curly', 'age': 60 }\n   * ];\n   *\n   * _.clone({ 'name': 'moe' });\n   * // => { 'name': 'moe' }\n   *\n   * var shallow = _.clone(stooges);\n   * shallow[0] === stooges[0];\n   * // => true\n   *\n   * var deep = _.clone(stooges, true);\n   * shallow[0] === stooges[0];\n   * // => false\n   */\n  function clone(value, deep, guard, stackA, stackB) {\n    if (value == null) {\n      return value;\n    }\n    if (guard) {\n      deep = false;\n    }\n    // inspect [[Class]]\n    var isObj = objectTypes[typeof value];\n    if (isObj) {\n      // don't clone `arguments` objects, functions, or non-object Objects\n      var className = toString.call(value);\n      if (!cloneableClasses[className] || (noArgsClass && isArguments(value))) {\n        return value;\n      }\n      var isArr = className == arrayClass;\n      isObj = isArr || (className == objectClass ? isPlainObject(value) : isObj);\n    }\n    // shallow clone\n    if (!isObj || !deep) {\n      // don't clone functions\n      return isObj\n        ? (isArr ? slice.call(value) : extend({}, value))\n        : value;\n    }\n\n    var ctor = value.constructor;\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        return new ctor(+value);\n\n      case numberClass:\n      case stringClass:\n        return new ctor(value);\n\n      case regexpClass:\n        return ctor(value.source, reFlags.exec(value));\n    }\n    // check for circular references and return corresponding clone\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == value) {\n        return stackB[length];\n      }\n    }\n    // init cloned object\n    var result = isArr ? ctor(value.length) : {};\n\n    // add the source value to the stack of traversed objects\n    // and associate it with its clone\n    stackA.push(value);\n    stackB.push(result);\n\n    // recursively populate clone (susceptible to call stack limits)\n    (isArr ? forEach : forOwn)(value, function(objValue, key) {\n      result[key] = clone(objValue, deep, null, stackA, stackB);\n    });\n\n    return result;\n  }\n\n  /**\n   * Assigns enumerable properties of the default object(s) to the `destination`\n   * object for all `destination` properties that resolve to `null`/`undefined`.\n   * Once a property is set, additional defaults of the same property will be\n   * ignored.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [default1, default2, ...] The default objects.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var iceCream = { 'flavor': 'chocolate' };\n   * _.defaults(iceCream, { 'flavor': 'vanilla', 'sprinkles': 'rainbow' });\n   * // => { 'flavor': 'chocolate', 'sprinkles': 'rainbow' }\n   */\n  var defaults = createIterator(extendIteratorOptions, {\n    'objectLoop': 'if (result[index] == null) ' + extendIteratorOptions.objectLoop\n  });\n\n  /**\n   * Assigns enumerable properties of the source object(s) to the `destination`\n   * object. Subsequent sources will overwrite propery assignments of previous\n   * sources.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.extend({ 'name': 'moe' }, { 'age': 40 });\n   * // => { 'name': 'moe', 'age': 40 }\n   */\n  var extend = createIterator(extendIteratorOptions);\n\n  /**\n   * Creates a sorted array of all enumerable properties, own and inherited,\n   * of `object` that have function values.\n   *\n   * @static\n   * @memberOf _\n   * @alias methods\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names that have function values.\n   * @example\n   *\n   * _.functions(_);\n   * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n   */\n  function functions(object) {\n    var result = [];\n    forIn(object, function(value, key) {\n      if (isFunction(value)) {\n        result.push(key);\n      }\n    });\n    return result.sort();\n  }\n\n  /**\n   * Checks if the specified object `property` exists and is a direct property,\n   * instead of an inherited property.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to check.\n   * @param {String} property The property to check for.\n   * @returns {Boolean} Returns `true` if key is a direct property, else `false`.\n   * @example\n   *\n   * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n   * // => true\n   */\n  function has(object, property) {\n    return object ? hasOwnProperty.call(object, property) : false;\n  }\n\n  /**\n   * Creates an object composed of the inverted keys and values of the given `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to invert.\n   * @returns {Object} Returns the created inverted object.\n   * @example\n   *\n   *  _.invert({ 'first': 'Moe', 'second': 'Larry', 'third': 'Curly' });\n   * // => { 'Moe': 'first', 'Larry': 'second', 'Curly': 'third' } (order is not guaranteed)\n   */\n  function invert(object) {\n    var result = {};\n    forOwn(object, function(value, key) {\n      result[value] = key;\n    });\n    return result;\n  }\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function(value) {\n    return toString.call(value) == arrayClass;\n  };\n\n  /**\n   * Checks if `value` is a boolean (`true` or `false`) value.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a boolean value, else `false`.\n   * @example\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false || toString.call(value) == boolClass;\n  }\n\n  /**\n   * Checks if `value` is a date.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a date, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   */\n  function isDate(value) {\n    return toString.call(value) == dateClass;\n  }\n\n  /**\n   * Checks if `value` is a DOM element.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a DOM element, else `false`.\n   * @example\n   *\n   * _.isElement(document.body);\n   * // => true\n   */\n  function isElement(value) {\n    return value ? value.nodeType === 1 : false;\n  }\n\n  /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|String} value The value to inspect.\n   * @returns {Boolean} Returns `true` if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */\n  function isEmpty(value) {\n    var result = true;\n    if (!value) {\n      return result;\n    }\n    var className = toString.call(value),\n        length = value.length;\n\n    if ((className == arrayClass || className == stringClass ||\n        className == argsClass || (noArgsClass && isArguments(value))) ||\n        (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n      return !length;\n    }\n    forOwn(value, function() {\n      return (result = false);\n    });\n    return result;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent to each other.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} a The value to compare.\n   * @param {Mixed} b The other value to compare.\n   * @param- {Object} [stackA=[]] Internally used track traversed `a` objects.\n   * @param- {Object} [stackB=[]] Internally used track traversed `b` objects.\n   * @returns {Boolean} Returns `true` if the values are equvalent, else `false`.\n   * @example\n   *\n   * var moe = { 'name': 'moe', 'luckyNumbers': [13, 27, 34] };\n   * var clone = { 'name': 'moe', 'luckyNumbers': [13, 27, 34] };\n   *\n   * moe == clone;\n   * // => false\n   *\n   * _.isEqual(moe, clone);\n   * // => true\n   */\n  function isEqual(a, b, stackA, stackB) {\n    // exit early for identical values\n    if (a === b) {\n      // treat `+0` vs. `-0` as not equal\n      return a !== 0 || (1 / a == 1 / b);\n    }\n    // a strict comparison is necessary because `null == undefined`\n    if (a == null || b == null) {\n      return a === b;\n    }\n    // compare [[Class]] names\n    var className = toString.call(a);\n    if (className != toString.call(b)) {\n      return false;\n    }\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        // coerce dates and booleans to numbers, dates to milliseconds and booleans\n        // to `1` or `0`, treating invalid dates coerced to `NaN` as not equal\n        return +a == +b;\n\n      case numberClass:\n        // treat `NaN` vs. `NaN` as equal\n        return a != +a\n          ? b != +b\n          // but treat `+0` vs. `-0` as not equal\n          : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n      case regexpClass:\n      case stringClass:\n        // coerce regexes to strings (http://es5.github.com/#x15.10.6.4)\n        // treat string primitives and their corresponding object instances as equal\n        return a == b + '';\n    }\n    // exit early, in older browsers, if `a` is array-like but not `b`\n    var isArr = className == arrayClass || className == argsClass;\n    if (noArgsClass && !isArr && (isArr = isArguments(a)) && !isArguments(b)) {\n      return false;\n    }\n    if (!isArr) {\n      // unwrap any `lodash` wrapped values\n      if (a.__wrapped__ || b.__wrapped__) {\n        return isEqual(a.__wrapped__ || a, b.__wrapped__ || b);\n      }\n      // exit for functions and DOM nodes\n      if (className != objectClass || (noNodeClass && (\n          (typeof a.toString != 'function' && typeof (a + '') == 'string') ||\n          (typeof b.toString != 'function' && typeof (b + '') == 'string')))) {\n        return false;\n      }\n      var ctorA = a.constructor,\n          ctorB = b.constructor;\n\n      // non `Object` object instances with different constructors are not equal\n      if (ctorA != ctorB && !(\n            isFunction(ctorA) && ctorA instanceof ctorA &&\n            isFunction(ctorB) && ctorB instanceof ctorB\n          )) {\n        return false;\n      }\n    }\n    // assume cyclic structures are equal\n    // the algorithm for detecting cyclic structures is adapted from ES 5.1\n    // section 15.12.3, abstract operation `JO` (http://es5.github.com/#x15.12.3)\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == a) {\n        return stackB[length] == b;\n      }\n    }\n\n    var index = -1,\n        result = true,\n        size = 0;\n\n    // add `a` and `b` to the stack of traversed objects\n    stackA.push(a);\n    stackB.push(b);\n\n    // recursively compare objects and arrays (susceptible to call stack limits)\n    if (isArr) {\n      // compare lengths to determine if a deep comparison is necessary\n      size = a.length;\n      result = size == b.length;\n\n      if (result) {\n        // deep compare the contents, ignoring non-numeric properties\n        while (size--) {\n          if (!(result = isEqual(a[size], b[size], stackA, stackB))) {\n            break;\n          }\n        }\n      }\n      return result;\n    }\n    // deep compare objects\n    for (var key in a) {\n      if (hasOwnProperty.call(a, key)) {\n        // count the number of properties.\n        size++;\n        // deep compare each property value.\n        if (!(hasOwnProperty.call(b, key) && isEqual(a[key], b[key], stackA, stackB))) {\n          return false;\n        }\n      }\n    }\n    // ensure both objects have the same number of properties\n    for (key in b) {\n      // The JS engine in Adobe products, like InDesign, has a bug that causes\n      // `!size--` to throw an error so it must be wrapped in parentheses.\n      // https://github.com/documentcloud/underscore/issues/355\n      if (hasOwnProperty.call(b, key) && !(size--)) {\n        // `size` will be `-1` if `b` has more properties than `a`\n        return false;\n      }\n    }\n    // handle JScript [[DontEnum]] bug\n    if (hasDontEnumBug) {\n      while (++index < 7) {\n        key = shadowed[index];\n        if (hasOwnProperty.call(a, key) &&\n            !(hasOwnProperty.call(b, key) && isEqual(a[key], b[key], stackA, stackB))) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Checks if `value` is, or can be coerced to, a finite number.\n   *\n   * Note: This is not the same as native `isFinite`, which will return true for\n   * booleans and empty strings. See http://es5.github.com/#x15.1.2.5.\n   *\n   * @deprecated\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(-101);\n   * // => true\n   *\n   * _.isFinite('10');\n   * // => true\n   *\n   * _.isFinite(true);\n   * // => false\n   *\n   * _.isFinite('');\n   * // => false\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   */\n  function isFinite(value) {\n    return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n  }\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n  // fallback for older versions of Chrome and Safari\n  if (isFunction(/x/)) {\n    isFunction = function(value) {\n      return toString.call(value) == funcClass;\n    };\n  }\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.com/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return value ? objectTypes[typeof value] : false;\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * Note: This is not the same as native `isNaN`, which will return true for\n   * `undefined` and other values. See http://es5.github.com/#x15.1.2.4.\n   *\n   * @deprecated\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // `NaN` as a primitive is the only value that is not equal to itself\n    // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n    return toString.call(value) == numberClass && value != +value\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @deprecated\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(undefined);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is a number.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(8.4 * 5);\n   * // => true\n   */\n  function isNumber(value) {\n    return toString.call(value) == numberClass;\n  }\n\n  /**\n   * Checks if a given `value` is an object created by the `Object` constructor.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Stooge(name, age) {\n   *   this.name = name;\n   *   this.age = age;\n   * }\n   *\n   * _.isPlainObject(new Stooge('moe', 40));\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'name': 'moe', 'age': 40 });\n   * // => true\n   */\n  var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n    if (!(value && typeof value == 'object')) {\n      return false;\n    }\n    var valueOf = value.valueOf,\n        objProto = typeof valueOf == 'function' && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n    return objProto\n      ? value == objProto || (getPrototypeOf(value) == objProto && !isArguments(value))\n      : shimIsPlainObject(value);\n  };\n\n  /**\n   * Checks if `value` is a regular expression.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a regular expression, else `false`.\n   * @example\n   *\n   * _.isRegExp(/moe/);\n   * // => true\n   */\n  function isRegExp(value) {\n    return toString.call(value) == regexpClass;\n  }\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('moe');\n   * // => true\n   */\n  function isString(value) {\n    return toString.call(value) == stringClass;\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @deprecated\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Creates an array composed of the own enumerable property names of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (order is not guaranteed)\n   */\n  var keys = !nativeKeys ? shimKeys : function(object) {\n    var type = typeof object;\n\n    // avoid iterating over the `prototype` property\n    if (type == 'function' && propertyIsEnumerable.call(object, 'prototype')) {\n      return shimKeys(object);\n    }\n    return object && objectTypes[type]\n      ? nativeKeys(object)\n      : [];\n  };\n\n  /**\n   * Merges enumerable properties of the source object(s) into the `destination`\n   * object. Subsequent sources will overwrite propery assignments of previous\n   * sources.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param- {Object} [indicator] Internally used to indicate that the `stack`\n   *  argument is an array of traversed objects instead of another source object.\n   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.\n   * @param- {Array} [stackB=[]] Internally used to associate values with their\n   *  source counterparts.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe' },\n   *   { 'name': 'larry' }\n   * ];\n   *\n   * var ages = [\n   *   { 'age': 40 },\n   *   { 'age': 50 }\n   * ];\n   *\n   * _.merge(stooges, ages);\n   * // => [{ 'name': 'moe', 'age': 40 }, { 'name': 'larry', 'age': 50 }]\n   */\n  function merge(object, source, indicator) {\n    var args = arguments,\n        index = 0,\n        length = 2,\n        stackA = args[3],\n        stackB = args[4];\n\n    if (indicator !== indicatorObject) {\n      stackA = [];\n      stackB = [];\n      length = args.length;\n    }\n    while (++index < length) {\n      forOwn(args[index], function(source, key) {\n        var found, isArr, value;\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            found = stackA[stackLength] == source;\n            if (found) {\n              break;\n            }\n          }\n          if (found) {\n            object[key] = stackB[stackLength];\n          }\n          else {\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value = (value = object[key], isArr)\n              ? (isArray(value) ? value : [])\n              : (isPlainObject(value) ? value : {})\n            );\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            object[key] = merge(value, source, indicatorObject, stackA, stackB);\n          }\n        } else if (source != null) {\n          object[key] = source;\n        }\n      });\n    }\n    return object;\n  }\n\n  /**\n   * Creates a shallow clone of `object` excluding the specified properties.\n   * Property names may be specified as individual arguments or as arrays of\n   * property names. If `callback` is passed, it will be executed for each property\n   * in the `object`, omitting the properties `callback` returns truthy for. The\n   * `callback` is bound to `thisArg` and invoked with three arguments; (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Function|String} callback|[prop1, prop2, ...] The properties to omit\n   *  or the function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object without the omitted properties.\n   * @example\n   *\n   * _.omit({ 'name': 'moe', 'age': 40, 'userid': 'moe1' }, 'userid');\n   * // => { 'name': 'moe', 'age': 40 }\n   *\n   * _.omit({ 'name': 'moe', '_hint': 'knucklehead', '_seed': '96c4eb' }, function(value, key) {\n   *   return key.charAt(0) == '_';\n   * });\n   * // => { 'name': 'moe' }\n   */\n  function omit(object, callback, thisArg) {\n    var isFunc = typeof callback == 'function',\n        result = {};\n\n    if (isFunc) {\n      callback = createCallback(callback, thisArg);\n    } else {\n      var props = concat.apply(arrayRef, arguments);\n    }\n    forIn(object, function(value, key, object) {\n      if (isFunc\n            ? !callback(value, key, object)\n            : indexOf(props, key, 1) < 0\n          ) {\n        result[key] = value;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Creates a two dimensional array of the given object's key-value pairs,\n   * i.e. `[[key1, value1], [key2, value2]]`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns new array of key-value pairs.\n   * @example\n   *\n   * _.pairs({ 'moe': 30, 'larry': 40, 'curly': 50 });\n   * // => [['moe', 30], ['larry', 40], ['curly', 50]] (order is not guaranteed)\n   */\n  function pairs(object) {\n    var result = [];\n    forOwn(object, function(value, key) {\n      result.push([key, value]);\n    });\n    return result;\n  }\n\n  /**\n   * Creates a shallow clone of `object` composed of the specified properties.\n   * Property names may be specified as individual arguments or as arrays of\n   * property names. If `callback` is passed, it will be executed for each property\n   * in the `object`, picking the properties `callback` returns truthy for. The\n   * `callback` is bound to `thisArg` and invoked with three arguments; (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Function|String} callback|[prop1, prop2, ...] The properties to pick\n   *  or the function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object composed of the picked properties.\n   * @example\n   *\n   * _.pick({ 'name': 'moe', 'age': 40, 'userid': 'moe1' }, 'name', 'age');\n   * // => { 'name': 'moe', 'age': 40 }\n   *\n   * _.pick({ 'name': 'moe', '_hint': 'knucklehead', '_seed': '96c4eb' }, function(value, key) {\n   *   return key.charAt(0) != '_';\n   * });\n   * // => { 'name': 'moe' }\n   */\n  function pick(object, callback, thisArg) {\n    var result = {};\n    if (typeof callback != 'function') {\n      var index = 0,\n          props = concat.apply(arrayRef, arguments),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n    } else {\n      callback = createCallback(callback, thisArg);\n      forIn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result[key] = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array composed of the own enumerable property values of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => [1, 2, 3]\n   */\n  function values(object) {\n    var result = [];\n    forOwn(object, function(value) {\n      result.push(value);\n    });\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if a given `target` element is present in a `collection` using strict\n   * equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @alias include\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Mixed} target The value to check for.\n   * @returns {Boolean} Returns `true` if the `target` element is found, else `false`.\n   * @example\n   *\n   * _.contains([1, 2, 3], 3);\n   * // => true\n   *\n   * _.contains({ 'name': 'moe', 'age': 40 }, 'moe');\n   * // => true\n   *\n   * _.contains('curly', 'ur');\n   * // => true\n   */\n  function contains(collection, target) {\n    var length = collection ? collection.length : 0;\n    if (typeof length == 'number') {\n      return (toString.call(collection) == stringClass\n        ? collection.indexOf(target)\n        : indexOf(collection, target)\n      ) > -1;\n    }\n    return some(collection, function(value) {\n      return value === target;\n    });\n  }\n\n  /**\n   * Creates an object composed of keys returned from running each element of\n   * `collection` through a `callback`. The corresponding value of each key is\n   * the number of times the key was returned by `callback`. The `callback` is\n   * bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   * The `callback` argument may also be the name of a property to count by (e.g. 'length').\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|String} callback|property The function called per iteration\n   *  or property name to count by.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy(['one', 'two', 'three'], 'length');\n   * // => { '3': 2, '5': 1 }\n   */\n  function countBy(collection, callback, thisArg) {\n    var result = {};\n    callback = createCallback(callback, thisArg);\n    forEach(collection, function(value, key, collection) {\n      key = callback(value, key, collection);\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n    return result;\n  }\n\n  /**\n   * Checks if the `callback` returns a truthy value for **all** elements of a\n   * `collection`. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias all\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Boolean} Returns `true` if all elements pass the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   */\n  function every(collection, callback, thisArg) {\n    var result = true;\n    callback = createCallback(callback, thisArg);\n    forEach(collection, function(value, index, collection) {\n      return (result = !!callback(value, index, collection));\n    });\n    return result;\n  }\n\n  /**\n   * Examines each element in a `collection`, returning an array of all elements\n   * the `callback` returns truthy for. The `callback` is bound to `thisArg` and\n   * invoked with three arguments; (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias select\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that passed the callback check.\n   * @example\n   *\n   * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [2, 4, 6]\n   */\n  function filter(collection, callback, thisArg) {\n    var result = [];\n    callback = createCallback(callback, thisArg);\n    forEach(collection, function(value, index, collection) {\n      if (callback(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Examines each element in a `collection`, returning the first one the `callback`\n   * returns truthy for. The function returns as soon as it finds an acceptable\n   * element, and does not iterate over the entire `collection`. The `callback` is\n   * bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias detect\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the element that passed the callback check,\n   *  else `undefined`.\n   * @example\n   *\n   * var even = _.find([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => 2\n   */\n  function find(collection, callback, thisArg) {\n    var result;\n    callback = createCallback(callback, thisArg);\n    some(collection, function(value, index, collection) {\n      return callback(value, index, collection) && (result = value, true);\n    });\n    return result;\n  }\n\n  /**\n   * Iterates over a `collection`, executing the `callback` for each element in\n   * the `collection`. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection). Callbacks may exit iteration early\n   * by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|String} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(alert).join(',');\n   * // => alerts each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, alert);\n   * // => alerts each number (order is not guaranteed)\n   */\n  var forEach = createIterator(forEachIteratorOptions);\n\n  /**\n   * Creates an object composed of keys returned from running each element of\n   * `collection` through a `callback`. The corresponding value of each key is an\n   * array of elements passed to `callback` that returned the key. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   * The `callback` argument may also be the name of a property to group by (e.g. 'length').\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|String} callback|property The function called per iteration\n   *  or property name to group by.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * _.groupBy(['one', 'two', 'three'], 'length');\n   * // => { '3': ['one', 'two'], '5': ['three'] }\n   */\n  function groupBy(collection, callback, thisArg) {\n    var result = {};\n    callback = createCallback(callback, thisArg);\n    forEach(collection, function(value, key, collection) {\n      key = callback(value, key, collection);\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n    return result;\n  }\n\n  /**\n   * Invokes the method named by `methodName` on each element in the `collection`,\n   * returning an array of the results of each invoked method. Additional arguments\n   * will be passed to each invoked method. If `methodName` is a function it will\n   * be invoked for, and `this` bound to, each element in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|String} methodName The name of the method to invoke or\n   *  the function invoked per iteration.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n   * @returns {Array} Returns a new array of the results of each invoked method.\n   * @example\n   *\n   * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n   * // => [[1, 5, 7], [1, 2, 3]]\n   *\n   * _.invoke([123, 456], String.prototype.split, '');\n   * // => [['1', '2', '3'], ['4', '5', '6']]\n   */\n  function invoke(collection, methodName) {\n    var args = slice.call(arguments, 2),\n        isFunc = typeof methodName == 'function',\n        result = [];\n\n    forEach(collection, function(value) {\n      result.push((isFunc ? methodName : value[methodName]).apply(value, args));\n    });\n    return result;\n  }\n\n  /**\n   * Creates an array of values by running each element in the `collection`\n   * through a `callback`. The `callback` is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias collect\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * _.map([1, 2, 3], function(num) { return num * 3; });\n   * // => [3, 6, 9]\n   *\n   * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n   * // => [3, 6, 9] (order is not guaranteed)\n   */\n  function map(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    callback = createCallback(callback, thisArg);\n    if (isArray(collection)) {\n      while (++index < length) {\n        result[index] = callback(collection[index], index, collection);\n      }\n    } else {\n      forEach(collection, function(value, key, collection) {\n        result[++index] = callback(value, key, collection);\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the maximum value of an `array`. If `callback` is passed,\n   * it will be executed for each value in the `array` to generate the\n   * criterion by which the value is ranked. The `callback` is bound to\n   * `thisArg` and invoked with three arguments; (value, index, collection).\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the maximum value.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 },\n   *   { 'name': 'curly', 'age': 60 }\n   * ];\n   *\n   * _.max(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'curly', 'age': 60 };\n   */\n  function max(collection, callback, thisArg) {\n    var computed = -Infinity,\n        index = -1,\n        length = collection ? collection.length : 0,\n        result = computed;\n\n    if (callback || typeof length != 'number') {\n      callback = createCallback(callback, thisArg);\n      forEach(collection, function(value, index, collection) {\n        var current = callback(value, index, collection);\n        if (current > computed) {\n          computed = current;\n          result = value;\n        }\n      });\n    } else {\n      while (++index < length) {\n        if (collection[index] > result) {\n          result = collection[index];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the minimum value of an `array`. If `callback` is passed,\n   * it will be executed for each value in the `array` to generate the\n   * criterion by which the value is ranked. The `callback` is bound to `thisArg`\n   * and invoked with three arguments; (value, index, collection).\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the minimum value.\n   * @example\n   *\n   * _.min([10, 5, 100, 2, 1000]);\n   * // => 2\n   */\n  function min(collection, callback, thisArg) {\n    var computed = Infinity,\n        index = -1,\n        length = collection ? collection.length : 0,\n        result = computed;\n\n    if (callback || typeof length != 'number') {\n      callback = createCallback(callback, thisArg);\n      forEach(collection, function(value, index, collection) {\n        var current = callback(value, index, collection);\n        if (current < computed) {\n          computed = current;\n          result = value;\n        }\n      });\n    } else {\n      while (++index < length) {\n        if (collection[index] < result) {\n          result = collection[index];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the value of a specified property from all elements in\n   * the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {String} property The property to pluck.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 },\n   *   { 'name': 'curly', 'age': 60 }\n   * ];\n   *\n   * _.pluck(stooges, 'name');\n   * // => ['moe', 'larry', 'curly']\n   */\n  function pluck(collection, property) {\n    var result = [];\n    forEach(collection, function(value) {\n      result.push(value[property]);\n    });\n    return result;\n  }\n\n  /**\n   * Boils down a `collection` to a single value. The initial state of the\n   * reduction is `accumulator` and each successive step of it should be returned\n   * by the `callback`. The `callback` is bound to `thisArg` and invoked with 4\n   * arguments; for arrays they are (accumulator, value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias foldl, inject\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [accumulator] Initial value of the accumulator.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the accumulated value.\n   * @example\n   *\n   * var sum = _.reduce([1, 2, 3], function(memo, num) { return memo + num; });\n   * // => 6\n   */\n  function reduce(collection, callback, accumulator, thisArg) {\n    var noaccum = arguments.length < 3;\n    callback = createCallback(callback, thisArg);\n    forEach(collection, function(value, index, collection) {\n      accumulator = noaccum\n        ? (noaccum = false, value)\n        : callback(accumulator, value, index, collection)\n    });\n    return accumulator;\n  }\n\n  /**\n   * The right-associative version of `_.reduce`.\n   *\n   * @static\n   * @memberOf _\n   * @alias foldr\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [accumulator] Initial value of the accumulator.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the accumulated value.\n   * @example\n   *\n   * var list = [[0, 1], [2, 3], [4, 5]];\n   * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n   * // => [4, 5, 2, 3, 0, 1]\n   */\n  function reduceRight(collection, callback, accumulator, thisArg) {\n    var iteratee = collection,\n        length = collection ? collection.length : 0,\n        noaccum = arguments.length < 3;\n\n    if (typeof length != 'number') {\n      var props = keys(collection);\n      length = props.length;\n    } else if (noCharByIndex && toString.call(collection) == stringClass) {\n      iteratee = collection.split('');\n    }\n    forEach(collection, function(value, index, collection) {\n      index = props ? props[--length] : --length;\n      accumulator = noaccum\n        ? (noaccum = false, iteratee[index])\n        : callback.call(thisArg, accumulator, iteratee[index], index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The opposite of `_.filter`, this method returns the values of a\n   * `collection` that `callback` does **not** return truthy for.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that did **not** pass the\n   *  callback check.\n   * @example\n   *\n   * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [1, 3, 5]\n   */\n  function reject(collection, callback, thisArg) {\n    callback = createCallback(callback, thisArg);\n    return filter(collection, function(value, index, collection) {\n      return !callback(value, index, collection);\n    });\n  }\n\n  /**\n   * Creates an array of shuffled `array` values, using a version of the\n   * Fisher-Yates shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to shuffle.\n   * @returns {Array} Returns a new shuffled collection.\n   * @example\n   *\n   * _.shuffle([1, 2, 3, 4, 5, 6]);\n   * // => [4, 1, 6, 3, 5, 2]\n   */\n  function shuffle(collection) {\n    var index = -1,\n        result = Array(collection ? collection.length : 0);\n\n    forEach(collection, function(value) {\n      var rand = floor(nativeRandom() * (++index + 1));\n      result[index] = result[rand];\n      result[rand] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Gets the size of the `collection` by returning `collection.length` for arrays\n   * and array-like objects or the number of own enumerable properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to inspect.\n   * @returns {Number} Returns `collection.length` or number of own enumerable properties.\n   * @example\n   *\n   * _.size([1, 2]);\n   * // => 2\n   *\n   * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => 3\n   *\n   * _.size('curly');\n   * // => 5\n   */\n  function size(collection) {\n    var length = collection ? collection.length : 0;\n    return typeof length == 'number' ? length : keys(collection).length;\n  }\n\n  /**\n   * Checks if the `callback` returns a truthy value for **any** element of a\n   * `collection`. The function returns as soon as it finds passing value, and\n   * does not iterate over the entire `collection`. The `callback` is bound to\n   * `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias any\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Boolean} Returns `true` if any element passes the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false]);\n   * // => true\n   */\n  function some(collection, callback, thisArg) {\n    var result;\n    callback = createCallback(callback, thisArg);\n    forEach(collection, function(value, index, collection) {\n      return !(result = callback(value, index, collection));\n    });\n    return !!result;\n  }\n\n  /**\n   * Creates an array, stable sorted in ascending order by the results of\n   * running each element of `collection` through a `callback`. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   * The `callback` argument may also be the name of a property to sort by (e.g. 'length').\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|String} callback|property The function called per iteration\n   *  or property name to sort by.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of sorted elements.\n   * @example\n   *\n   * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n   * // => [3, 1, 2]\n   *\n   * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n   * // => [3, 1, 2]\n   *\n   * _.sortBy(['larry', 'brendan', 'moe'], 'length');\n   * // => ['moe', 'larry', 'brendan']\n   */\n  function sortBy(collection, callback, thisArg) {\n    var result = [];\n    callback = createCallback(callback, thisArg);\n    forEach(collection, function(value, index, collection) {\n      result.push({\n        'criteria': callback(value, index, collection),\n        'index': index,\n        'value': value\n      });\n    });\n\n    var length = result.length;\n    result.sort(compareAscending);\n    while (length--) {\n      result[length] = result[length].value;\n    }\n    return result;\n  }\n\n  /**\n   * Converts the `collection`, to an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to convert.\n   * @returns {Array} Returns the new converted array.\n   * @example\n   *\n   * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n   * // => [2, 3, 4]\n   */\n  function toArray(collection) {\n    if (collection && typeof collection.length == 'number') {\n      return (noArraySliceOnStrings ? toString.call(collection) == stringClass : typeof collection == 'string')\n        ? collection.split('')\n        : slice.call(collection);\n    }\n    return values(collection);\n  }\n\n  /**\n   * Examines each element in a `collection`, returning an array of all elements\n   * that contain the given `properties`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Object} properties The object of property values to filter by.\n   * @returns {Array} Returns a new array of elements that contain the given `properties`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 },\n   *   { 'name': 'curly', 'age': 60 }\n   * ];\n   *\n   * _.where(stooges, { 'age': 40 });\n   * // => [{ 'name': 'moe', 'age': 40 }]\n   */\n  function where(collection, properties) {\n    var props = [];\n    forIn(properties, function(value, prop) {\n      props.push(prop);\n    });\n    return filter(collection, function(object) {\n      var length = props.length;\n      while (length--) {\n        var result = object[props[length]] === properties[props[length]];\n        if (!result) {\n          break;\n        }\n      }\n      return !!result;\n    });\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values of `array` removed. The values\n   * `false`, `null`, `0`, `\"\"`, `undefined` and `NaN` are all falsey.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns a new filtered array.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array of `array` elements not present in the other arrays\n   * using strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {Array} [array1, array2, ...] Arrays to check.\n   * @returns {Array} Returns a new array of `array` elements not present in the\n   *  other arrays.\n   * @example\n   *\n   * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n   * // => [1, 3, 4]\n   */\n  function difference(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        flattened = concat.apply(arrayRef, arguments),\n        contains = cachedContains(flattened, length),\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (!contains(value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the first element of the `array`. Pass `n` to return the first `n`\n   * elements of the `array`.\n   *\n   * @static\n   * @memberOf _\n   * @alias head, take\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Number} [n] The number of elements to return.\n   * @param- {Object} [guard] Internally used to allow this method to work with\n   *  others like `_.map` without using their callback `index` argument for `n`.\n   * @returns {Mixed} Returns the first element or an array of the first `n`\n   *  elements of `array`.\n   * @example\n   *\n   * _.first([5, 4, 3, 2, 1]);\n   * // => 5\n   */\n  function first(array, n, guard) {\n    if (array) {\n      return (n == null || guard) ? array[0] : slice.call(array, 0, n);\n    }\n  }\n\n  /**\n   * Flattens a nested array (the nesting can be to any depth). If `shallow` is\n   * truthy, `array` will only be flattened a single level.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @param {Boolean} shallow A flag to indicate only flattening a single level.\n   * @returns {Array} Returns a new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2], [3, [[4]]]]);\n   * // => [1, 2, 3, 4];\n   *\n   * _.flatten([1, [2], [3, [[4]]]], true);\n   * // => [1, 2, 3, [[4]]];\n   */\n  function flatten(array, shallow) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n\n      // recursively flatten arrays (susceptible to call stack limits)\n      if (isArray(value)) {\n        push.apply(result, shallow ? value : flatten(value));\n      } else {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found using\n   * strict equality for comparisons, i.e. `===`. If the `array` is already\n   * sorted, passing `true` for `fromIndex` will run a faster binary search.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Boolean|Number} [fromIndex=0] The index to start searching from or\n   *  `true` to perform a binary search on a sorted `array`.\n   * @returns {Number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 1\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 4\n   *\n   * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n   * // => 2\n   */\n  function indexOf(array, value, fromIndex) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (typeof fromIndex == 'number') {\n      index = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0) - 1;\n    } else if (fromIndex) {\n      index = sortedIndex(array, value);\n      return array[index] === value ? index : -1;\n    }\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets all but the last element of `array`. Pass `n` to exclude the last `n`\n   * elements from the result.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Number} [n] The number of elements to return.\n   * @param- {Object} [guard] Internally used to allow this method to work with\n   *  others like `_.map` without using their callback `index` argument for `n`.\n   * @returns {Array} Returns all but the last element or `n` elements of `array`.\n   * @example\n   *\n   * _.initial([3, 2, 1]);\n   * // => [3, 2]\n   */\n  function initial(array, n, guard) {\n    return array\n      ? slice.call(array, 0, -((n == null || guard) ? 1 : n))\n      : [];\n  }\n\n  /**\n   * Computes the intersection of all the passed-in arrays using strict equality\n   * for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of unique elements, in order, that are\n   *  present in **all** of the arrays.\n   * @example\n   *\n   * _.intersection([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2]\n   */\n  function intersection(array) {\n    var args = arguments,\n        argsLength = args.length,\n        cache = {},\n        result = [];\n\n    forEach(array, function(value) {\n      if (indexOf(result, value) < 0) {\n        var length = argsLength;\n        while (--length) {\n          if (!(cache[length] || (cache[length] = cachedContains(args[length])))(value)) {\n            return;\n          }\n        }\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets the last element of the `array`. Pass `n` to return the last `n`\n   * elements of the `array`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Number} [n] The number of elements to return.\n   * @param- {Object} [guard] Internally used to allow this method to work with\n   *  others like `_.map` without using their callback `index` argument for `n`.\n   * @returns {Mixed} Returns the last element or an array of the last `n`\n   *  elements of `array`.\n   * @example\n   *\n   * _.last([3, 2, 1]);\n   * // => 1\n   */\n  function last(array, n, guard) {\n    if (array) {\n      var length = array.length;\n      return (n == null || guard) ? array[length - 1] : slice.call(array, -n || length);\n    }\n  }\n\n  /**\n   * Gets the index at which the last occurrence of `value` is found using\n   * strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Number} [fromIndex=array.length-1] The index to start searching from.\n   * @returns {Number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 4\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 1\n   */\n  function lastIndexOf(array, value, fromIndex) {\n    var index = array ? array.length : 0;\n    if (typeof fromIndex == 'number') {\n      index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n    }\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Creates an object composed from arrays of `keys` and `values`. Pass either\n   * a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`, or\n   * two arrays, one of `keys` and one of corresponding `values`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} keys The array of keys.\n   * @param {Array} [values=[]] The array of values.\n   * @returns {Object} Returns an object composed of the given keys and\n   *  corresponding values.\n   * @example\n   *\n   * _.object(['moe', 'larry', 'curly'], [30, 40, 50]);\n   * // => { 'moe': 30, 'larry': 40, 'curly': 50 }\n   */\n  function object(keys, values) {\n    var index = -1,\n        length = keys ? keys.length : 0,\n        result = {};\n\n    while (++index < length) {\n      var key = keys[index];\n      if (values) {\n        result[key] = values[index];\n      } else {\n        result[key[0]] = key[1];\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array of numbers (positive and/or negative) progressing from\n   * `start` up to but not including `stop`. This method is a port of Python's\n   * `range()` function. See http://docs.python.org/library/functions.html#range.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Number} [start=0] The start of the range.\n   * @param {Number} end The end of the range.\n   * @param {Number} [step=1] The value to increment or descrement by.\n   * @returns {Array} Returns a new range array.\n   * @example\n   *\n   * _.range(10);\n   * // => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n   *\n   * _.range(1, 11);\n   * // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n   *\n   * _.range(0, 30, 5);\n   * // => [0, 5, 10, 15, 20, 25]\n   *\n   * _.range(0, -10, -1);\n   * // => [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n   *\n   * _.range(0);\n   * // => []\n   */\n  function range(start, end, step) {\n    start = +start || 0;\n    step = +step || 1;\n\n    if (end == null) {\n      end = start;\n      start = 0;\n    }\n    // use `Array(length)` so V8 will avoid the slower \"dictionary\" mode\n    // http://www.youtube.com/watch?v=XAqIpGU8ZZk#t=16m27s\n    var index = -1,\n        length = nativeMax(0, ceil((end - start) / step)),\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = start;\n      start += step;\n    }\n    return result;\n  }\n\n  /**\n   * The opposite of `_.initial`, this method gets all but the first value of\n   * `array`. Pass `n` to exclude the first `n` values from the result.\n   *\n   * @static\n   * @memberOf _\n   * @alias drop, tail\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Number} [n] The number of elements to return.\n   * @param- {Object} [guard] Internally used to allow this method to work with\n   *  others like `_.map` without using their callback `index` argument for `n`.\n   * @returns {Array} Returns all but the first value or `n` values of `array`.\n   * @example\n   *\n   * _.rest([3, 2, 1]);\n   * // => [2, 1]\n   */\n  function rest(array, n, guard) {\n    return array\n      ? slice.call(array, (n == null || guard) ? 1 : n)\n      : [];\n  }\n\n  /**\n   * Uses a binary search to determine the smallest index at which the `value`\n   * should be inserted into `array` in order to maintain the sort order of the\n   * sorted `array`. If `callback` is passed, it will be executed for `value` and\n   * each element in `array` to compute their sort ranking. The `callback` is\n   * bound to `thisArg` and invoked with one argument; (value). The `callback`\n   * argument may also be the name of a property to order by.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to iterate over.\n   * @param {Mixed} value The value to evaluate.\n   * @param {Function|String} [callback=identity|property] The function called\n   *  per iteration or property name to order by.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Number} Returns the index at which the value should be inserted\n   *  into `array`.\n   * @example\n   *\n   * _.sortedIndex([20, 30, 50], 40);\n   * // => 2\n   *\n   * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n   * // => 2\n   *\n   * var dict = {\n   *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n   * };\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return dict.wordToNumber[word];\n   * });\n   * // => 2\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return this.wordToNumber[word];\n   * }, dict);\n   * // => 2\n   */\n  function sortedIndex(array, value, callback, thisArg) {\n    var low = 0,\n        high = array ? array.length : low;\n\n    // explicitly reference `identity` for better engine inlining\n    callback = callback ? createCallback(callback, thisArg) : identity;\n    value = callback(value);\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      callback(array[mid]) < value\n        ? low = mid + 1\n        : high = mid;\n    }\n    return low;\n  }\n\n  /**\n   * Computes the union of the passed-in arrays using strict equality for\n   * comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of unique values, in order, that are\n   *  present in one or more of the arrays.\n   * @example\n   *\n   * _.union([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2, 3, 101, 10]\n   */\n  function union() {\n    return uniq(concat.apply(arrayRef, arguments));\n  }\n\n  /**\n   * Creates a duplicate-value-free version of the `array` using strict equality\n   * for comparisons, i.e. `===`. If the `array` is already sorted, passing `true`\n   * for `isSorted` will run a faster algorithm. If `callback` is passed, each\n   * element of `array` is passed through a callback` before uniqueness is computed.\n   * The `callback` is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   * @static\n   * @memberOf _\n   * @alias unique\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {Boolean} [isSorted=false] A flag to indicate that the `array` is already sorted.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a duplicate-value-free array.\n   * @example\n   *\n   * _.uniq([1, 2, 1, 3, 1]);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 1, 2, 2, 3], true);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return Math.floor(num); });\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return this.floor(num); }, Math);\n   * // => [1, 2, 3]\n   */\n  function uniq(array, isSorted, callback, thisArg) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [],\n        seen = result;\n\n    // juggle arguments\n    if (typeof isSorted == 'function') {\n      thisArg = callback;\n      callback = isSorted;\n      isSorted = false;\n    }\n    if (callback) {\n      seen = [];\n      callback = createCallback(callback, thisArg);\n    }\n    while (++index < length) {\n      var value = array[index],\n          computed = callback ? callback(value, index, array) : value;\n\n      if (isSorted\n            ? !index || seen[seen.length - 1] !== computed\n            : indexOf(seen, computed) < 0\n          ) {\n        if (callback) {\n          seen.push(computed);\n        }\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array with all occurrences of the passed values removed using\n   * strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to filter.\n   * @param {Mixed} [value1, value2, ...] Values to remove.\n   * @returns {Array} Returns a new filtered array.\n   * @example\n   *\n   * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n   * // => [2, 3, 4]\n   */\n  function without(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        contains = cachedContains(arguments, 1, 20),\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (!contains(value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Groups the elements of each array at their corresponding indexes. Useful for\n   * separate data sources that are coordinated through matching array indexes.\n   * For a matrix of nested arrays, `_.zip.apply(...)` can transpose the matrix\n   * in a similar fashion.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of grouped elements.\n   * @example\n   *\n   * _.zip(['moe', 'larry', 'curly'], [30, 40, 50], [true, false, false]);\n   * // => [['moe', 30, true], ['larry', 40, false], ['curly', 50, false]]\n   */\n  function zip(array) {\n    var index = -1,\n        length = array ? max(pluck(arguments, 'length')) : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = pluck(arguments, index);\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that is restricted to executing only after it is\n   * called `n` times.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Number} n The number of times the function must be called before\n   * it is executed.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var renderNotes = _.after(notes.length, render);\n   * _.forEach(notes, function(note) {\n   *   note.asyncSave({ 'success': renderNotes });\n   * });\n   * // `renderNotes` is run once, after all notes have saved\n   */\n  function after(n, func) {\n    if (n < 1) {\n      return func();\n    }\n    return function() {\n      if (--n < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * passed to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {Mixed} [thisArg] The `this` binding of `func`.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'moe' }, 'hi');\n   * func();\n   * // => 'hi moe'\n   */\n  function bind(func, thisArg) {\n    // use `Function#bind` if it exists and is fast\n    // (in V8 `Function#bind` is slower except when partially applied)\n    return isBindFast || (nativeBind && arguments.length > 2)\n      ? nativeBind.call.apply(nativeBind, arguments)\n      : createBound(func, thisArg, slice.call(arguments, 2));\n  }\n\n  /**\n   * Binds methods on `object` to `object`, overwriting the existing method.\n   * If no method names are provided, all the function properties of `object`\n   * will be bound.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object to bind and assign the bound methods to.\n   * @param {String} [methodName1, methodName2, ...] Method names on the object to bind.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * var buttonView = {\n   *  'label': 'lodash',\n   *  'onClick': function() { alert('clicked: ' + this.label); }\n   * };\n   *\n   * _.bindAll(buttonView);\n   * jQuery('#lodash_button').on('click', buttonView.onClick);\n   * // => When the button is clicked, `this.label` will have the correct value\n   */\n  function bindAll(object) {\n    var funcs = arguments,\n        index = funcs.length > 1 ? 0 : (funcs = functions(object), -1),\n        length = funcs.length;\n\n    while (++index < length) {\n      var key = funcs[index];\n      object[key] = bind(object[key], object);\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function that is the composition of the passed functions,\n   * where each function consumes the return value of the function that follows.\n   * In math terms, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} [func1, func2, ...] Functions to compose.\n   * @returns {Function} Returns the new composed function.\n   * @example\n   *\n   * var greet = function(name) { return 'hi: ' + name; };\n   * var exclaim = function(statement) { return statement + '!'; };\n   * var welcome = _.compose(exclaim, greet);\n   * welcome('moe');\n   * // => 'hi: moe!'\n   */\n  function compose() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        args = [funcs[length].apply(this, args)];\n      }\n      return args[0];\n    };\n  }\n\n  /**\n   * Creates a function that will delay the execution of `func` until after\n   * `wait` milliseconds have elapsed since the last time it was invoked. Pass\n   * `true` for `immediate` to cause debounce to invoke `func` on the leading,\n   * instead of the trailing, edge of the `wait` timeout. Subsequent calls to\n   * the debounced function will return the result of the last `func` call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to debounce.\n   * @param {Number} wait The number of milliseconds to delay.\n   * @param {Boolean} immediate A flag to indicate execution is on the leading\n   *  edge of the timeout.\n   * @returns {Function} Returns the new debounced function.\n   * @example\n   *\n   * var lazyLayout = _.debounce(calculateLayout, 300);\n   * jQuery(window).on('resize', lazyLayout);\n   */\n  function debounce(func, wait, immediate) {\n    var args,\n        result,\n        thisArg,\n        timeoutId;\n\n    function delayed() {\n      timeoutId = null;\n      if (!immediate) {\n        result = func.apply(thisArg, args);\n      }\n    }\n    return function() {\n      var isImmediate = immediate && !timeoutId;\n      args = arguments;\n      thisArg = this;\n\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(delayed, wait);\n\n      if (isImmediate) {\n        result = func.apply(thisArg, args);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Executes the `func` function after `wait` milliseconds. Additional arguments\n   * will be passed to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to delay.\n   * @param {Number} wait The number of milliseconds to delay execution.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n   * @returns {Number} Returns the `setTimeout` timeout id.\n   * @example\n   *\n   * var log = _.bind(console.log, console);\n   * _.delay(log, 1000, 'logged later');\n   * // => 'logged later' (Appears after one second.)\n   */\n  function delay(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * Defers executing the `func` function until the current call stack has cleared.\n   * Additional arguments will be passed to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to defer.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n   * @returns {Number} Returns the `setTimeout` timeout id.\n   * @example\n   *\n   * _.defer(function() { alert('deferred'); });\n   * // returns from the function before `alert` is called\n   */\n  function defer(func) {\n    var args = slice.call(arguments, 1);\n    return setTimeout(function() { func.apply(undefined, args); }, 1);\n  }\n\n  /**\n   * Creates a function that, when called, invokes `object[methodName]` and\n   * prepends any additional `lateBind` arguments to those passed to the bound\n   * function. This method differs from `_.bind` by allowing bound functions to\n   * reference methods that will be redefined or don't yet exist.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object the method belongs to.\n   * @param {String} methodName The method name.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var object = {\n   *   'name': 'moe',\n   *   'greet': function(greeting) {\n   *     return greeting + ' ' + this.name;\n   *   }\n   * };\n   *\n   * var func = _.lateBind(object, 'greet', 'hi');\n   * func();\n   * // => 'hi moe'\n   *\n   * object.greet = function(greeting) {\n   *   return greeting + ', ' + this.name + '!';\n   * };\n   *\n   * func();\n   * // => 'hi, moe!'\n   */\n  function lateBind(object, methodName) {\n    return createBound(methodName, object, slice.call(arguments, 2));\n  }\n\n  /**\n   * Creates a function that memoizes the result of `func`. If `resolver` is\n   * passed, it will be used to determine the cache key for storing the result\n   * based on the arguments passed to the memoized function. By default, the first\n   * argument passed to the memoized function is used as the cache key.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to have its output memoized.\n   * @param {Function} [resolver] A function used to resolve the cache key.\n   * @returns {Function} Returns the new memoizing function.\n   * @example\n   *\n   * var fibonacci = _.memoize(function(n) {\n   *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n   * });\n   */\n  function memoize(func, resolver) {\n    var cache = {};\n    return function() {\n      var key = resolver ? resolver.apply(this, arguments) : arguments[0];\n      return hasOwnProperty.call(cache, key)\n        ? cache[key]\n        : (cache[key] = func.apply(this, arguments));\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to one execution. Repeat calls to\n   * the function will return the value of the first call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // Application is only created once.\n   */\n  function once(func) {\n    var result,\n        ran = false;\n\n    return function() {\n      if (ran) {\n        return result;\n      }\n      ran = true;\n      result = func.apply(this, arguments);\n\n      // clear the `func` variable so the function may be garbage collected\n      func = null;\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with any additional\n   * `partial` arguments prepended to those passed to the new function. This method\n   * is similar to `bind`, except it does **not** alter the `this` binding.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to partially apply arguments to.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new partially applied function.\n   * @example\n   *\n   * var greet = function(greeting, name) { return greeting + ': ' + name; };\n   * var hi = _.partial(greet, 'hi');\n   * hi('moe');\n   * // => 'hi: moe'\n   */\n  function partial(func) {\n    return createBound(func, slice.call(arguments, 1));\n  }\n\n  /**\n   * Creates a function that, when executed, will only call the `func`\n   * function at most once per every `wait` milliseconds. If the throttled\n   * function is invoked more than once during the `wait` timeout, `func` will\n   * also be called on the trailing edge of the timeout. Subsequent calls to the\n   * throttled function will return the result of the last `func` call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to throttle.\n   * @param {Number} wait The number of milliseconds to throttle executions to.\n   * @returns {Function} Returns the new throttled function.\n   * @example\n   *\n   * var throttled = _.throttle(updatePosition, 100);\n   * jQuery(window).on('scroll', throttled);\n   */\n  function throttle(func, wait) {\n    var args,\n        result,\n        thisArg,\n        timeoutId,\n        lastCalled = 0;\n\n    function trailingCall() {\n      lastCalled = new Date;\n      timeoutId = null;\n      result = func.apply(thisArg, args);\n    }\n    return function() {\n      var now = new Date,\n          remaining = wait - (now - lastCalled);\n\n      args = arguments;\n      thisArg = this;\n\n      if (remaining <= 0) {\n        clearTimeout(timeoutId);\n        lastCalled = now;\n        result = func.apply(thisArg, args);\n      }\n      else if (!timeoutId) {\n        timeoutId = setTimeout(trailingCall, remaining);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that passes `value` to the `wrapper` function as its\n   * first argument. Additional arguments passed to the new function are appended\n   * to those passed to the `wrapper` function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Mixed} value The value to wrap.\n   * @param {Function} wrapper The wrapper function.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var hello = function(name) { return 'hello ' + name; };\n   * hello = _.wrap(hello, function(func) {\n   *   return 'before, ' + func('moe') + ', after';\n   * });\n   * hello();\n   * // => 'before, hello moe, after'\n   */\n  function wrap(value, wrapper) {\n    return function() {\n      var args = [value];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n   * corresponding HTML entities.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} string The string to escape.\n   * @returns {String} Returns the escaped string.\n   * @example\n   *\n   * _.escape('Moe, Larry & Curly');\n   * // => \"Moe, Larry &amp; Curly\"\n   */\n  function escape(string) {\n    return string == null ? '' : (string + '').replace(reUnescapedHtml, escapeHtmlChar);\n  }\n\n  /**\n   * This function returns the first argument passed to it.\n   *\n   * Note: It is used throughout Lo-Dash as a default callback.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Mixed} value Any value.\n   * @returns {Mixed} Returns `value`.\n   * @example\n   *\n   * var moe = { 'name': 'moe' };\n   * moe === _.identity(moe);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Adds functions properties of `object` to the `lodash` function and chainable\n   * wrapper.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object of function properties to add to `lodash`.\n   * @example\n   *\n   * _.mixin({\n   *   'capitalize': function(string) {\n   *     return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n   *   }\n   * });\n   *\n   * _.capitalize('larry');\n   * // => 'Larry'\n   *\n   * _('curly').capitalize();\n   * // => 'Curly'\n   */\n  function mixin(object) {\n    forEach(functions(object), function(methodName) {\n      var func = lodash[methodName] = object[methodName];\n\n      lodash.prototype[methodName] = function() {\n        var args = [this.__wrapped__];\n        push.apply(args, arguments);\n\n        var result = func.apply(lodash, args);\n        if (this.__chain__) {\n          result = new lodash(result);\n          result.__chain__ = true;\n        }\n        return result;\n      };\n    });\n  }\n\n  /**\n   * Reverts the '_' variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    window._ = oldDash;\n    return this;\n  }\n\n  /**\n   * Produces a random number between `min` and `max` (inclusive). If only one\n   * argument is passed, a number between `0` and the given number will be returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Number} [min=0] The minimum possible value.\n   * @param {Number} [max=1] The maximum possible value.\n   * @returns {Number} Returns a random number.\n   * @example\n   *\n   * _.random(0, 5);\n   * // => a number between 1 and 5\n   *\n   * _.random(5);\n   * // => also a number between 1 and 5\n   */\n  function random(min, max) {\n    if (min == null && max == null) {\n      max = 1;\n    }\n    min = +min || 0;\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + floor(nativeRandom() * ((+max || 0) - min + 1));\n  }\n\n  /**\n   * Resolves the value of `property` on `object`. If `property` is a function\n   * it will be invoked and its result returned, else the property value is\n   * returned. If `object` is falsey, then `null` is returned.\n   *\n   * @deprecated\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object to inspect.\n   * @param {String} property The property to get the value of.\n   * @returns {Mixed} Returns the resolved value.\n   * @example\n   *\n   * var object = {\n   *   'cheese': 'crumpets',\n   *   'stuff': function() {\n   *     return 'nonsense';\n   *   }\n   * };\n   *\n   * _.result(object, 'cheese');\n   * // => 'crumpets'\n   *\n   * _.result(object, 'stuff');\n   * // => 'nonsense'\n   */\n  function result(object, property) {\n    // based on Backbone's private `getValue` function\n    // https://github.com/documentcloud/backbone/blob/0.9.2/backbone.js#L1419-1424\n    var value = object ? object[property] : null;\n    return isFunction(value) ? object[property]() : value;\n  }\n\n  /**\n   * A micro-templating method that handles arbitrary delimiters, preserves\n   * whitespace, and correctly escapes quotes within interpolated code.\n   *\n   * Note: In the development build `_.template` utilizes sourceURLs for easier\n   * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n   *\n   * Note: Lo-Dash may be used in Chrome extensions by either creating a `lodash csp`\n   * build and avoiding `_.template` use, or loading Lo-Dash in a sandboxed page.\n   * See http://developer.chrome.com/trunk/extensions/sandboxingEval.html\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} text The template text.\n   * @param {Obect} data The data object used to populate the text.\n   * @param {Object} options The options object.\n   *  escape - The \"escape\" delimiter regexp.\n   *  evaluate - The \"evaluate\" delimiter regexp.\n   *  interpolate - The \"interpolate\" delimiter regexp.\n   *  sourceURL - The sourceURL of the template's compiled source.\n   *  variable - The data object variable name.\n   *\n   * @returns {Function|String} Returns a compiled function when no `data` object\n   *  is given, else it returns the interpolated text.\n   * @example\n   *\n   * // using a compiled template\n   * var compiled = _.template('hello <%= name %>');\n   * compiled({ 'name': 'moe' });\n   * // => 'hello moe'\n   *\n   * var list = '<% _.forEach(people, function(name) { %><li><%= name %></li><% }); %>';\n   * _.template(list, { 'people': ['moe', 'larry', 'curly'] });\n   * // => '<li>moe</li><li>larry</li><li>curly</li>'\n   *\n   * // using the \"escape\" delimiter to escape HTML in data property values\n   * _.template('<b><%- value %></b>', { 'value': '<script>' });\n   * // => '<b>&lt;script></b>'\n   *\n   * // using the internal `print` function in \"evaluate\" delimiters\n   * _.template('<% print(\"hello \" + epithet); %>!', { 'epithet': 'stooge' });\n   * // => 'hello stooge!'\n   *\n   * // using custom template delimiters\n   * _.templateSettings = {\n   *   'interpolate': /\\{\\{([\\s\\S]+?)\\}\\}/g\n   * };\n   *\n   * _.template('hello {{ name }}!', { 'name': 'mustache' });\n   * // => 'hello mustache!'\n   *\n   * // using the `sourceURL` option to specify a custom sourceURL for the template\n   * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n   * compiled(data);\n   * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n   *\n   * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n   * var compiled = _.template('hello <%= data.name %>!', null, { 'variable': 'data' });\n   * compiled.source;\n   * // => function(data) {\n   *   var __t, __p = '', __e = _.escape;\n   *   __p += 'hello ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n   *   return __p;\n   * }\n   *\n   * // using the `source` property to inline compiled templates for meaningful\n   * // line numbers in error messages and a stack trace\n   * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n   *   var JST = {\\\n   *     \"main\": ' + _.template(mainText).source + '\\\n   *   };\\\n   * ');\n   */\n  function template(text, data, options) {\n    // based on John Resig's `tmpl` implementation\n    // http://ejohn.org/blog/javascript-micro-templating/\n    // and Laura Doktorova's doT.js\n    // https://github.com/olado/doT\n    text || (text = '');\n    options || (options = {});\n\n    var isEvaluating,\n        result,\n        index = 0,\n        settings = lodash.templateSettings,\n        source = \"__p += '\",\n        variable = options.variable || settings.variable,\n        hasVariable = variable;\n\n    // compile regexp to match each delimiter\n    var reDelimiters = RegExp(\n      (options.escape || settings.escape || reNoMatch).source + '|' +\n      (options.interpolate || settings.interpolate || reNoMatch).source + '|' +\n      (options.evaluate || settings.evaluate || reNoMatch).source + '|$'\n    , 'g');\n\n    text.replace(reDelimiters, function(match, escapeValue, interpolateValue, evaluateValue, offset) {\n      // escape characters that cannot be included in string literals\n      source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n      // replace delimiters with snippets\n      source +=\n        escapeValue ? \"' +\\n__e(\" + escapeValue + \") +\\n'\" :\n        evaluateValue ? \"';\\n\" + evaluateValue + \";\\n__p += '\" :\n        interpolateValue ? \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\" : '';\n\n      isEvaluating || (isEvaluating = evaluateValue || reComplexDelimiter.test(escapeValue || interpolateValue));\n      index = offset + match.length;\n    });\n\n    source += \"';\\n\";\n\n    // if `variable` is not specified and the template contains \"evaluate\"\n    // delimiters, wrap a with-statement around the generated code to add the\n    // data object to the top of the scope chain\n    if (!hasVariable) {\n      variable = 'obj';\n      if (isEvaluating) {\n        source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n      }\n      else {\n        // avoid a with-statement by prepending data object references to property names\n        var reDoubleVariable = RegExp('(\\\\(\\\\s*)' + variable + '\\\\.' + variable + '\\\\b', 'g');\n        source = source\n          .replace(reInsertVariable, '$&' + variable + '.')\n          .replace(reDoubleVariable, '$1__d');\n      }\n    }\n\n    // cleanup code by stripping empty strings\n    source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n      .replace(reEmptyStringMiddle, '$1')\n      .replace(reEmptyStringTrailing, '$1;');\n\n    // frame code as the function body\n    source = 'function(' + variable + ') {\\n' +\n      (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n      'var __t, __p = \\'\\', __e = _.escape' +\n      (isEvaluating\n        ? ', __j = Array.prototype.join;\\n' +\n          'function print() { __p += __j.call(arguments, \\'\\') }\\n'\n        : (hasVariable ? '' : ', __d = ' + variable + '.' + variable + ' || ' + variable) + ';\\n'\n      ) +\n      source +\n      'return __p\\n}';\n\n    // use a sourceURL for easier debugging\n    // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n    var sourceURL = useSourceURL\n      ? '\\n//@ sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']')\n      : '';\n\n    try {\n      result = Function('_', 'return ' + source + sourceURL)(lodash);\n    } catch(e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) {\n      return result(data);\n    }\n    // provide the compiled function's source via its `toString` method, in\n    // supported environments, or the `source` property as a convenience for\n    // inlining compiled templates during the build process\n    result.source = source;\n    return result;\n  }\n\n  /**\n   * Executes the `callback` function `n` times, returning an array of the results\n   * of each `callback` execution. The `callback` is bound to `thisArg` and invoked\n   * with one argument; (index).\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Number} n The number of times to execute the callback.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n   * // => [3, 6, 4]\n   *\n   * _.times(3, function(n) { mage.castSpell(n); });\n   * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n   *\n   * _.times(3, function(n) { this.cast(n); }, mage);\n   * // => also calls `mage.castSpell(n)` three times\n   */\n  function times(n, callback, thisArg) {\n    n = +n || 0;\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = callback.call(thisArg, index);\n    }\n    return result;\n  }\n\n  /**\n   * The opposite of `_.escape`, this method converts the HTML entities\n   * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#x27;` in `string` to their\n   * corresponding characters.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} string The string to unescape.\n   * @returns {String} Returns the unescaped string.\n   * @example\n   *\n   * _.unescape('Moe, Larry &amp; Curly');\n   * // => \"Moe, Larry & Curly\"\n   */\n  function unescape(string) {\n    return string == null ? '' : (string + '').replace(reEscapedHtml, unescapeHtmlChar);\n  }\n\n  /**\n   * Generates a unique id. If `prefix` is passed, the id will be appended to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} [prefix] The value to prefix the id with.\n   * @returns {Number|String} Returns a numeric id if no prefix is passed, else\n   *  a string id may be returned.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   */\n  function uniqueId(prefix) {\n    var id = idCounter++;\n    return prefix ? prefix + id : id;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Wraps the value in a `lodash` wrapper object.\n   *\n   * @static\n   * @memberOf _\n   * @category Chaining\n   * @param {Mixed} value The value to wrap.\n   * @returns {Object} Returns the wrapper object.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 },\n   *   { 'name': 'curly', 'age': 60 }\n   * ];\n   *\n   * var youngest = _.chain(stooges)\n   *     .sortBy(function(stooge) { return stooge.age; })\n   *     .map(function(stooge) { return stooge.name + ' is ' + stooge.age; })\n   *     .first()\n   *     .value();\n   * // => 'moe is 40'\n   */\n  function chain(value) {\n    value = new lodash(value);\n    value.__chain__ = true;\n    return value;\n  }\n\n  /**\n   * Invokes `interceptor` with the `value` as the first argument, and then\n   * returns `value`. The purpose of this method is to \"tap into\" a method chain,\n   * in order to perform operations on intermediate results within the chain.\n   *\n   * @static\n   * @memberOf _\n   * @category Chaining\n   * @param {Mixed} value The value to pass to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {Mixed} Returns `value`.\n   * @example\n   *\n   * _.chain([1, 2, 3, 200])\n   *  .filter(function(num) { return num % 2 == 0; })\n   *  .tap(alert)\n   *  .map(function(num) { return num * num })\n   *  .value();\n   * // => // [2, 200] (alerted)\n   * // => [4, 40000]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * Enables method chaining on the wrapper object.\n   *\n   * @name chain\n   * @deprecated\n   * @memberOf _\n   * @category Chaining\n   * @returns {Mixed} Returns the wrapper object.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperChain() {\n    this.__chain__ = true;\n    return this;\n  }\n\n  /**\n   * Extracts the wrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @category Chaining\n   * @returns {Mixed} Returns the wrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return this.__wrapped__;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type String\n   */\n  lodash.VERSION = '0.9.1';\n\n  // assign static methods\n  lodash.after = after;\n  lodash.bind = bind;\n  lodash.bindAll = bindAll;\n  lodash.chain = chain;\n  lodash.clone = clone;\n  lodash.compact = compact;\n  lodash.compose = compose;\n  lodash.contains = contains;\n  lodash.countBy = countBy;\n  lodash.debounce = debounce;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.difference = difference;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.extend = extend;\n  lodash.filter = filter;\n  lodash.find = find;\n  lodash.first = first;\n  lodash.flatten = flatten;\n  lodash.forEach = forEach;\n  lodash.forIn = forIn;\n  lodash.forOwn = forOwn;\n  lodash.functions = functions;\n  lodash.groupBy = groupBy;\n  lodash.has = has;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.initial = initial;\n  lodash.intersection = intersection;\n  lodash.invert = invert;\n  lodash.invoke = invoke;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isElement = isElement;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isPlainObject = isPlainObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.keys = keys;\n  lodash.last = last;\n  lodash.lastIndexOf = lastIndexOf;\n  lodash.lateBind = lateBind;\n  lodash.map = map;\n  lodash.max = max;\n  lodash.memoize = memoize;\n  lodash.merge = merge;\n  lodash.min = min;\n  lodash.mixin = mixin;\n  lodash.noConflict = noConflict;\n  lodash.object = object;\n  lodash.omit = omit;\n  lodash.once = once;\n  lodash.pairs = pairs;\n  lodash.partial = partial;\n  lodash.pick = pick;\n  lodash.pluck = pluck;\n  lodash.random = random;\n  lodash.range = range;\n  lodash.reduce = reduce;\n  lodash.reduceRight = reduceRight;\n  lodash.reject = reject;\n  lodash.rest = rest;\n  lodash.result = result;\n  lodash.shuffle = shuffle;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.sortBy = sortBy;\n  lodash.sortedIndex = sortedIndex;\n  lodash.tap = tap;\n  lodash.template = template;\n  lodash.throttle = throttle;\n  lodash.times = times;\n  lodash.toArray = toArray;\n  lodash.unescape = unescape;\n  lodash.union = union;\n  lodash.uniq = uniq;\n  lodash.uniqueId = uniqueId;\n  lodash.values = values;\n  lodash.where = where;\n  lodash.without = without;\n  lodash.wrap = wrap;\n  lodash.zip = zip;\n\n  // assign aliases\n  lodash.all = every;\n  lodash.any = some;\n  lodash.collect = map;\n  lodash.detect = find;\n  lodash.drop = rest;\n  lodash.each = forEach;\n  lodash.foldl = reduce;\n  lodash.foldr = reduceRight;\n  lodash.head = first;\n  lodash.include = contains;\n  lodash.inject = reduce;\n  lodash.methods = functions;\n  lodash.select = filter;\n  lodash.tail = rest;\n  lodash.take = first;\n  lodash.unique = uniq;\n\n  // add pseudo private property to be used and removed during the build process\n  lodash._iteratorTemplate = iteratorTemplate;\n\n  /*--------------------------------------------------------------------------*/\n\n  // add all static functions to `lodash.prototype`\n  mixin(lodash);\n\n  // add `lodash.prototype.chain` after calling `mixin()` to avoid overwriting\n  // it with the wrapped `lodash.chain`\n  lodash.prototype.chain = wrapperChain;\n  lodash.prototype.value = wrapperValue;\n\n  // add all mutator Array functions to the wrapper.\n  forEach(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = arrayRef[methodName];\n\n    lodash.prototype[methodName] = function() {\n      var value = this.__wrapped__;\n      func.apply(value, arguments);\n\n      // avoid array-like object bugs with `Array#shift` and `Array#splice` in\n      // Firefox < 10 and IE < 9\n      if (hasObjectSpliceBug && value.length === 0) {\n        delete value[0];\n      }\n      if (this.__chain__) {\n        value = new lodash(value);\n        value.__chain__ = true;\n      }\n      return value;\n    };\n  });\n\n  // add all accessor Array functions to the wrapper.\n  forEach(['concat', 'join', 'slice'], function(methodName) {\n    var func = arrayRef[methodName];\n\n    lodash.prototype[methodName] = function() {\n      var value = this.__wrapped__,\n          result = func.apply(value, arguments);\n\n      if (this.__chain__) {\n        result = new lodash(result);\n        result.__chain__ = true;\n      }\n      return result;\n    };\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  // some AMD build optimizers, like r.js, check for specific condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash was injected by a third-party script and not intended to be\n    // loaded as a module. The global assignment can be reverted in the Lo-Dash\n    // module via its `noConflict()` method.\n    window._ = lodash;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function() {\n      return lodash;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports) {\n    // in Node.js or RingoJS v0.8.0+\n    if (typeof module == 'object' && module && module.exports == freeExports) {\n      (module.exports = lodash)._ = lodash;\n    }\n    // in Narwhal or RingoJS v0.7.0-\n    else {\n      freeExports._ = lodash;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    window._ = lodash;\n  }\n}(this));\n","//     Backbone.js 0.9.2\n\n//     (c) 2010-2012 Jeremy Ashkenas, DocumentCloud Inc.\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(){\n\n  // Initial Setup\n  // -------------\n\n  // Save a reference to the global object (`window` in the browser, `global`\n  // on the server).\n  var root = this;\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to slice/splice.\n  var slice = Array.prototype.slice;\n  var splice = Array.prototype.splice;\n\n  // The top-level namespace. All public Backbone classes and modules will\n  // be attached to this. Exported for both CommonJS and the browser.\n  var Backbone;\n  if (typeof exports !== 'undefined') {\n    Backbone = exports;\n  } else {\n    Backbone = root.Backbone = {};\n  }\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '0.9.2';\n\n  // Require Underscore, if we're on the server, and it's not already present.\n  var _ = root._;\n  if (!_ && (typeof require !== 'undefined')) _ = require('underscore');\n\n  // For Backbone's purposes, jQuery, Zepto, or Ender owns the `$` variable.\n  var $ = root.jQuery || root.Zepto || root.ender;\n\n  // Set the JavaScript library that will be used for DOM manipulation and\n  // Ajax calls (a.k.a. the `$` variable). By default Backbone will use: jQuery,\n  // Zepto, or Ender; but the `setDomLibrary()` method lets you inject an\n  // alternate JavaScript library (or a mock library for testing your views\n  // outside of a browser).\n  Backbone.setDomLibrary = function(lib) {\n    $ = lib;\n  };\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // -----------------\n\n  // Regular expression used to split event strings\n  var eventSplitter = /\\s+/;\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback functions\n  // to an event; trigger`-ing an event fires all callbacks in succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {\n\n    // Bind one or more space separated events, `events`, to a `callback`\n    // function. Passing `\"all\"` will bind the callback to all events fired.\n    on: function(events, callback, context) {\n\n      var calls, event, node, tail, list;\n      if (!callback) return this;\n      events = events.split(eventSplitter);\n      calls = this._callbacks || (this._callbacks = {});\n\n      // Create an immutable callback list, allowing traversal during\n      // modification.  The tail is an empty object that will always be used\n      // as the next node.\n      while (event = events.shift()) {\n        list = calls[event];\n        node = list ? list.tail : {};\n        node.next = tail = {};\n        node.context = context;\n        node.callback = callback;\n        calls[event] = {tail: tail, next: list ? list.next : node};\n      }\n\n      return this;\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all callbacks\n    // with that function. If `callback` is null, removes all callbacks for the\n    // event. If `events` is null, removes all bound callbacks for all events.\n    off: function(events, callback, context) {\n      var event, calls, node, tail, cb, ctx;\n\n      // No events, or removing *all* events.\n      if (!(calls = this._callbacks)) return;\n      if (!(events || callback || context)) {\n        delete this._callbacks;\n        return this;\n      }\n\n      // Loop through the listed events and contexts, splicing them out of the\n      // linked list of callbacks if appropriate.\n      events = events ? events.split(eventSplitter) : _.keys(calls);\n      while (event = events.shift()) {\n        node = calls[event];\n        delete calls[event];\n        if (!node || !(callback || context)) continue;\n        // Create a new list, omitting the indicated callbacks.\n        tail = node.tail;\n        while ((node = node.next) !== tail) {\n          cb = node.callback;\n          ctx = node.context;\n          if ((callback && cb !== callback) || (context && ctx !== context)) {\n            this.on(event, cb, ctx);\n          }\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(events) {\n      var event, node, calls, tail, args, all, rest;\n      if (!(calls = this._callbacks)) return this;\n      all = calls.all;\n      events = events.split(eventSplitter);\n      rest = slice.call(arguments, 1);\n\n      // For each event, walk through the linked list of callbacks twice,\n      // first to trigger the event, then to trigger any `\"all\"` callbacks.\n      while (event = events.shift()) {\n        if (node = calls[event]) {\n          tail = node.tail;\n          while ((node = node.next) !== tail) {\n            node.callback.apply(node.context || this, rest);\n          }\n        }\n        if (node = all) {\n          tail = node.tail;\n          args = [event].concat(rest);\n          while ((node = node.next) !== tail) {\n            node.callback.apply(node.context || this, args);\n          }\n        }\n      }\n\n      return this;\n    }\n\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Backbone.Model\n  // --------------\n\n  // Create a new model, with defined attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var defaults;\n    attributes || (attributes = {});\n    if (options && options.parse) attributes = this.parse(attributes);\n    if (defaults = getValue(this, 'defaults')) {\n      attributes = _.extend({}, defaults, attributes);\n    }\n    if (options && options.collection) this.collection = options.collection;\n    this.attributes = {};\n    this._escapedAttributes = {};\n    this.cid = _.uniqueId('c');\n    this.changed = {};\n    this._silent = {};\n    this._pending = {};\n    this.set(attributes, {silent: true});\n    // Reset change tracking.\n    this.changed = {};\n    this._silent = {};\n    this._pending = {};\n    this._previousAttributes = _.clone(this.attributes);\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // A hash of attributes that have silently changed since the last time\n    // `change` was called.  Will become pending attributes on the next call.\n    _silent: null,\n\n    // A hash of attributes that have changed since the last `'change'` event\n    // began.\n    _pending: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      var html;\n      if (html = this._escapedAttributes[attr]) return html;\n      var val = this.get(attr);\n      return this._escapedAttributes[attr] = _.escape(val == null ? '' : '' + val);\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"` unless\n    // you choose to silence it.\n    set: function(key, value, options) {\n      var attrs, attr, val;\n\n      // Handle both\n      if (_.isObject(key) || key == null) {\n        attrs = key;\n        options = value;\n      } else {\n        attrs = {};\n        attrs[key] = value;\n      }\n\n      // Extract attributes and options.\n      options || (options = {});\n      if (!attrs) return this;\n      if (attrs instanceof Model) attrs = attrs.attributes;\n      if (options.unset) for (attr in attrs) attrs[attr] = void 0;\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      var changes = options.changes = {};\n      var now = this.attributes;\n      var escaped = this._escapedAttributes;\n      var prev = this._previousAttributes || {};\n\n      // For each `set` attribute...\n      for (attr in attrs) {\n        val = attrs[attr];\n\n        // If the new and current value differ, record the change.\n        if (!_.isEqual(now[attr], val) || (options.unset && _.has(now, attr))) {\n          delete escaped[attr];\n          (options.silent ? this._silent : changes)[attr] = true;\n        }\n\n        // Update or delete the current value.\n        options.unset ? delete now[attr] : now[attr] = val;\n\n        // If the new and previous value differ, record the change.  If not,\n        // then remove changes for this attribute.\n        if (!_.isEqual(prev[attr], val) || (_.has(now, attr) != _.has(prev, attr))) {\n          this.changed[attr] = val;\n          if (!options.silent) this._pending[attr] = true;\n        } else {\n          delete this.changed[attr];\n          delete this._pending[attr];\n        }\n      }\n\n      // Fire the `\"change\"` events.\n      if (!options.silent) this.change(options);\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"` unless you choose\n    // to silence it. `unset` is a noop if the attribute doesn't exist.\n    unset: function(attr, options) {\n      (options || (options = {})).unset = true;\n      return this.set(attr, null, options);\n    },\n\n    // Clear all attributes on the model, firing `\"change\"` unless you choose\n    // to silence it.\n    clear: function(options) {\n      (options || (options = {})).unset = true;\n      return this.set(_.clone(this.attributes), options);\n    },\n\n    // Fetch the model from the server. If the server's representation of the\n    // model differs from its current attributes, they will be overriden,\n    // triggering a `\"change\"` event.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      options.success = function(resp, status, xhr) {\n        if (!model.set(model.parse(resp, xhr), options)) return false;\n        if (success) success(model, resp);\n      };\n      options.error = Backbone.wrapError(options.error, model, options);\n      return (this.sync || Backbone.sync).call(this, 'read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, value, options) {\n      var attrs, current;\n\n      // Handle both `(\"key\", value)` and `({key: value})` -style calls.\n      if (_.isObject(key) || key == null) {\n        attrs = key;\n        options = value;\n      } else {\n        attrs = {};\n        attrs[key] = value;\n      }\n      options = options ? _.clone(options) : {};\n\n      // If we're \"wait\"-ing to set changed attributes, validate early.\n      if (options.wait) {\n        if (!this._validate(attrs, options)) return false;\n        current = _.clone(this.attributes);\n      }\n\n      // Regular saves `set` attributes before persisting to the server.\n      var silentOptions = _.extend({}, options, {silent: true});\n      if (attrs && !this.set(attrs, options.wait ? silentOptions : options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      options.success = function(resp, status, xhr) {\n        var serverAttrs = model.parse(resp, xhr);\n        if (options.wait) {\n          delete options.wait;\n          serverAttrs = _.extend(attrs || {}, serverAttrs);\n        }\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) {\n          success(model, resp);\n        } else {\n          model.trigger('sync', model, resp, options);\n        }\n      };\n\n      // Finish configuring and sending the Ajax request.\n      options.error = Backbone.wrapError(options.error, model, options);\n      var method = this.isNew() ? 'create' : 'update';\n      var xhr = (this.sync || Backbone.sync).call(this, method, this, options);\n      if (options.wait) this.set(current, silentOptions);\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n\n      var triggerDestroy = function() {\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      if (this.isNew()) {\n        triggerDestroy();\n        return false;\n      }\n\n      options.success = function(resp) {\n        if (options.wait) triggerDestroy();\n        if (success) {\n          success(model, resp);\n        } else {\n          model.trigger('sync', model, resp, options);\n        }\n      };\n\n      options.error = Backbone.wrapError(options.error, model, options);\n      var xhr = (this.sync || Backbone.sync).call(this, 'delete', this, options);\n      if (!options.wait) triggerDestroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base = getValue(this, 'urlRoot') || getValue(this.collection, 'url') || urlError();\n      if (this.isNew()) return base;\n      return base + (base.charAt(base.length - 1) == '/' ? '' : '/') + encodeURIComponent(this.id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, xhr) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return this.id == null;\n    },\n\n    // Call this method to manually fire a `\"change\"` event for this model and\n    // a `\"change:attribute\"` event for each changed attribute.\n    // Calling this will cause all objects observing the model to update.\n    change: function(options) {\n      options || (options = {});\n      var changing = this._changing;\n      this._changing = true;\n\n      // Silent changes become pending changes.\n      for (var attr in this._silent) this._pending[attr] = true;\n\n      // Silent changes are triggered.\n      var changes = _.extend({}, options.changes, this._silent);\n      this._silent = {};\n      for (var attr in changes) {\n        this.trigger('change:' + attr, this, this.get(attr), options);\n      }\n      if (changing) return this;\n\n      // Continue firing `\"change\"` events while there are pending changes.\n      while (!_.isEmpty(this._pending)) {\n        this._pending = {};\n        this.trigger('change', this, options);\n        // Pending and silent changes still remain.\n        for (var attr in this.changed) {\n          if (this._pending[attr] || this._silent[attr]) continue;\n          delete this.changed[attr];\n        }\n        this._previousAttributes = _.clone(this.attributes);\n      }\n\n      this._changing = false;\n      return this;\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (!arguments.length) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var val, changed = false, old = this._previousAttributes;\n      for (var attr in diff) {\n        if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n        (changed || (changed = {}))[attr] = val;\n      }\n      return changed;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (!arguments.length || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Check if the model is currently in a valid state. It's only possible to\n    // get into an *invalid* state if you're using silent changes.\n    isValid: function() {\n      return !this.validate(this.attributes);\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. If a specific `error` callback has\n    // been passed, call that instead of firing the general `\"error\"` event.\n    _validate: function(attrs, options) {\n      if (options.silent || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validate(attrs, options);\n      if (!error) return true;\n      if (options && options.error) {\n        options.error(this, error, options);\n      } else {\n        this.trigger('error', this, error, options);\n      }\n      return false;\n    }\n\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // Provides a standard collection class for our sets of models, ordered\n  // or unordered. If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, {silent: true, parse: options.parse});\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model){ return model.toJSON(options); });\n    },\n\n    // Add a model, or list of models to the set. Pass **silent** to avoid\n    // firing the `add` event for every new model.\n    add: function(models, options) {\n      var i, index, length, model, cid, id, cids = {}, ids = {}, dups = [];\n      options || (options = {});\n      models = _.isArray(models) ? models.slice() : [models];\n\n      // Begin by turning bare objects into model references, and preventing\n      // invalid models or duplicate models from being added.\n      for (i = 0, length = models.length; i < length; i++) {\n        if (!(model = models[i] = this._prepareModel(models[i], options))) {\n          throw new Error(\"Can't add an invalid model to a collection\");\n        }\n        cid = model.cid;\n        id = model.id;\n        if (cids[cid] || this._byCid[cid] || ((id != null) && (ids[id] || this._byId[id]))) {\n          dups.push(i);\n          continue;\n        }\n        cids[cid] = ids[id] = model;\n      }\n\n      // Remove duplicates.\n      i = dups.length;\n      while (i--) {\n        models.splice(dups[i], 1);\n      }\n\n      // Listen to added models' events, and index models for lookup by\n      // `id` and by `cid`.\n      for (i = 0, length = models.length; i < length; i++) {\n        (model = models[i]).on('all', this._onModelEvent, this);\n        this._byCid[model.cid] = model;\n        if (model.id != null) this._byId[model.id] = model;\n      }\n\n      // Insert models into the collection, re-sorting if needed, and triggering\n      // `add` events unless silenced.\n      this.length += length;\n      index = options.at != null ? options.at : this.models.length;\n      splice.apply(this.models, [index, 0].concat(models));\n      if (this.comparator) this.sort({silent: true});\n      if (options.silent) return this;\n      for (i = 0, length = this.models.length; i < length; i++) {\n        if (!cids[(model = this.models[i]).cid]) continue;\n        options.index = i;\n        model.trigger('add', model, this, options);\n      }\n      return this;\n    },\n\n    // Remove a model, or a list of models from the set. Pass silent to avoid\n    // firing the `remove` event for every model removed.\n    remove: function(models, options) {\n      var i, l, index, model;\n      options || (options = {});\n      models = _.isArray(models) ? models.slice() : [models];\n      for (i = 0, l = models.length; i < l; i++) {\n        model = this.getByCid(models[i]) || this.get(models[i]);\n        if (!model) continue;\n        delete this._byId[model.id];\n        delete this._byCid[model.cid];\n        index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n        this._removeReference(model);\n      }\n      return this;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      model = this._prepareModel(model, options);\n      this.add(model, options);\n      return model;\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      model = this._prepareModel(model, options);\n      this.add(model, _.extend({at: 0}, options));\n      return model;\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Get a model from the set by id.\n    get: function(id) {\n      if (id == null) return void 0;\n      return this._byId[id.id != null ? id.id : id];\n    },\n\n    // Get a model from the set by client id.\n    getByCid: function(cid) {\n      return cid && this._byCid[cid.cid || cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of `filter`.\n    where: function(attrs) {\n      if (_.isEmpty(attrs)) return [];\n      return this.filter(function(model) {\n        for (var key in attrs) {\n          if (attrs[key] !== model.get(key)) return false;\n        }\n        return true;\n      });\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      options || (options = {});\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      var boundComparator = _.bind(this.comparator, this);\n      if (this.comparator.length == 1) {\n        this.models = this.sortBy(boundComparator);\n      } else {\n        this.models.sort(boundComparator);\n      }\n      if (!options.silent) this.trigger('reset', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.map(this.models, function(model){ return model.get(attr); });\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any `add` or `remove` events. Fires `reset` when finished.\n    reset: function(models, options) {\n      models  || (models = []);\n      options || (options = {});\n      for (var i = 0, l = this.models.length; i < l; i++) {\n        this._removeReference(this.models[i]);\n      }\n      this._reset();\n      this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return this;\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `add: true` is passed, appends the\n    // models to the collection instead of resetting.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === undefined) options.parse = true;\n      var collection = this;\n      var success = options.success;\n      options.success = function(resp, status, xhr) {\n        collection[options.add ? 'add' : 'reset'](collection.parse(resp, xhr), options);\n        if (success) success(collection, resp);\n      };\n      options.error = Backbone.wrapError(options.error, collection, options);\n      return (this.sync || Backbone.sync).call(this, 'read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      var coll = this;\n      options = options ? _.clone(options) : {};\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!options.wait) coll.add(model, options);\n      var success = options.success;\n      options.success = function(nextModel, resp, xhr) {\n        if (options.wait) coll.add(nextModel, options);\n        if (success) {\n          success(nextModel, resp);\n        } else {\n          nextModel.trigger('sync', model, resp, options);\n        }\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, xhr) {\n      return resp;\n    },\n\n    // Proxy to _'s chain. Can't be proxied the same way the rest of the\n    // underscore methods are proxied because it relies on the underscore\n    // constructor.\n    chain: function () {\n      return _(this.models).chain();\n    },\n\n    // Reset all internal state. Called when the collection is reset.\n    _reset: function(options) {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n      this._byCid = {};\n    },\n\n    // Prepare a model or hash of attributes to be added to this collection.\n    _prepareModel: function(model, options) {\n      options || (options = {});\n      if (!(model instanceof Model)) {\n        var attrs = model;\n        options.collection = this;\n        model = new this.model(attrs, options);\n        if (!model._validate(model.attributes, options)) model = false;\n      } else if (!model.collection) {\n        model.collection = this;\n      }\n      return model;\n    },\n\n    // Internal method to remove a model's ties to a collection.\n    _removeReference: function(model) {\n      if (this == model.collection) {\n        delete model.collection;\n      }\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event == 'add' || event == 'remove') && collection != this) return;\n      if (event == 'destroy') {\n        this.remove(model, options);\n      }\n      if (model && event === 'change:' + model.idAttribute) {\n        delete this._byId[model.previous(model.idAttribute)];\n        this._byId[model.id] = model;\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  var methods = ['forEach', 'each', 'map', 'reduce', 'reduceRight', 'find',\n    'detect', 'filter', 'select', 'reject', 'every', 'all', 'some', 'any',\n    'include', 'contains', 'invoke', 'max', 'min', 'sortBy', 'sortedIndex',\n    'toArray', 'size', 'first', 'initial', 'rest', 'last', 'without', 'indexOf',\n    'shuffle', 'lastIndexOf', 'isEmpty', 'groupBy'];\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  _.each(methods, function(method) {\n    Collection.prototype[method] = function() {\n      return _[method].apply(_, [this.models].concat(_.toArray(arguments)));\n    };\n  });\n\n  // Backbone.Router\n  // -------------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var namedParam    = /:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[-[\\]{}()+?.,\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      Backbone.history || (Backbone.history = new History);\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (!callback) callback = this[name];\n      Backbone.history.route(route, _.bind(function(fragment) {\n        var args = this._extractParameters(route, fragment);\n        callback && callback.apply(this, args);\n        this.trigger.apply(this, ['route:' + name].concat(args));\n        Backbone.history.trigger('route', this, name, args);\n      }, this));\n      return this;\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      var routes = [];\n      for (var route in this.routes) {\n        routes.unshift([route, this.routes[route]]);\n      }\n      for (var i = 0, l = routes.length; i < l; i++) {\n        this.route(routes[i][0], routes[i][1], this[routes[i][1]]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(namedParam, '([^\\/]+)')\n                   .replace(splatParam, '(.*?)');\n      return new RegExp('^' + route + '$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted parameters.\n    _extractParameters: function(route, fragment) {\n      return route.exec(fragment).slice(1);\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on URL fragments. If the\n  // browser does not support `onhashchange`, falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n  };\n\n  // Cached regex for cleaning leading hashes and slashes .\n  var routeStripper = /^[#\\/]/;\n\n  // Cached regex for detecting MSIE.\n  var isExplorer = /msie [\\w.]+/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(windowOverride) {\n      var loc = windowOverride ? windowOverride.location : window.location;\n      var match = loc.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the cross-browser normalized URL fragment, either from the URL,\n    // the hash, or the override.\n    getFragment: function(fragment, forcePushState) {\n      if (fragment == null) {\n        if (this._hasPushState || forcePushState) {\n          fragment = window.location.pathname;\n          var search = window.location.search;\n          if (search) fragment += search;\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      if (!fragment.indexOf(this.options.root)) fragment = fragment.substr(this.options.root.length);\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error(\"Backbone.history has already been started\");\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({}, {root: '/'}, this.options, options);\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.options.pushState && window.history && window.history.pushState);\n      var fragment          = this.getFragment();\n      var docMode           = document.documentMode;\n      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));\n\n      if (oldIE) {\n        this.iframe = $('<iframe src=\"javascript:0\" tabindex=\"-1\" />').hide().appendTo('body')[0].contentWindow;\n        this.navigate(fragment);\n      }\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._hasPushState) {\n        $(window).bind('popstate', this.checkUrl);\n      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {\n        $(window).bind('hashchange', this.checkUrl);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      // Determine if we need to change the base url, for a pushState link\n      // opened by a non-pushState browser.\n      this.fragment = fragment;\n      var loc = window.location;\n      var atRoot  = loc.pathname == this.options.root;\n\n      // If we've started off with a route from a `pushState`-enabled browser,\n      // but we're currently in a browser that doesn't support it...\n      if (this._wantsHashChange && this._wantsPushState && !this._hasPushState && !atRoot) {\n        this.fragment = this.getFragment(null, true);\n        window.location.replace(this.options.root + '#' + this.fragment);\n        // Return immediately as browser will do redirect to new url\n        return true;\n\n      // Or if we've started out with a hash-based route, but we're currently\n      // in a browser where it could be `pushState`-based instead...\n      } else if (this._wantsPushState && this._hasPushState && atRoot && loc.hash) {\n        this.fragment = this.getHash().replace(routeStripper, '');\n        window.history.replaceState({}, document.title, loc.protocol + '//' + loc.host + this.options.root + this.fragment);\n      }\n\n      if (!this.options.silent) {\n        return this.loadUrl();\n      }\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      $(window).unbind('popstate', this.checkUrl).unbind('hashchange', this.checkUrl);\n      clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n      if (current == this.fragment && this.iframe) current = this.getFragment(this.getHash(this.iframe));\n      if (current == this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl() || this.loadUrl(this.getHash());\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragmentOverride) {\n      var fragment = this.fragment = this.getFragment(fragmentOverride);\n      var matched = _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n      return matched;\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: options};\n      var frag = (fragment || '').replace(routeStripper, '');\n      if (this.fragment == frag) return;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._hasPushState) {\n        if (frag.indexOf(this.options.root) != 0) frag = this.options.root + frag;\n        this.fragment = frag;\n        window.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, frag);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this.fragment = frag;\n        this._updateHash(window.location, frag, options.replace);\n        if (this.iframe && (frag != this.getFragment(this.getHash(this.iframe)))) {\n          // Opening and closing the iframe tricks IE7 and earlier to push a history entry on hash-tag change.\n          // When replace is true, we don't want this.\n          if(!options.replace) this.iframe.document.open().close();\n          this._updateHash(this.iframe.location, frag, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        window.location.assign(this.options.root + fragment);\n      }\n      if (options.trigger) this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        location.replace(location.toString().replace(/(javascript:|#).*$/, '') + '#' + fragment);\n      } else {\n        location.hash = fragment;\n      }\n    }\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    this._configure(options || {});\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n    this.delegateEvents();\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be prefered to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view from the DOM. Note that the view isn't present in the\n    // DOM by default, so calling this method may be a no-op.\n    remove: function() {\n      this.$el.remove();\n      return this;\n    },\n\n    // For small amounts of DOM Elements, where a full-blown template isn't\n    // needed, use **make** to manufacture elements, one at a time.\n    //\n    //     var el = this.make('li', {'class': 'row'}, this.model.escape('title'));\n    //\n    make: function(tagName, attributes, content) {\n      var el = document.createElement(tagName);\n      if (attributes) $(el).attr(attributes);\n      if (content) $(el).html(content);\n      return el;\n    },\n\n    // Change the view's element (`this.el` property), including event\n    // re-delegation.\n    setElement: function(element, delegate) {\n      if (this.$el) this.undelegateEvents();\n      this.$el = (element instanceof $) ? element : $(element);\n      this.el = this.$el[0];\n      if (delegate !== false) this.delegateEvents();\n      return this;\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save'\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    // This only works for delegate-able events: not `focus`, `blur`, and\n    // not `change`, `submit`, and `reset` in Internet Explorer.\n    delegateEvents: function(events) {\n      if (!(events || (events = getValue(this, 'events')))) return;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[events[key]];\n        if (!method) throw new Error('Method \"' + events[key] + '\" does not exist');\n        var match = key.match(delegateEventSplitter);\n        var eventName = match[1], selector = match[2];\n        method = _.bind(method, this);\n        eventName += '.delegateEvents' + this.cid;\n        if (selector === '') {\n          this.$el.bind(eventName, method);\n        } else {\n          this.$el.delegate(selector, eventName, method);\n        }\n      }\n    },\n\n    // Clears all callbacks previously bound to the view with `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      this.$el.unbind('.delegateEvents' + this.cid);\n    },\n\n    // Performs the initial configuration of a View with a set of options.\n    // Keys with special meaning *(model, collection, id, className)*, are\n    // attached directly to the view.\n    _configure: function(options) {\n      if (this.options) options = _.extend({}, this.options, options);\n      for (var i = 0, l = viewOptions.length; i < l; i++) {\n        var attr = viewOptions[i];\n        if (options[attr]) this[attr] = options[attr];\n      }\n      this.options = options;\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = getValue(this, 'attributes') || {};\n        if (this.id) attrs.id = this.id;\n        if (this.className) attrs['class'] = this.className;\n        this.setElement(this.make(this.tagName, attrs), false);\n      } else {\n        this.setElement(this.el, false);\n      }\n    }\n\n  });\n\n  // The self-propagating extend function that Backbone classes use.\n  var extend = function (protoProps, classProps) {\n    var child = inherits(this, protoProps, classProps);\n    child.extend = this.extend;\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, and view.\n  Model.extend = Collection.extend = Router.extend = View.extend = extend;\n\n  // Backbone.sync\n  // -------------\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    options || (options = {});\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = getValue(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (!options.data && model && (method == 'create' || method == 'update')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(model.toJSON());\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (Backbone.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (Backbone.emulateHTTP) {\n      if (type === 'PUT' || type === 'DELETE') {\n        if (Backbone.emulateJSON) params.data._method = type;\n        params.type = 'POST';\n        params.beforeSend = function(xhr) {\n          xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        };\n      }\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !Backbone.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Make the request, allowing the user to override any Ajax options.\n    return $.ajax(_.extend(params, options));\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  Backbone.wrapError = function(onError, originalModel, options) {\n    return function(model, resp) {\n      resp = model === originalModel ? resp : model;\n      if (onError) {\n        onError(originalModel, resp, options);\n      } else {\n        originalModel.trigger('error', originalModel, resp, options);\n      }\n    };\n  };\n\n  // Helpers\n  // -------\n\n  // Shared empty constructor function to aid in prototype-chain creation.\n  var ctor = function(){};\n\n  // Helper function to correctly set up the prototype chain, for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var inherits = function(parent, protoProps, staticProps) {\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && protoProps.hasOwnProperty('constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ parent.apply(this, arguments); };\n    }\n\n    // Inherit class (static) properties from parent.\n    _.extend(child, parent);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Add static properties to the constructor function, if supplied.\n    if (staticProps) _.extend(child, staticProps);\n\n    // Correctly set child's `prototype.constructor`.\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Helper function to get a value from a Backbone object as a property\n  // or as a function.\n  var getValue = function(object, prop) {\n    if (!(object && object[prop])) return null;\n    return _.isFunction(object[prop]) ? object[prop]() : object[prop];\n  };\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n}).call(this);","(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch || {};\n  var ar = br['auto-reload'] || {};\n  if (!WebSocket || !ar.enabled) return;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=\"stylesheet\"]'))\n        .filter(function(link){\n          return (link != null && link.href != null);\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n    }\n  };\n  var port = ar.port || 9485;\n  var host = (!br['server']) ? window.location.hostname : br['server'];\n  var connection = new WebSocket('ws://' + host + ':' + port);\n  connection.onmessage = function(event) {\n    var message = event.data;\n    var b = window.brunch;\n    if (!b || !b['auto-reload'] || !b['auto-reload'].enabled) return;\n    if (reloaders[message] != null) {\n      reloaders[message]();\n    } else {\n      reloaders.page();\n    }\n  };\n})();\n","\njade = (function(exports){\n/*!\n * Jade - runtime\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Lame Array.isArray() polyfill for now.\n */\n\nif (!Array.isArray) {\n  Array.isArray = function(arr){\n    return '[object Array]' == Object.prototype.toString.call(arr);\n  };\n}\n\n/**\n * Lame Object.keys() polyfill for now.\n */\n\nif (!Object.keys) {\n  Object.keys = function(obj){\n    var arr = [];\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        arr.push(key);\n      }\n    }\n    return arr;\n  }\n}\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = function merge(a, b) {\n  var ac = a['class'];\n  var bc = b['class'];\n\n  if (ac || bc) {\n    ac = ac || [];\n    bc = bc || [];\n    if (!Array.isArray(ac)) ac = [ac];\n    if (!Array.isArray(bc)) bc = [bc];\n    ac = ac.filter(nulls);\n    bc = bc.filter(nulls);\n    a['class'] = ac.concat(bc).join(' ');\n  }\n\n  for (var key in b) {\n    if (key != 'class') {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n};\n\n/**\n * Filter null `val`s.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction nulls(val) {\n  return val != null;\n}\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} escaped\n * @return {String}\n * @api private\n */\n\nexports.attrs = function attrs(obj, escaped){\n  var buf = []\n    , terse = obj.terse;\n\n  delete obj.terse;\n  var keys = Object.keys(obj)\n    , len = keys.length;\n\n  if (len) {\n    buf.push('');\n    for (var i = 0; i < len; ++i) {\n      var key = keys[i]\n        , val = obj[key];\n\n      if ('boolean' == typeof val || null == val) {\n        if (val) {\n          terse\n            ? buf.push(key)\n            : buf.push(key + '=\"' + key + '\"');\n        }\n      } else if (0 == key.indexOf('data') && 'string' != typeof val) {\n        buf.push(key + \"='\" + JSON.stringify(val) + \"'\");\n      } else if ('class' == key && Array.isArray(val)) {\n        buf.push(key + '=\"' + exports.escape(val.join(' ')) + '\"');\n      } else if (escaped && escaped[key]) {\n        buf.push(key + '=\"' + exports.escape(val) + '\"');\n      } else {\n        buf.push(key + '=\"' + val + '\"');\n      }\n    }\n  }\n\n  return buf.join(' ');\n};\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nexports.escape = function escape(html){\n  return String(html)\n    .replace(/&(?!(\\w+|\\#\\d+);)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\n\n/**\n * Re-throw the given `err` in context to the\n * the jade in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @api private\n */\n\nexports.rethrow = function rethrow(err, filename, lineno){\n  if (!filename) throw err;\n\n  var context = 3\n    , str = require('fs').readFileSync(filename, 'utf8')\n    , lines = str.split('\\n')\n    , start = Math.max(lineno - context, 0)\n    , end = Math.min(lines.length, lineno + context);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? '  > ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'Jade') + ':' + lineno\n    + '\\n' + context + '\\n\\n' + err.message;\n  throw err;\n};\n\n  return exports;\n\n})({});\n","/**\n * alertify\n * An unobtrusive customizable JavaScript notification system\n *\n * @author Fabien Doiron <fabien.doiron@gmail.com>\n * @copyright Fabien Doiron 2012\n * @license MIT <http://opensource.org/licenses/mit-license.php>\n * @link http://www.github.com/fabien-d\n * @module alertify\n * @version 0.2.12\n */\n(function(e,t){\"use strict\";var n=e.document,r;r=function(){var r={},i={},s=!1,o={ENTER:13,ESC:27,SPACE:32},u=[],a,f,l,c,h;return i={buttons:{holder:'<nav class=\"alertify-buttons\">{{buttons}}</nav>',submit:'<button type=\"submit\" class=\"alertify-button alertify-button-ok\" id=\"alertify-ok\" />{{ok}}</button>',ok:'<a href=\"#\" class=\"alertify-button alertify-button-ok\" id=\"alertify-ok\">{{ok}}</a>',cancel:'<a href=\"#\" class=\"alertify-button alertify-button-cancel\" id=\"alertify-cancel\">{{cancel}}</a>'},input:'<input type=\"text\" class=\"alertify-text\" id=\"alertify-text\">',message:'<p class=\"alertify-message\">{{message}}</p>',log:'<article class=\"alertify-log{{class}}\">{{message}}</article>'},a=function(e){return n.getElementById(e)},r={labels:{ok:\"OK\",cancel:\"Cancel\"},delay:5e3,addListeners:function(r){var i=a(\"alertify-resetFocus\"),s=a(\"alertify-ok\")||t,u=a(\"alertify-cancel\")||t,f=a(\"alertify-text\")||t,l=a(\"alertify-form\")||t,c=typeof s!=\"undefined\",h=typeof u!=\"undefined\",p=typeof f!=\"undefined\",d=\"\",v=this,m,g,y,b,w;m=function(e){typeof e.preventDefault!=\"undefined\"&&e.preventDefault(),y(e),typeof f!=\"undefined\"&&(d=f.value),typeof r==\"function\"&&r(!0,d)},g=function(e){typeof e.preventDefault!=\"undefined\"&&e.preventDefault(),y(e),typeof r==\"function\"&&r(!1)},y=function(e){v.hide(),v.unbind(n.body,\"keyup\",b),v.unbind(i,\"focus\",w),p&&v.unbind(l,\"submit\",m),c&&v.unbind(s,\"click\",m),h&&v.unbind(u,\"click\",g)},b=function(e){var t=e.keyCode;t===o.SPACE&&!p&&m(e),t===o.ESC&&h&&g(e)},w=function(e){p?f.focus():h?u.focus():s.focus()},this.bind(i,\"focus\",w),c&&this.bind(s,\"click\",m),h&&this.bind(u,\"click\",g),this.bind(n.body,\"keyup\",b),p&&this.bind(l,\"submit\",m),e.setTimeout(function(){f?(f.focus(),f.select()):s.focus()},50)},bind:function(e,t,n){typeof e.addEventListener==\"function\"?e.addEventListener(t,n,!1):e.attachEvent&&e.attachEvent(\"on\"+t,n)},build:function(e){var t=\"\",n=e.type,r=e.message;t+='<div class=\"alertify-dialog\">',n===\"prompt\"&&(t+='<form id=\"alertify-form\">'),t+='<article class=\"alertify-inner\">',t+=i.message.replace(\"{{message}}\",r),n===\"prompt\"&&(t+=i.input),t+=i.buttons.holder,t+=\"</article>\",n===\"prompt\"&&(t+=\"</form>\"),t+='<a id=\"alertify-resetFocus\" class=\"alertify-resetFocus\" href=\"#\">Reset Focus</a>',t+=\"</div>\";switch(n){case\"confirm\":t=t.replace(\"{{buttons}}\",i.buttons.cancel+i.buttons.ok),t=t.replace(\"{{ok}}\",this.labels.ok).replace(\"{{cancel}}\",this.labels.cancel);break;case\"prompt\":t=t.replace(\"{{buttons}}\",i.buttons.cancel+i.buttons.submit),t=t.replace(\"{{ok}}\",this.labels.ok).replace(\"{{cancel}}\",this.labels.cancel);break;case\"alert\":t=t.replace(\"{{buttons}}\",i.buttons.ok),t=t.replace(\"{{ok}}\",this.labels.ok);break;default:}return c.className=\"alertify alertify-show alertify-\"+n,l.className=\"alertify-cover\",t},close:function(e,t){var n=t&&!isNaN(t)?+t:this.delay;this.bind(e,\"click\",function(){h.removeChild(e)}),setTimeout(function(){typeof e!=\"undefined\"&&e.parentNode===h&&h.removeChild(e)},n)},dialog:function(e,t,r,i){f=n.activeElement;var o=function(){if(c&&c.scrollTop!==null)return;o()};if(typeof e!=\"string\")throw new Error(\"message must be a string\");if(typeof t!=\"string\")throw new Error(\"type must be a string\");if(typeof r!=\"undefined\"&&typeof r!=\"function\")throw new Error(\"fn must be a function\");return typeof this.init==\"function\"&&(this.init(),o()),u.push({type:t,message:e,callback:r,placeholder:i}),s||this.setup(),this},extend:function(e){return function(t,n){this.log(t,e,n)}},hide:function(){u.splice(0,1),u.length>0?this.setup():(s=!1,c.className=\"alertify alertify-hide alertify-hidden\",l.className=\"alertify-cover alertify-hidden\",f.focus())},init:function(){n.createElement(\"nav\"),n.createElement(\"article\"),n.createElement(\"section\"),l=n.createElement(\"div\"),l.setAttribute(\"id\",\"alertify-cover\"),l.className=\"alertify-cover alertify-hidden\",n.body.appendChild(l),c=n.createElement(\"section\"),c.setAttribute(\"id\",\"alertify\"),c.className=\"alertify alertify-hidden\",n.body.appendChild(c),h=n.createElement(\"section\"),h.setAttribute(\"id\",\"alertify-logs\"),h.className=\"alertify-logs\",n.body.appendChild(h),n.body.setAttribute(\"tabindex\",\"0\"),delete this.init},log:function(e,t,n){var r=function(){if(h&&h.scrollTop!==null)return;r()};return typeof this.init==\"function\"&&(this.init(),r()),this.notify(e,t,n),this},notify:function(e,t,r){var i=n.createElement(\"article\");i.className=\"alertify-log\"+(typeof t==\"string\"&&t!==\"\"?\" alertify-log-\"+t:\"\"),i.innerHTML=e,h.insertBefore(i,h.firstChild),setTimeout(function(){i.className=i.className+\" alertify-log-show\"},50),this.close(i,r)},set:function(e){var t;if(typeof e!=\"object\"&&e instanceof Array)throw new Error(\"args must be an object\");for(t in e)e.hasOwnProperty(t)&&(this[t]=e[t])},setup:function(){var e=u[0];s=!0,c.innerHTML=this.build(e),typeof e.placeholder==\"string\"&&(a(\"alertify-text\").value=e.placeholder),this.addListeners(e.callback)},unbind:function(e,t,n){typeof e.removeEventListener==\"function\"?e.removeEventListener(t,n,!1):e.detachEvent&&e.detachEvent(\"on\"+t,n)}},{alert:function(e,t){return r.dialog(e,\"alert\",t),this},confirm:function(e,t){return r.dialog(e,\"confirm\",t),this},extend:r.extend,init:r.init,log:function(e,t,n){return r.log(e,t,n),this},prompt:function(e,t,n){return r.dialog(e,\"prompt\",t,n),this},success:function(e,t){return r.log(e,\"success\",t),this},error:function(e,t){return r.log(e,\"error\",t),this},set:function(e){r.set(e)},labels:r.labels}},typeof define==\"function\"?define([],function(){return new r}):typeof e.alertify==\"undefined\"&&(e.alertify=new r)})(this);","/**\n * |-------------------|\n * | Backbone-Mediator |\n * |-------------------|\n *  Backbone-Mediator is freely distributable under the MIT license.\n *\n *  <a href=\"https://github.com/chalbert/Backbone-Mediator\">More details & documentation</a>\n *\n * @author Nicolas Gilbert\n *\n * @requires _\n * @requires Backbone\n */\n(function(factory){\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'backbone'], factory);\n  } else {\n    factory(_, Backbone);\n  }\n\n})(function (_, Backbone){\n  'use strict';\n\n  /**\n   * @static\n   */\n  var channels = {},\n      Subscriber,\n      /** @borrows Backbone.View#delegateEvents */\n      delegateEvents = Backbone.View.prototype.delegateEvents,\n      /** @borrows Backbone.View#delegateEvents */\n      undelegateEvents = Backbone.View.prototype.undelegateEvents;\n\n  /**\n   * @class\n   */\n  Backbone.Mediator = {\n\n    /**\n     * Subscribe to a channel\n     *\n     * @param channel\n     */\n    subscribe: function(channel, subscription, context, once) {\n      if (!channels[channel]) channels[channel] = [];\n      channels[channel].push({fn: subscription, context: context || this, once: once});\n    },\n\n    /**\n     * Trigger all callbacks for a channel\n     *\n     * @param channel\n     * @params N Extra parametter to pass to handler\n     */\n    publish: function(channel) {\n      if (!channels[channel]) return;\n\n      var args = [].slice.call(arguments, 1),\n          subscription;\n\n      for (var i = 0; i < channels[channel].length; i++) {\n        subscription = channels[channel][i];\n        subscription.fn.apply(subscription.context, args);\n        if (subscription.once) {\n          Backbone.Mediator.unsubscribe(channel, subscription.fn, subscription.context);\n          i--;\n        }\n      }\n    },\n\n    /**\n     * Cancel subscription\n     *\n     * @param channel\n     * @param fn\n     * @param context\n     */\n\n    unsubscribe: function(channel, fn, context){\n      if (!channels[channel]) return;\n\n      var subscription;\n      for (var i = 0; i < channels[channel].length; i++) {\n        subscription = channels[channel][i];\n        if (subscription.fn === fn && subscription.context === context) {\n          channels[channel].splice(i, 1);\n          i--;\n        }\n      }\n    },\n\n    /**\n     * Subscribing to one event only\n     *\n     * @param channel\n     * @param subscription\n     * @param context\n     */\n    subscribeOnce: function (channel, subscription, context) {\n      Backbone.Mediator.subscribe(channel, subscription, context, true);\n    }\n\n  };\n\n  /**\n   * Allow to define convention-based subscriptions\n   * as an 'subscriptions' hash on a view. Subscriptions\n   * can then be easily setup and cleaned.\n   *\n   * @class\n   */\n\n\n  Subscriber = {\n\n    /**\n     * Extend delegateEvents() to set subscriptions\n     */\n    delegateEvents: function(){\n      delegateEvents.apply(this, arguments);\n      this.setSubscriptions();\n    },\n\n    /**\n     * Extend undelegateEvents() to unset subscriptions\n     */\n    undelegateEvents: function(){\n      undelegateEvents.apply(this, arguments);\n      this.unsetSubscriptions();\n    },\n\n    /** @property {Object} List of subscriptions, to be defined */\n    subscriptions: {},\n\n    /**\n     * Subscribe to each subscription\n     * @param {Object} [subscriptions] An optional hash of subscription to add\n     */\n\n    setSubscriptions: function(subscriptions){\n      if (subscriptions) _.extend(this.subscriptions || {}, subscriptions);\n      subscriptions = subscriptions || this.subscriptions;\n      if (!subscriptions || _.isEmpty(subscriptions)) return;\n      // Just to be sure we don't set duplicate\n      this.unsetSubscriptions(subscriptions);\n\n      _.each(subscriptions, function(subscription, channel){\n        var once;\n        if (subscription.$once) {\n          subscription = subscription.$once;\n          once = true;\n        }\n        if (_.isString(subscription)) {\n          subscription = this[subscription];\n        }\n        Backbone.Mediator.subscribe(channel, subscription, this, once);\n      }, this);\n    },\n\n    /**\n     * Unsubscribe to each subscription\n     * @param {Object} [subscriptions] An optional hash of subscription to remove\n     */\n    unsetSubscriptions: function(subscriptions){\n      subscriptions = subscriptions || this.subscriptions;\n      if (!subscriptions || _.isEmpty(subscriptions)) return;\n      _.each(subscriptions, function(subscription, channel){\n        if (_.isString(subscription)) {\n          subscription = this[subscription];\n        }\n        Backbone.Mediator.unsubscribe(channel, subscription.$once || subscription, this);\n      }, this);\n    }\n  };\n\n  /**\n   * @lends Backbone.View.prototype\n   */\n  _.extend(Backbone.View.prototype, Subscriber);\n\n  /**\n   * @lends Backbone.Mediator\n   */\n  _.extend(Backbone.Mediator, {\n    /**\n     * Shortcut for publish\n     * @function\n     */\n    pub: Backbone.Mediator.publish,\n    /**\n     * Shortcut for subscribe\n     * @function\n     */\n    sub: Backbone.Mediator.subscribe\n  });\n\n  return Backbone;\n\n});\n","/*\nListJS Beta 0.2.0\nBy Jonny Strömberg (www.jonnystromberg.com, www.listjs.com)\nmodified version for cozy-bookmarks (https://github.com/Piour/cozy-bookmarks)\n\nOBS. The API is not frozen. It MAY change!\n\nLicense (MIT)\n\nCopyright (c) 2011 Jonny Strömberg http://jonnystromberg.com\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of the Software,\nand to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n(function (window, $, undefined) {\n    \"use strict\";\n    var document = window.document,\n        h,\n        List;\n\n    List = function (id, options) {\n        var self = this,\n            init,\n            Item,\n            sortButtons,\n            events = { 'updated': [] };\n\n        this.listContainer = (typeof(id) === 'string') ?\n                document.getElementById(id) :\n                id;\n\n        if (!this.listContainer) {\n            return;\n        }\n\n        this.items = [];\n        this.visibleItems = [];\n        this.matchingItems = [];\n        this.searched = false;\n\n        this.list = null;\n\n        this.page = options.page || 200;\n        this.i = options.i || 1;\n\n        init = {\n            start: function (options) {\n                this.classes(options);\n                this.callbacks(options);\n                this.items.start(options);\n                self.update();\n            },\n            classes: function (options) {\n                options.listClass = options.listClass || 'list';\n                options.searchClass = options.searchClass || 'search';\n                options.sortClass = options.sortClass || 'sort';\n            },\n            callbacks: function (options) {\n                self.list = h.getByClass(options.listClass,\n                                         self.listContainer,\n                                         true);\n                h.addEvent(h.getByClass(options.searchClass,\n                                        self.listContainer),\n                           'keyup',\n                           self.search);\n                sortButtons = h.getByClass(options.sortClass,\n                                           self.listContainer);\n                h.addEvent(sortButtons, 'click', self.sort);\n            },\n            items: {\n                start: function (options) {\n                    if (options.valueNames) {\n                        this.index(this.get(), options.valueNames);\n                    }\n                },\n                get: function () {\n                    var nodes = self.list.childNodes,\n                        items = [],\n                        nodeLength = nodes.length,\n                        i;\n\n                    for (i = 0; i < nodeLength; i++) {\n                        // Only textnodes have a data attribute\n                        if (nodes[i].data === undefined) {\n                            items.push(nodes[i]);\n                        }\n                    }\n                    return items;\n                },\n                index: function (itemElements, valueNames) {\n                    var itemElementsLength = itemElements.length,\n                        i;\n                    for (i = 0; i < itemElementsLength; i++) {\n                        self.items.push(new Item(valueNames, itemElements[i]));\n                    }\n                }\n            }\n        };\n\n        this.add = function (values) {\n            var added = [],\n                valuesLength,\n                i,\n                item;\n            if (values[0] === undefined) {\n                values = [values];\n            }\n            valuesLength = values.length;\n            for (i = 0; i < valuesLength; i++) {\n                item = null;\n                if (values[i] instanceof Item) {\n                    item = values[i];\n                    item.reload();\n                } else {\n                    item = new Item(values[i].values, values[i].el);\n                }\n                self.items.push(item);\n                added.push(item);\n            }\n            self.update();\n            return added;\n        };\n\n        this.show = function (i, page) {\n            this.i = i;\n            this.page = page;\n            self.update();\n        };\n\n        this.remove = function (valueName, value) {\n            var found = 0,\n                selfItemsLength = self.items.length,\n                i;\n            for (i = 0; i < selfItemsLength; i++) {\n                if (self.items[i].values()[valueName] === value) {\n                    self.items.splice(i, 1);\n                    selfItemsLength--;\n                    found++;\n                }\n            }\n            self.update();\n            return found;\n        };\n\n        this.get = function (valueName, value) {\n            var matchedItems = [],\n                selfItemsLength = self.items.length,\n                i,\n                item,\n                elem;\n            for (i = 0; i < selfItemsLength; i++) {\n                item = self.items[i];\n                if (item.values()[valueName] === value) {\n                    matchedItems.push(item);\n                }\n            }\n            if (matchedItems.length === 0) {\n                elem = null;\n            } else if (matchedItems.length === 1) {\n                elem = matchedItems[0];\n            } else {\n                elem = matchedItems;\n            }\n            return elem;\n        };\n\n        this.sort = function (valueName, options) {\n            var value = null,\n                target = valueName.currentTarget || valueName.srcElement,\n                isAsc = false,\n                asc = 'asc',\n                desc = 'desc',\n                options = options || {},\n                i;\n\n            if (target === undefined) {\n                value = valueName;\n                isAsc = options.asc || false;\n            } else {\n                value = h.getAttribute(target, 'data-sort');\n                if (!value) {\n                    value = h.getAttribute(target.parentNode, 'data-sort');\n                }\n                isAsc = h.hasClass(target, asc) ? false : true;\n            }\n            h.removeClass(target, asc);\n            h.removeClass(target, desc);\n            if (isAsc) {\n                if (target !== undefined) {\n                    h.addClass(target, asc);\n                }\n                isAsc = true;\n            } else {\n                if (target !== undefined) {\n                    h.addClass(target, desc);\n                }\n                isAsc = false;\n            }\n\n            if (!options.sortFunction) {\n                options.sortFunction = function (a, b) {\n                    return h.\n                        sorter.\n                        alphanum(a.values()[value].toLowerCase(),\n                                 b.values()[value].toLowerCase(),\n                                 isAsc);\n                };\n            }\n            self.items.sort(options.sortFunction);\n            self.update(true);\n        };\n\n        this.search = function (searchString, columns) {\n            self.i = 1; // Reset paging\n            var matching = [],\n                found,\n                item,\n                text,\n                values,\n                is,\n                isLength,\n                columns = (columns === undefined) ?\n                        self.items[0].values() :\n                        columns,\n                searchString = (searchString === undefined) ?\n                        \"\" :\n                        searchString,\n                target = searchString.target || searchString.srcElement,\n                k,\n                j;\n\n            searchString = (target === undefined) ?\n                    (String() + searchString).toLowerCase() :\n                    (String() + target.value).toLowerCase();\n            is = self.items;\n            isLength = is.length;\n\n            searchString =\n                searchString.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n            if (searchString === \"\") {\n                self.reset.search();\n                self.searched = false;\n                self.update();\n            } else {\n                self.searched = true;\n\n                for (k = 0; k < isLength; k++) {\n                    found = false;\n                    item = is[k];\n                    values = item.values();\n\n                    for (j in columns) {\n                        if (values.hasOwnProperty(j) && columns[j] !== null) {\n                            text = (values[j] !== null) ?\n                                    values[j].toString().toLowerCase() :\n                                    \"\";\n                            if ((searchString !== \"\") &&\n                                (text.search(searchString) > -1)) {\n                                found = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (found) {\n                        item.found = true;\n                        matching.push(item);\n                    } else {\n                        item.found = false;\n                    }\n                }\n                self.update();\n            }\n            return self.visibleItems;\n        };\n\n        this.size = function () {\n            return self.items.length;\n        };\n\n        this.clear = function () {\n            self.items = [];\n        };\n\n        this.on = function (event, callback) {\n            events[event].push(callback);\n        };\n\n        this.trigger = function (event) {\n            var i = events[event].length;\n            while (i--) {\n                events[event][i]();\n            }\n        };\n\n        this.reset = {\n            search: function () {\n                var is = self.items,\n                    il = is.length;\n                while (il--) {\n                    is[il].found = false;\n                }\n            }\n        };\n\n        this.update = function (reload) {\n            var is = self.items,\n                i,\n                isLength = is.length,\n                listSource = h.getByClass(options.listClass,\n                                          this.listContainer,\n                                          true);\n\n            self.visibleItems = [];\n            self.matchingItems = [];\n            if (reload) {\n                if (listSource.hasChildNodes()) {\n                    while (listSource.childNodes.length >= 1) {\n                        listSource.removeChild(listSource.firstChild);\n                    }\n                }\n            }\n            for (i = 0; i < isLength; i++) {\n                if (is[i].matching() &&\n                    ((self.matchingItems.length + 1) >= self.i &&\n                      self.visibleItems.length < self.page)) {\n                    is[i].show();\n                    self.visibleItems.push(is[i]);\n                    self.matchingItems.push(is[i]);\n                } else if (is[i].matching()) {\n                    self.matchingItems.push(is[i]);\n                    is[i].hide();\n                } else {\n                    is[i].hide();\n                }\n                if (reload) {\n                    $(listSource).append($(is[i].elm));\n                }\n            }\n            self.trigger('updated');\n        };\n\n        Item = function (initValues, element) {\n            var item = this,\n                values = {},\n                init = function (initValues, element) {\n                    var _values = {},\n                        elm,\n                        i,\n                        initValuesLength = initValues.length;\n                    if (element === undefined) {\n                        item.values(initValues);\n                    } else {\n                        item.elm = element;\n                        for (i = 0; i < initValuesLength; i++) {\n                            elm = h.getByClass(initValues[i], item.elm, true);\n                            _values[initValues[i]] = elm ?  elm.innerHTML : \"\";\n                        }\n                        item.values(_values);\n                    }\n                };\n\n            this.found = false;\n\n            this.values = function (newValues) {\n                var name;\n                if (newValues !== undefined) {\n                    for (name in newValues) {\n                        values[name] = newValues[name];\n                    }\n                } else {\n                    return values;\n                }\n            };\n\n            this.show = function () {\n                $(item.elm).show();\n            };\n\n            this.hide = function () {\n                $(item.elm).hide();\n            };\n\n            this.matching = function () {\n                return ((self.searched && item.found) || (!self.searched));\n            };\n\n            this.visible = function () {\n                return (item.elm.parentNode) ? true : false;\n            };\n\n            init(initValues, element);\n        };\n\n        init.start(options);\n    };\n\n    h = {\n        /*\n        * Cross browser getElementsByClassName, which uses native\n        * if it exists. Modified version of Dustin Diaz function:\n        * http://www.dustindiaz.com/getelementsbyclass\n        */\n        getByClass: (function () {\n            if (document.getElementsByClassName) {\n                return function (searchClass, node, single) {\n                    var byClass;\n                    if (single) {\n                        byClass = node.getElementsByClassName(searchClass)[0];\n                    } else {\n                        byClass = node.getElementsByClassName(searchClass);\n                    }\n                    return byClass;\n                };\n            } else {\n                return function (searchClass, node, single) {\n                    var classElements = [],\n                        tag = '*',\n                        els,\n                        elsLen,\n                        pattern,\n                        i,\n                        j;\n                    if (node === null) {\n                        node = document;\n                    }\n                    els = node.getElementsByTagName(tag);\n                    elsLen = els.length;\n                    pattern = new RegExp(\"(^|\\\\s)\" + searchClass + \"(\\\\s|$)\");\n                    for (i = 0, j = 0; i < elsLen; i++) {\n                        if (pattern.test(els[i].className)) {\n                            if (single) {\n                                classElements = els[i];\n                                break;\n                            } else {\n                                classElements[j] = els[i];\n                                j++;\n                            }\n                        }\n                    }\n                    return classElements;\n                };\n            }\n        }()),\n\n        /* (elm, 'event' callback)\n         * Source: http://net.tutsplus.com/tutorials/javascript-ajax/javascript-from-null-cross-browser-event-binding/\n         */\n        addEvent: (function (window, document) {\n            if (document.addEventListener) {\n                return function (elem, type, cb) {\n                    var len,\n                        i;\n                    if ((elem &&\n                         !(elem instanceof Array) &&\n                         !elem.length &&\n                         !h.isNodeList(elem) &&\n                         (elem.length !== 0)) ||\n                        elem === window) {\n                        elem.addEventListener(type, cb, false);\n                    } else if (elem && elem[0] !== undefined) {\n                        len = elem.length;\n                        for (i = 0; i < len; i++) {\n                            h.addEvent(elem[i], type, cb);\n                        }\n                    }\n                };\n            } else if (document.attachEvent) {\n                return function (elem, type, cb) {\n                    var len,\n                        i;\n                    if ((elem &&\n                         !(elem instanceof Array) &&\n                         !elem.length &&\n                         !h.isNodeList(elem) &&\n                         (elem.length !== 0)) ||\n                        elem === window) {\n                        elem.attachEvent('on' + type,\n                                         function () {\n                                             return cb.call(elem,\n                                                            window.event);\n                                         });\n                    } else if (elem && elem[0] !== undefined) {\n                        len = elem.length;\n                        for (i = 0; i < len; i++) {\n                            h.addEvent(elem[i], type, cb);\n                        }\n                    }\n                };\n            }\n        }(this, document)),\n\n        /* (elm, attribute)\n         * Source: http://stackoverflow.com/questions/3755227/cross-browser-javascript-getattribute-method\n         */\n        getAttribute: function (ele, attr) {\n            var result = (ele.getAttribute && ele.getAttribute(attr)) || null,\n                attrs,\n                length,\n                i;\n\n            if (!result) {\n                attrs = ele.attributes;\n                length = attrs.length;\n                for (i = 0; i < length; i++) {\n                    if (attr[i] !== undefined) {\n                        if (attr[i].nodeName === attr) {\n                            result = attr[i].nodeValue;\n                        }\n                    }\n                }\n            }\n            return result;\n        },\n\n        /* http://stackoverflow.com/questions/7238177/detect-htmlcollection-nodelist-in-javascript\n         */\n        isNodeList: function (nodes) {\n            var result = Object.prototype.toString.call(nodes);\n            if (typeof nodes === 'object' &&\n                /^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(result) &&\n               (nodes.length === 0 ||\n                (typeof nodes[0] === \"object\" && nodes[0].nodeType > 0))) {\n                return true;\n            }\n            return false;\n        },\n\n        hasClass: function (ele, classN) {\n            var classes = this.getAttribute(ele, 'class') ||\n                          this.getAttribute(ele, 'className') ||\n                          \"\";\n            return (classes.search(classN) > -1);\n        },\n\n        addClass: function (ele, classN) {\n            var classes;\n            if (!this.hasClass(ele, classN)) {\n                classes = this.getAttribute(ele, 'class') ||\n                          this.getAttribute(ele, 'className') ||\n                          \"\";\n                classes = classes + ' ' + classN + ' ';\n                classes = classes.replace(/\\s{2,}/g, ' ');\n                ele.setAttribute('class', classes);\n            }\n        },\n\n        removeClass: function (ele, classN) {\n            var classes;\n            if (this.hasClass(ele, classN)) {\n                classes = this.getAttribute(ele, 'class') ||\n                          this.getAttribute(ele, 'className') ||\n                          \"\";\n                classes = classes.replace(classN, '');\n                ele.setAttribute('class', classes);\n            }\n        },\n\n        /*\n         * The sort function.\n         * From http://my.opera.com/GreyWyvern/blog/show.dml/1671288\n         */\n        sorter: {\n            alphanum: function (a, b, asc) {\n                var aa, bb, c, d, x;\n                if (a === undefined || a === null) {\n                    a = \"\";\n                }\n                if (b === undefined || b === null) {\n                    b = \"\";\n                }\n                a = a.toString().replace(/&(lt|gt);/g,\n                                         function (strMatch, p1) {\n                                             return (p1 === \"lt\") ? \"<\" : \">\";\n                                         });\n                a = a.replace(/<\\/?[^>]+(>|$)/g, \"\");\n\n                b = b.toString().replace(/&(lt|gt);/g,\n                                         function (strMatch, p1) {\n                                             return (p1 === \"lt\") ? \"<\" : \">\";\n                                         });\n                b = b.replace(/<\\/?[^>]+(>|$)/g, \"\");\n\n                aa = this.chunkify(a);\n                bb = this.chunkify(b);\n\n                for (x = 0; aa[x] && bb[x]; x++) {\n                    if (aa[x] !== bb[x]) {\n                        c = Number(aa[x]);\n                        d = Number(bb[x]);\n                        if (asc) {\n                            if (c === aa[x] && d === bb[x]) {\n                                return c - d;\n                            } else {\n                                return (aa[x] > bb[x]) ? 1 : -1;\n                            }\n                        } else {\n                            if (c === aa[x] && d === bb[x]) {\n                                return d - c; // c - d;\n                            } else {\n                                return (aa[x] > bb[x]) ? -1 : 1; // 1 : -1;\n                            }\n                        }\n                    }\n                }\n                return aa.length - bb.length;\n            },\n\n            chunkify: function (t) {\n                var tz = [],\n                    x = 0,\n                    y = -1,\n                    n = 0,\n                    i,\n                    j,\n                    m;\n\n                while (i = (j = t.charAt(x++)).charCodeAt(0)) {\n                    m = (i === 45 || i === 46 || (i >= 48 && i <= 57));\n                    if (m !== n) {\n                        tz[++y] = \"\";\n                        n = m;\n                    }\n                    tz[y] += j;\n                }\n                return tz;\n            }\n        }\n    };\n\n    window.List = List;\n    window.ListJsHelpers = h;\n}(window, $));\n"]}